
stm32f7xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000021b0  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000013c  080023b0  080023b0  000123b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080024ec  080024ec  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  080024ec  080024ec  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  080024ec  080024ec  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080024ec  080024ec  000124ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080024f0  080024f0  000124f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  080024f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000d8  20000070  08002564  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000148  08002564  00020148  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001c64  00000000  00000000  0002009a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000544  00000000  00000000  00021cfe  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000001a0  00000000  00000000  00022248  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000168  00000000  00000000  000223e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000022d7  00000000  00000000  00022550  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000013e5  00000000  00000000  00024827  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000098e5  00000000  00000000  00025c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f4f1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000110c  00000000  00000000  0002f56c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	20000070 	.word	0x20000070
 800021c:	00000000 	.word	0x00000000
 8000220:	08002398 	.word	0x08002398

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	20000074 	.word	0x20000074
 800023c:	08002398 	.word	0x08002398

08000240 <memchr>:
 8000240:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000244:	2a10      	cmp	r2, #16
 8000246:	db2b      	blt.n	80002a0 <memchr+0x60>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	d008      	beq.n	8000260 <memchr+0x20>
 800024e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000252:	3a01      	subs	r2, #1
 8000254:	428b      	cmp	r3, r1
 8000256:	d02d      	beq.n	80002b4 <memchr+0x74>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	b342      	cbz	r2, 80002b0 <memchr+0x70>
 800025e:	d1f6      	bne.n	800024e <memchr+0xe>
 8000260:	b4f0      	push	{r4, r5, r6, r7}
 8000262:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000266:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800026a:	f022 0407 	bic.w	r4, r2, #7
 800026e:	f07f 0700 	mvns.w	r7, #0
 8000272:	2300      	movs	r3, #0
 8000274:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000278:	3c08      	subs	r4, #8
 800027a:	ea85 0501 	eor.w	r5, r5, r1
 800027e:	ea86 0601 	eor.w	r6, r6, r1
 8000282:	fa85 f547 	uadd8	r5, r5, r7
 8000286:	faa3 f587 	sel	r5, r3, r7
 800028a:	fa86 f647 	uadd8	r6, r6, r7
 800028e:	faa5 f687 	sel	r6, r5, r7
 8000292:	b98e      	cbnz	r6, 80002b8 <memchr+0x78>
 8000294:	d1ee      	bne.n	8000274 <memchr+0x34>
 8000296:	bcf0      	pop	{r4, r5, r6, r7}
 8000298:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800029c:	f002 0207 	and.w	r2, r2, #7
 80002a0:	b132      	cbz	r2, 80002b0 <memchr+0x70>
 80002a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002a6:	3a01      	subs	r2, #1
 80002a8:	ea83 0301 	eor.w	r3, r3, r1
 80002ac:	b113      	cbz	r3, 80002b4 <memchr+0x74>
 80002ae:	d1f8      	bne.n	80002a2 <memchr+0x62>
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr
 80002b4:	3801      	subs	r0, #1
 80002b6:	4770      	bx	lr
 80002b8:	2d00      	cmp	r5, #0
 80002ba:	bf06      	itte	eq
 80002bc:	4635      	moveq	r5, r6
 80002be:	3803      	subeq	r0, #3
 80002c0:	3807      	subne	r0, #7
 80002c2:	f015 0f01 	tst.w	r5, #1
 80002c6:	d107      	bne.n	80002d8 <memchr+0x98>
 80002c8:	3001      	adds	r0, #1
 80002ca:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ce:	bf02      	ittt	eq
 80002d0:	3001      	addeq	r0, #1
 80002d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002d6:	3001      	addeq	r0, #1
 80002d8:	bcf0      	pop	{r4, r5, r6, r7}
 80002da:	3801      	subs	r0, #1
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop

080002e0 <strlen>:
 80002e0:	4603      	mov	r3, r0
 80002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002e6:	2a00      	cmp	r2, #0
 80002e8:	d1fb      	bne.n	80002e2 <strlen+0x2>
 80002ea:	1a18      	subs	r0, r3, r0
 80002ec:	3801      	subs	r0, #1
 80002ee:	4770      	bx	lr

080002f0 <GPIO_PeriClockControl>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 80002f0:	b480      	push	{r7}
 80002f2:	b083      	sub	sp, #12
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
 80002f8:	460b      	mov	r3, r1
 80002fa:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE){
 80002fc:	78fb      	ldrb	r3, [r7, #3]
 80002fe:	2b01      	cmp	r3, #1
 8000300:	d178      	bne.n	80003f4 <GPIO_PeriClockControl+0x104>

		if(pGPIOx == GPIOA){
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a7a      	ldr	r2, [pc, #488]	; (80004f0 <GPIO_PeriClockControl+0x200>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 800030a:	4b7a      	ldr	r3, [pc, #488]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a79      	ldr	r2, [pc, #484]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000310:	f043 0301 	orr.w	r3, r3, #1
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
					GPIOK_PCLK_DI();
				}

	}

}
 8000316:	e0e5      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOB){
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a77      	ldr	r2, [pc, #476]	; (80004f8 <GPIO_PeriClockControl+0x208>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000320:	4b74      	ldr	r3, [pc, #464]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a73      	ldr	r2, [pc, #460]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000326:	f043 0302 	orr.w	r3, r3, #2
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e0da      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOC){
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a72      	ldr	r2, [pc, #456]	; (80004fc <GPIO_PeriClockControl+0x20c>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000336:	4b6f      	ldr	r3, [pc, #444]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a6e      	ldr	r2, [pc, #440]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800033c:	f043 0304 	orr.w	r3, r3, #4
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e0cf      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOD){
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a6e      	ldr	r2, [pc, #440]	; (8000500 <GPIO_PeriClockControl+0x210>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800034c:	4b69      	ldr	r3, [pc, #420]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a68      	ldr	r2, [pc, #416]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000352:	f043 0308 	orr.w	r3, r3, #8
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e0c4      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOE){
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a69      	ldr	r2, [pc, #420]	; (8000504 <GPIO_PeriClockControl+0x214>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000362:	4b64      	ldr	r3, [pc, #400]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a63      	ldr	r2, [pc, #396]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000368:	f043 0310 	orr.w	r3, r3, #16
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e0b9      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOF){
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a61      	ldr	r2, [pc, #388]	; (80004f8 <GPIO_PeriClockControl+0x208>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d106      	bne.n	8000386 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000378:	4b5e      	ldr	r3, [pc, #376]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a5d      	ldr	r2, [pc, #372]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800037e:	f043 0320 	orr.w	r3, r3, #32
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	e0ae      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOG){
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a5c      	ldr	r2, [pc, #368]	; (80004fc <GPIO_PeriClockControl+0x20c>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d106      	bne.n	800039c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800038e:	4b59      	ldr	r3, [pc, #356]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000392:	4a58      	ldr	r2, [pc, #352]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000394:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000398:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039a:	e0a3      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOH){
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a5a      	ldr	r2, [pc, #360]	; (8000508 <GPIO_PeriClockControl+0x218>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d106      	bne.n	80003b2 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003a4:	4b53      	ldr	r3, [pc, #332]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a8:	4a52      	ldr	r2, [pc, #328]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003aa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b0:	e098      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOI){
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a55      	ldr	r2, [pc, #340]	; (800050c <GPIO_PeriClockControl+0x21c>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d106      	bne.n	80003c8 <GPIO_PeriClockControl+0xd8>
			GPIOI_PCLK_EN();
 80003ba:	4b4e      	ldr	r3, [pc, #312]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003be:	4a4d      	ldr	r2, [pc, #308]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c6:	e08d      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOJ){
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a51      	ldr	r2, [pc, #324]	; (8000510 <GPIO_PeriClockControl+0x220>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d106      	bne.n	80003de <GPIO_PeriClockControl+0xee>
			GPIOJ_PCLK_EN();
 80003d0:	4b48      	ldr	r3, [pc, #288]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d4:	4a47      	ldr	r2, [pc, #284]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003d6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80003da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003dc:	e082      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOK){
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4a4c      	ldr	r2, [pc, #304]	; (8000514 <GPIO_PeriClockControl+0x224>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d17e      	bne.n	80004e4 <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_EN();
 80003e6:	4b43      	ldr	r3, [pc, #268]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ea:	4a42      	ldr	r2, [pc, #264]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003ec:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80003f0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f2:	e077      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
		if(pGPIOx == GPIOA){
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a3e      	ldr	r2, [pc, #248]	; (80004f0 <GPIO_PeriClockControl+0x200>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d106      	bne.n	800040a <GPIO_PeriClockControl+0x11a>
					GPIOA_PCLK_DI();
 80003fc:	4b3d      	ldr	r3, [pc, #244]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80003fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000400:	4a3c      	ldr	r2, [pc, #240]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000402:	f023 0301 	bic.w	r3, r3, #1
 8000406:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000408:	e06c      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOB){
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4a3a      	ldr	r2, [pc, #232]	; (80004f8 <GPIO_PeriClockControl+0x208>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d106      	bne.n	8000420 <GPIO_PeriClockControl+0x130>
					GPIOB_PCLK_DI();
 8000412:	4b38      	ldr	r3, [pc, #224]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000414:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000416:	4a37      	ldr	r2, [pc, #220]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000418:	f023 0302 	bic.w	r3, r3, #2
 800041c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041e:	e061      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOC){
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	4a36      	ldr	r2, [pc, #216]	; (80004fc <GPIO_PeriClockControl+0x20c>)
 8000424:	4293      	cmp	r3, r2
 8000426:	d106      	bne.n	8000436 <GPIO_PeriClockControl+0x146>
					GPIOC_PCLK_DI();
 8000428:	4b32      	ldr	r3, [pc, #200]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800042a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042c:	4a31      	ldr	r2, [pc, #196]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800042e:	f023 0304 	bic.w	r3, r3, #4
 8000432:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000434:	e056      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOD){
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4a31      	ldr	r2, [pc, #196]	; (8000500 <GPIO_PeriClockControl+0x210>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d106      	bne.n	800044c <GPIO_PeriClockControl+0x15c>
					GPIOD_PCLK_DI();
 800043e:	4b2d      	ldr	r3, [pc, #180]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000442:	4a2c      	ldr	r2, [pc, #176]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000444:	f023 0308 	bic.w	r3, r3, #8
 8000448:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044a:	e04b      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOE){
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a2d      	ldr	r2, [pc, #180]	; (8000504 <GPIO_PeriClockControl+0x214>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d106      	bne.n	8000462 <GPIO_PeriClockControl+0x172>
					GPIOE_PCLK_DI();
 8000454:	4b27      	ldr	r3, [pc, #156]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000458:	4a26      	ldr	r2, [pc, #152]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800045a:	f023 0310 	bic.w	r3, r3, #16
 800045e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000460:	e040      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOF){
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4a24      	ldr	r2, [pc, #144]	; (80004f8 <GPIO_PeriClockControl+0x208>)
 8000466:	4293      	cmp	r3, r2
 8000468:	d106      	bne.n	8000478 <GPIO_PeriClockControl+0x188>
					GPIOF_PCLK_DI();
 800046a:	4b22      	ldr	r3, [pc, #136]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800046c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046e:	4a21      	ldr	r2, [pc, #132]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000470:	f023 0320 	bic.w	r3, r3, #32
 8000474:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000476:	e035      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOG){
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	4a20      	ldr	r2, [pc, #128]	; (80004fc <GPIO_PeriClockControl+0x20c>)
 800047c:	4293      	cmp	r3, r2
 800047e:	d106      	bne.n	800048e <GPIO_PeriClockControl+0x19e>
					GPIOG_PCLK_DI();
 8000480:	4b1c      	ldr	r3, [pc, #112]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000484:	4a1b      	ldr	r2, [pc, #108]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000486:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800048a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800048c:	e02a      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOH){
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	4a1d      	ldr	r2, [pc, #116]	; (8000508 <GPIO_PeriClockControl+0x218>)
 8000492:	4293      	cmp	r3, r2
 8000494:	d106      	bne.n	80004a4 <GPIO_PeriClockControl+0x1b4>
					GPIOH_PCLK_DI();
 8000496:	4b17      	ldr	r3, [pc, #92]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 8000498:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800049a:	4a16      	ldr	r2, [pc, #88]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 800049c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a2:	e01f      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOI){
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	4a19      	ldr	r2, [pc, #100]	; (800050c <GPIO_PeriClockControl+0x21c>)
 80004a8:	4293      	cmp	r3, r2
 80004aa:	d106      	bne.n	80004ba <GPIO_PeriClockControl+0x1ca>
					GPIOI_PCLK_DI();
 80004ac:	4b11      	ldr	r3, [pc, #68]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80004ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b0:	4a10      	ldr	r2, [pc, #64]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80004b2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004b8:	e014      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOJ){
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	4a14      	ldr	r2, [pc, #80]	; (8000510 <GPIO_PeriClockControl+0x220>)
 80004be:	4293      	cmp	r3, r2
 80004c0:	d106      	bne.n	80004d0 <GPIO_PeriClockControl+0x1e0>
					GPIOJ_PCLK_DI();
 80004c2:	4b0c      	ldr	r3, [pc, #48]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80004c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004c6:	4a0b      	ldr	r2, [pc, #44]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80004c8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80004cc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ce:	e009      	b.n	80004e4 <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOK){
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	4a10      	ldr	r2, [pc, #64]	; (8000514 <GPIO_PeriClockControl+0x224>)
 80004d4:	4293      	cmp	r3, r2
 80004d6:	d105      	bne.n	80004e4 <GPIO_PeriClockControl+0x1f4>
					GPIOK_PCLK_DI();
 80004d8:	4b06      	ldr	r3, [pc, #24]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80004da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004dc:	4a05      	ldr	r2, [pc, #20]	; (80004f4 <GPIO_PeriClockControl+0x204>)
 80004de:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80004e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004e4:	bf00      	nop
 80004e6:	370c      	adds	r7, #12
 80004e8:	46bd      	mov	sp, r7
 80004ea:	bc80      	pop	{r7}
 80004ec:	4770      	bx	lr
 80004ee:	bf00      	nop
 80004f0:	40020000 	.word	0x40020000
 80004f4:	40023800 	.word	0x40023800
 80004f8:	40020400 	.word	0x40020400
 80004fc:	40020800 	.word	0x40020800
 8000500:	40020c00 	.word	0x40020c00
 8000504:	40021000 	.word	0x40021000
 8000508:	40021c00 	.word	0x40021c00
 800050c:	40022000 	.word	0x40022000
 8000510:	40022400 	.word	0x40022400
 8000514:	40022800 	.word	0x40022800

08000518 <GPIO_Init>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000518:	b580      	push	{r7, lr}
 800051a:	b086      	sub	sp, #24
 800051c:	af00      	add	r7, sp, #0
 800051e:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 8000520:	2300      	movs	r3, #0
 8000522:	617b      	str	r3, [r7, #20]

	// Enable the GPIO Clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	2101      	movs	r1, #1
 800052a:	4618      	mov	r0, r3
 800052c:	f7ff fee0 	bl	80002f0 <GPIO_PeriClockControl>

	// 1. Configure the Mode of the GPIO pin
	if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	795b      	ldrb	r3, [r3, #5]
 8000534:	2b03      	cmp	r3, #3
 8000536:	d81f      	bhi.n	8000578 <GPIO_Init+0x60>
		// Non-Interrupt Mode

		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	795b      	ldrb	r3, [r3, #5]
 800053c:	461a      	mov	r2, r3
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	791b      	ldrb	r3, [r3, #4]
 8000542:	005b      	lsls	r3, r3, #1
 8000544:	fa02 f303 	lsl.w	r3, r2, r3
 8000548:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx -> MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // setting
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	681a      	ldr	r2, [r3, #0]
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	791b      	ldrb	r3, [r3, #4]
 8000554:	4619      	mov	r1, r3
 8000556:	2303      	movs	r3, #3
 8000558:	408b      	lsls	r3, r1
 800055a:	43db      	mvns	r3, r3
 800055c:	4619      	mov	r1, r3
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	400a      	ands	r2, r1
 8000564:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx -> MODER |= temp;
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	6819      	ldr	r1, [r3, #0]
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	697a      	ldr	r2, [r7, #20]
 8000572:	430a      	orrs	r2, r1
 8000574:	601a      	str	r2, [r3, #0]
 8000576:	e0df      	b.n	8000738 <GPIO_Init+0x220>

	}else{
		// Interrupt Mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	795b      	ldrb	r3, [r3, #5]
 800057c:	2b04      	cmp	r3, #4
 800057e:	d117      	bne.n	80005b0 <GPIO_Init+0x98>

			// 1. Configure FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000580:	4b51      	ldr	r3, [pc, #324]	; (80006c8 <GPIO_Init+0x1b0>)
 8000582:	68db      	ldr	r3, [r3, #12]
 8000584:	687a      	ldr	r2, [r7, #4]
 8000586:	7912      	ldrb	r2, [r2, #4]
 8000588:	4611      	mov	r1, r2
 800058a:	2201      	movs	r2, #1
 800058c:	408a      	lsls	r2, r1
 800058e:	4611      	mov	r1, r2
 8000590:	4a4d      	ldr	r2, [pc, #308]	; (80006c8 <GPIO_Init+0x1b0>)
 8000592:	430b      	orrs	r3, r1
 8000594:	60d3      	str	r3, [r2, #12]

			// Clear corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000596:	4b4c      	ldr	r3, [pc, #304]	; (80006c8 <GPIO_Init+0x1b0>)
 8000598:	689b      	ldr	r3, [r3, #8]
 800059a:	687a      	ldr	r2, [r7, #4]
 800059c:	7912      	ldrb	r2, [r2, #4]
 800059e:	4611      	mov	r1, r2
 80005a0:	2201      	movs	r2, #1
 80005a2:	408a      	lsls	r2, r1
 80005a4:	43d2      	mvns	r2, r2
 80005a6:	4611      	mov	r1, r2
 80005a8:	4a47      	ldr	r2, [pc, #284]	; (80006c8 <GPIO_Init+0x1b0>)
 80005aa:	400b      	ands	r3, r1
 80005ac:	6093      	str	r3, [r2, #8]
 80005ae:	e035      	b.n	800061c <GPIO_Init+0x104>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	795b      	ldrb	r3, [r3, #5]
 80005b4:	2b05      	cmp	r3, #5
 80005b6:	d117      	bne.n	80005e8 <GPIO_Init+0xd0>

			// 1. Configure RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b8:	4b43      	ldr	r3, [pc, #268]	; (80006c8 <GPIO_Init+0x1b0>)
 80005ba:	689b      	ldr	r3, [r3, #8]
 80005bc:	687a      	ldr	r2, [r7, #4]
 80005be:	7912      	ldrb	r2, [r2, #4]
 80005c0:	4611      	mov	r1, r2
 80005c2:	2201      	movs	r2, #1
 80005c4:	408a      	lsls	r2, r1
 80005c6:	4611      	mov	r1, r2
 80005c8:	4a3f      	ldr	r2, [pc, #252]	; (80006c8 <GPIO_Init+0x1b0>)
 80005ca:	430b      	orrs	r3, r1
 80005cc:	6093      	str	r3, [r2, #8]

			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ce:	4b3e      	ldr	r3, [pc, #248]	; (80006c8 <GPIO_Init+0x1b0>)
 80005d0:	68db      	ldr	r3, [r3, #12]
 80005d2:	687a      	ldr	r2, [r7, #4]
 80005d4:	7912      	ldrb	r2, [r2, #4]
 80005d6:	4611      	mov	r1, r2
 80005d8:	2201      	movs	r2, #1
 80005da:	408a      	lsls	r2, r1
 80005dc:	43d2      	mvns	r2, r2
 80005de:	4611      	mov	r1, r2
 80005e0:	4a39      	ldr	r2, [pc, #228]	; (80006c8 <GPIO_Init+0x1b0>)
 80005e2:	400b      	ands	r3, r1
 80005e4:	60d3      	str	r3, [r2, #12]
 80005e6:	e019      	b.n	800061c <GPIO_Init+0x104>


		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	795b      	ldrb	r3, [r3, #5]
 80005ec:	2b06      	cmp	r3, #6
 80005ee:	d115      	bne.n	800061c <GPIO_Init+0x104>

			// 1. Configure FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005f0:	4b35      	ldr	r3, [pc, #212]	; (80006c8 <GPIO_Init+0x1b0>)
 80005f2:	68db      	ldr	r3, [r3, #12]
 80005f4:	687a      	ldr	r2, [r7, #4]
 80005f6:	7912      	ldrb	r2, [r2, #4]
 80005f8:	4611      	mov	r1, r2
 80005fa:	2201      	movs	r2, #1
 80005fc:	408a      	lsls	r2, r1
 80005fe:	4611      	mov	r1, r2
 8000600:	4a31      	ldr	r2, [pc, #196]	; (80006c8 <GPIO_Init+0x1b0>)
 8000602:	430b      	orrs	r3, r1
 8000604:	60d3      	str	r3, [r2, #12]

			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000606:	4b30      	ldr	r3, [pc, #192]	; (80006c8 <GPIO_Init+0x1b0>)
 8000608:	68db      	ldr	r3, [r3, #12]
 800060a:	687a      	ldr	r2, [r7, #4]
 800060c:	7912      	ldrb	r2, [r2, #4]
 800060e:	4611      	mov	r1, r2
 8000610:	2201      	movs	r2, #1
 8000612:	408a      	lsls	r2, r1
 8000614:	4611      	mov	r1, r2
 8000616:	4a2c      	ldr	r2, [pc, #176]	; (80006c8 <GPIO_Init+0x1b0>)
 8000618:	430b      	orrs	r3, r1
 800061a:	60d3      	str	r3, [r2, #12]


		}

		// 2. Configure GPIO port selection in SYSCFG_EXTIR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	791b      	ldrb	r3, [r3, #4]
 8000620:	089b      	lsrs	r3, r3, #2
 8000622:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	791b      	ldrb	r3, [r3, #4]
 8000628:	f003 0303 	and.w	r3, r3, #3
 800062c:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	4a26      	ldr	r2, [pc, #152]	; (80006cc <GPIO_Init+0x1b4>)
 8000634:	4293      	cmp	r3, r2
 8000636:	d05b      	beq.n	80006f0 <GPIO_Init+0x1d8>
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	4a24      	ldr	r2, [pc, #144]	; (80006d0 <GPIO_Init+0x1b8>)
 800063e:	4293      	cmp	r3, r2
 8000640:	d040      	beq.n	80006c4 <GPIO_Init+0x1ac>
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	4a23      	ldr	r2, [pc, #140]	; (80006d4 <GPIO_Init+0x1bc>)
 8000648:	4293      	cmp	r3, r2
 800064a:	d039      	beq.n	80006c0 <GPIO_Init+0x1a8>
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	4a21      	ldr	r2, [pc, #132]	; (80006d8 <GPIO_Init+0x1c0>)
 8000652:	4293      	cmp	r3, r2
 8000654:	d032      	beq.n	80006bc <GPIO_Init+0x1a4>
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	681b      	ldr	r3, [r3, #0]
 800065a:	4a20      	ldr	r2, [pc, #128]	; (80006dc <GPIO_Init+0x1c4>)
 800065c:	4293      	cmp	r3, r2
 800065e:	d02b      	beq.n	80006b8 <GPIO_Init+0x1a0>
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	4a1a      	ldr	r2, [pc, #104]	; (80006d0 <GPIO_Init+0x1b8>)
 8000666:	4293      	cmp	r3, r2
 8000668:	d024      	beq.n	80006b4 <GPIO_Init+0x19c>
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	4a19      	ldr	r2, [pc, #100]	; (80006d4 <GPIO_Init+0x1bc>)
 8000670:	4293      	cmp	r3, r2
 8000672:	d01d      	beq.n	80006b0 <GPIO_Init+0x198>
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	4a19      	ldr	r2, [pc, #100]	; (80006e0 <GPIO_Init+0x1c8>)
 800067a:	4293      	cmp	r3, r2
 800067c:	d016      	beq.n	80006ac <GPIO_Init+0x194>
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	4a18      	ldr	r2, [pc, #96]	; (80006e4 <GPIO_Init+0x1cc>)
 8000684:	4293      	cmp	r3, r2
 8000686:	d00f      	beq.n	80006a8 <GPIO_Init+0x190>
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	4a16      	ldr	r2, [pc, #88]	; (80006e8 <GPIO_Init+0x1d0>)
 800068e:	4293      	cmp	r3, r2
 8000690:	d008      	beq.n	80006a4 <GPIO_Init+0x18c>
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	4a15      	ldr	r2, [pc, #84]	; (80006ec <GPIO_Init+0x1d4>)
 8000698:	4293      	cmp	r3, r2
 800069a:	d101      	bne.n	80006a0 <GPIO_Init+0x188>
 800069c:	230a      	movs	r3, #10
 800069e:	e028      	b.n	80006f2 <GPIO_Init+0x1da>
 80006a0:	2300      	movs	r3, #0
 80006a2:	e026      	b.n	80006f2 <GPIO_Init+0x1da>
 80006a4:	2309      	movs	r3, #9
 80006a6:	e024      	b.n	80006f2 <GPIO_Init+0x1da>
 80006a8:	2308      	movs	r3, #8
 80006aa:	e022      	b.n	80006f2 <GPIO_Init+0x1da>
 80006ac:	2307      	movs	r3, #7
 80006ae:	e020      	b.n	80006f2 <GPIO_Init+0x1da>
 80006b0:	2306      	movs	r3, #6
 80006b2:	e01e      	b.n	80006f2 <GPIO_Init+0x1da>
 80006b4:	2305      	movs	r3, #5
 80006b6:	e01c      	b.n	80006f2 <GPIO_Init+0x1da>
 80006b8:	2304      	movs	r3, #4
 80006ba:	e01a      	b.n	80006f2 <GPIO_Init+0x1da>
 80006bc:	2303      	movs	r3, #3
 80006be:	e018      	b.n	80006f2 <GPIO_Init+0x1da>
 80006c0:	2302      	movs	r3, #2
 80006c2:	e016      	b.n	80006f2 <GPIO_Init+0x1da>
 80006c4:	2301      	movs	r3, #1
 80006c6:	e014      	b.n	80006f2 <GPIO_Init+0x1da>
 80006c8:	40013c00 	.word	0x40013c00
 80006cc:	40020000 	.word	0x40020000
 80006d0:	40020400 	.word	0x40020400
 80006d4:	40020800 	.word	0x40020800
 80006d8:	40020c00 	.word	0x40020c00
 80006dc:	40021000 	.word	0x40021000
 80006e0:	40021c00 	.word	0x40021c00
 80006e4:	40022000 	.word	0x40022000
 80006e8:	40022400 	.word	0x40022400
 80006ec:	40022800 	.word	0x40022800
 80006f0:	2300      	movs	r3, #0
 80006f2:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();
 80006f4:	4b5f      	ldr	r3, [pc, #380]	; (8000874 <GPIO_Init+0x35c>)
 80006f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006f8:	4a5e      	ldr	r2, [pc, #376]	; (8000874 <GPIO_Init+0x35c>)
 80006fa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80006fe:	6453      	str	r3, [r2, #68]	; 0x44

		SYSCFG->EXTICR[temp1] |= portcode << (temp2*4);
 8000700:	4a5d      	ldr	r2, [pc, #372]	; (8000878 <GPIO_Init+0x360>)
 8000702:	7cfb      	ldrb	r3, [r7, #19]
 8000704:	3302      	adds	r3, #2
 8000706:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800070a:	7c79      	ldrb	r1, [r7, #17]
 800070c:	7cbb      	ldrb	r3, [r7, #18]
 800070e:	009b      	lsls	r3, r3, #2
 8000710:	fa01 f303 	lsl.w	r3, r1, r3
 8000714:	4618      	mov	r0, r3
 8000716:	4958      	ldr	r1, [pc, #352]	; (8000878 <GPIO_Init+0x360>)
 8000718:	7cfb      	ldrb	r3, [r7, #19]
 800071a:	4302      	orrs	r2, r0
 800071c:	3302      	adds	r3, #2
 800071e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// 3. Enable EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000722:	4b56      	ldr	r3, [pc, #344]	; (800087c <GPIO_Init+0x364>)
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	687a      	ldr	r2, [r7, #4]
 8000728:	7912      	ldrb	r2, [r2, #4]
 800072a:	4611      	mov	r1, r2
 800072c:	2201      	movs	r2, #1
 800072e:	408a      	lsls	r2, r1
 8000730:	4611      	mov	r1, r2
 8000732:	4a52      	ldr	r2, [pc, #328]	; (800087c <GPIO_Init+0x364>)
 8000734:	430b      	orrs	r3, r1
 8000736:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 8000738:	2300      	movs	r3, #0
 800073a:	617b      	str	r3, [r7, #20]

	// 2. Configure the Speed
	temp = pGPIOHandle-> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	799b      	ldrb	r3, [r3, #6]
 8000740:	461a      	mov	r2, r3
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	791b      	ldrb	r3, [r3, #4]
 8000746:	005b      	lsls	r3, r3, #1
 8000748:	fa02 f303 	lsl.w	r3, r2, r3
 800074c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	681b      	ldr	r3, [r3, #0]
 8000752:	689a      	ldr	r2, [r3, #8]
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	791b      	ldrb	r3, [r3, #4]
 8000758:	4619      	mov	r1, r3
 800075a:	2303      	movs	r3, #3
 800075c:	408b      	lsls	r3, r1
 800075e:	43db      	mvns	r3, r3
 8000760:	4619      	mov	r1, r3
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	400a      	ands	r2, r1
 8000768:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx -> OSPEEDR |= temp;
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	681b      	ldr	r3, [r3, #0]
 800076e:	6899      	ldr	r1, [r3, #8]
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	697a      	ldr	r2, [r7, #20]
 8000776:	430a      	orrs	r2, r1
 8000778:	609a      	str	r2, [r3, #8]

	temp = 0;
 800077a:	2300      	movs	r3, #0
 800077c:	617b      	str	r3, [r7, #20]

	// 3. Configure the PuPd settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	79db      	ldrb	r3, [r3, #7]
 8000782:	461a      	mov	r2, r3
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	791b      	ldrb	r3, [r3, #4]
 8000788:	005b      	lsls	r3, r3, #1
 800078a:	fa02 f303 	lsl.w	r3, r2, r3
 800078e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	68da      	ldr	r2, [r3, #12]
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	791b      	ldrb	r3, [r3, #4]
 800079a:	4619      	mov	r1, r3
 800079c:	2303      	movs	r3, #3
 800079e:	408b      	lsls	r3, r1
 80007a0:	43db      	mvns	r3, r3
 80007a2:	4619      	mov	r1, r3
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	400a      	ands	r2, r1
 80007aa:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx -> PUPDR |= temp;
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	68d9      	ldr	r1, [r3, #12]
 80007b2:	687b      	ldr	r3, [r7, #4]
 80007b4:	681b      	ldr	r3, [r3, #0]
 80007b6:	697a      	ldr	r2, [r7, #20]
 80007b8:	430a      	orrs	r2, r1
 80007ba:	60da      	str	r2, [r3, #12]

	temp = 0;
 80007bc:	2300      	movs	r3, #0
 80007be:	617b      	str	r3, [r7, #20]

	// 4. Configure the OPType
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	7a1b      	ldrb	r3, [r3, #8]
 80007c4:	461a      	mov	r2, r3
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	791b      	ldrb	r3, [r3, #4]
 80007ca:	fa02 f303 	lsl.w	r3, r2, r3
 80007ce:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	685a      	ldr	r2, [r3, #4]
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	791b      	ldrb	r3, [r3, #4]
 80007da:	4619      	mov	r1, r3
 80007dc:	2301      	movs	r3, #1
 80007de:	408b      	lsls	r3, r1
 80007e0:	43db      	mvns	r3, r3
 80007e2:	4619      	mov	r1, r3
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	681b      	ldr	r3, [r3, #0]
 80007e8:	400a      	ands	r2, r1
 80007ea:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx -> OTYPER |= temp;
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	681b      	ldr	r3, [r3, #0]
 80007f0:	6859      	ldr	r1, [r3, #4]
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	697a      	ldr	r2, [r7, #20]
 80007f8:	430a      	orrs	r2, r1
 80007fa:	605a      	str	r2, [r3, #4]

	temp = 0;
 80007fc:	2300      	movs	r3, #0
 80007fe:	617b      	str	r3, [r7, #20]

	// 5. Configure the ALT Functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	795b      	ldrb	r3, [r3, #5]
 8000804:	2b02      	cmp	r3, #2
 8000806:	d131      	bne.n	800086c <GPIO_Init+0x354>

		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	791b      	ldrb	r3, [r3, #4]
 800080c:	08db      	lsrs	r3, r3, #3
 800080e:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	791b      	ldrb	r3, [r3, #4]
 8000814:	f003 0307 	and.w	r3, r3, #7
 8000818:	73fb      	strb	r3, [r7, #15]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << 4 * temp2);
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	681b      	ldr	r3, [r3, #0]
 800081e:	7c3a      	ldrb	r2, [r7, #16]
 8000820:	3208      	adds	r2, #8
 8000822:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000826:	7bfb      	ldrb	r3, [r7, #15]
 8000828:	009b      	lsls	r3, r3, #2
 800082a:	220f      	movs	r2, #15
 800082c:	fa02 f303 	lsl.w	r3, r2, r3
 8000830:	43db      	mvns	r3, r3
 8000832:	4618      	mov	r0, r3
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	7c3a      	ldrb	r2, [r7, #16]
 800083a:	4001      	ands	r1, r0
 800083c:	3208      	adds	r2, #8
 800083e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000842:	687b      	ldr	r3, [r7, #4]
 8000844:	681b      	ldr	r3, [r3, #0]
 8000846:	7c3a      	ldrb	r2, [r7, #16]
 8000848:	3208      	adds	r2, #8
 800084a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	7a5b      	ldrb	r3, [r3, #9]
 8000852:	461a      	mov	r2, r3
 8000854:	7bfb      	ldrb	r3, [r7, #15]
 8000856:	009b      	lsls	r3, r3, #2
 8000858:	fa02 f303 	lsl.w	r3, r2, r3
 800085c:	4618      	mov	r0, r3
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	681b      	ldr	r3, [r3, #0]
 8000862:	7c3a      	ldrb	r2, [r7, #16]
 8000864:	4301      	orrs	r1, r0
 8000866:	3208      	adds	r2, #8
 8000868:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 800086c:	bf00      	nop
 800086e:	3718      	adds	r7, #24
 8000870:	46bd      	mov	sp, r7
 8000872:	bd80      	pop	{r7, pc}
 8000874:	40023800 	.word	0x40023800
 8000878:	40013800 	.word	0x40013800
 800087c:	40013c00 	.word	0x40013c00

08000880 <GPIO_ReadFromInputPin>:
 * @return					- value of the input data (0 or 1)
 *
 * @note					- None
 *
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000880:	b480      	push	{r7}
 8000882:	b085      	sub	sp, #20
 8000884:	af00      	add	r7, sp, #0
 8000886:	6078      	str	r0, [r7, #4]
 8000888:	460b      	mov	r3, r1
 800088a:	70fb      	strb	r3, [r7, #3]

	uint8_t value;

	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 800088c:	687b      	ldr	r3, [r7, #4]
 800088e:	691a      	ldr	r2, [r3, #16]
 8000890:	78fb      	ldrb	r3, [r7, #3]
 8000892:	fa22 f303 	lsr.w	r3, r2, r3
 8000896:	b2db      	uxtb	r3, r3
 8000898:	f003 0301 	and.w	r3, r3, #1
 800089c:	73fb      	strb	r3, [r7, #15]

	return value;
 800089e:	7bfb      	ldrb	r3, [r7, #15]

}
 80008a0:	4618      	mov	r0, r3
 80008a2:	3714      	adds	r7, #20
 80008a4:	46bd      	mov	sp, r7
 80008a6:	bc80      	pop	{r7}
 80008a8:	4770      	bx	lr
	...

080008ac <SPI_PeriClockControl>:
 * @return					- None
 *
 * @note					- None
 *
 */
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi){
 80008ac:	b480      	push	{r7}
 80008ae:	b083      	sub	sp, #12
 80008b0:	af00      	add	r7, sp, #0
 80008b2:	6078      	str	r0, [r7, #4]
 80008b4:	460b      	mov	r3, r1
 80008b6:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE){
 80008b8:	78fb      	ldrb	r3, [r7, #3]
 80008ba:	2b01      	cmp	r3, #1
 80008bc:	d141      	bne.n	8000942 <SPI_PeriClockControl+0x96>

			if(pSPIx == SPI1){
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	4a43      	ldr	r2, [pc, #268]	; (80009d0 <SPI_PeriClockControl+0x124>)
 80008c2:	4293      	cmp	r3, r2
 80008c4:	d106      	bne.n	80008d4 <SPI_PeriClockControl+0x28>
				SPI1_PCLK_EN();
 80008c6:	4b43      	ldr	r3, [pc, #268]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80008c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80008ca:	4a42      	ldr	r2, [pc, #264]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80008cc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80008d0:	6453      	str	r3, [r2, #68]	; 0x44
				SPI6_PCLK_DI();
			}

		}

}
 80008d2:	e077      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI2){
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	4a40      	ldr	r2, [pc, #256]	; (80009d8 <SPI_PeriClockControl+0x12c>)
 80008d8:	4293      	cmp	r3, r2
 80008da:	d106      	bne.n	80008ea <SPI_PeriClockControl+0x3e>
				SPI2_PCLK_EN();
 80008dc:	4b3d      	ldr	r3, [pc, #244]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80008de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80008e0:	4a3c      	ldr	r2, [pc, #240]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80008e2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80008e6:	6413      	str	r3, [r2, #64]	; 0x40
}
 80008e8:	e06c      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI3){
 80008ea:	687b      	ldr	r3, [r7, #4]
 80008ec:	4a3b      	ldr	r2, [pc, #236]	; (80009dc <SPI_PeriClockControl+0x130>)
 80008ee:	4293      	cmp	r3, r2
 80008f0:	d106      	bne.n	8000900 <SPI_PeriClockControl+0x54>
				SPI3_PCLK_EN();
 80008f2:	4b38      	ldr	r3, [pc, #224]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80008f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80008f6:	4a37      	ldr	r2, [pc, #220]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80008f8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80008fc:	6413      	str	r3, [r2, #64]	; 0x40
}
 80008fe:	e061      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI4){
 8000900:	687b      	ldr	r3, [r7, #4]
 8000902:	4a37      	ldr	r2, [pc, #220]	; (80009e0 <SPI_PeriClockControl+0x134>)
 8000904:	4293      	cmp	r3, r2
 8000906:	d106      	bne.n	8000916 <SPI_PeriClockControl+0x6a>
				SPI4_PCLK_EN();
 8000908:	4b32      	ldr	r3, [pc, #200]	; (80009d4 <SPI_PeriClockControl+0x128>)
 800090a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800090c:	4a31      	ldr	r2, [pc, #196]	; (80009d4 <SPI_PeriClockControl+0x128>)
 800090e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000912:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000914:	e056      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI5){
 8000916:	687b      	ldr	r3, [r7, #4]
 8000918:	4a32      	ldr	r2, [pc, #200]	; (80009e4 <SPI_PeriClockControl+0x138>)
 800091a:	4293      	cmp	r3, r2
 800091c:	d106      	bne.n	800092c <SPI_PeriClockControl+0x80>
				SPI5_PCLK_EN();
 800091e:	4b2d      	ldr	r3, [pc, #180]	; (80009d4 <SPI_PeriClockControl+0x128>)
 8000920:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000922:	4a2c      	ldr	r2, [pc, #176]	; (80009d4 <SPI_PeriClockControl+0x128>)
 8000924:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000928:	6453      	str	r3, [r2, #68]	; 0x44
}
 800092a:	e04b      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI6){
 800092c:	687b      	ldr	r3, [r7, #4]
 800092e:	4a2e      	ldr	r2, [pc, #184]	; (80009e8 <SPI_PeriClockControl+0x13c>)
 8000930:	4293      	cmp	r3, r2
 8000932:	d147      	bne.n	80009c4 <SPI_PeriClockControl+0x118>
				SPI6_PCLK_EN();
 8000934:	4b27      	ldr	r3, [pc, #156]	; (80009d4 <SPI_PeriClockControl+0x128>)
 8000936:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000938:	4a26      	ldr	r2, [pc, #152]	; (80009d4 <SPI_PeriClockControl+0x128>)
 800093a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800093e:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000940:	e040      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			if(pSPIx == SPI1){
 8000942:	687b      	ldr	r3, [r7, #4]
 8000944:	4a22      	ldr	r2, [pc, #136]	; (80009d0 <SPI_PeriClockControl+0x124>)
 8000946:	4293      	cmp	r3, r2
 8000948:	d106      	bne.n	8000958 <SPI_PeriClockControl+0xac>
				SPI1_PCLK_DI();
 800094a:	4b22      	ldr	r3, [pc, #136]	; (80009d4 <SPI_PeriClockControl+0x128>)
 800094c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800094e:	4a21      	ldr	r2, [pc, #132]	; (80009d4 <SPI_PeriClockControl+0x128>)
 8000950:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000954:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000956:	e035      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI2){
 8000958:	687b      	ldr	r3, [r7, #4]
 800095a:	4a1f      	ldr	r2, [pc, #124]	; (80009d8 <SPI_PeriClockControl+0x12c>)
 800095c:	4293      	cmp	r3, r2
 800095e:	d106      	bne.n	800096e <SPI_PeriClockControl+0xc2>
				SPI2_PCLK_DI();
 8000960:	4b1c      	ldr	r3, [pc, #112]	; (80009d4 <SPI_PeriClockControl+0x128>)
 8000962:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000964:	4a1b      	ldr	r2, [pc, #108]	; (80009d4 <SPI_PeriClockControl+0x128>)
 8000966:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800096a:	6413      	str	r3, [r2, #64]	; 0x40
}
 800096c:	e02a      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI3){
 800096e:	687b      	ldr	r3, [r7, #4]
 8000970:	4a1a      	ldr	r2, [pc, #104]	; (80009dc <SPI_PeriClockControl+0x130>)
 8000972:	4293      	cmp	r3, r2
 8000974:	d106      	bne.n	8000984 <SPI_PeriClockControl+0xd8>
				SPI3_PCLK_DI();
 8000976:	4b17      	ldr	r3, [pc, #92]	; (80009d4 <SPI_PeriClockControl+0x128>)
 8000978:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800097a:	4a16      	ldr	r2, [pc, #88]	; (80009d4 <SPI_PeriClockControl+0x128>)
 800097c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000980:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000982:	e01f      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI4){
 8000984:	687b      	ldr	r3, [r7, #4]
 8000986:	4a16      	ldr	r2, [pc, #88]	; (80009e0 <SPI_PeriClockControl+0x134>)
 8000988:	4293      	cmp	r3, r2
 800098a:	d106      	bne.n	800099a <SPI_PeriClockControl+0xee>
				SPI4_PCLK_DI();
 800098c:	4b11      	ldr	r3, [pc, #68]	; (80009d4 <SPI_PeriClockControl+0x128>)
 800098e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000990:	4a10      	ldr	r2, [pc, #64]	; (80009d4 <SPI_PeriClockControl+0x128>)
 8000992:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000996:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000998:	e014      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI5){
 800099a:	687b      	ldr	r3, [r7, #4]
 800099c:	4a11      	ldr	r2, [pc, #68]	; (80009e4 <SPI_PeriClockControl+0x138>)
 800099e:	4293      	cmp	r3, r2
 80009a0:	d106      	bne.n	80009b0 <SPI_PeriClockControl+0x104>
				SPI5_PCLK_DI();
 80009a2:	4b0c      	ldr	r3, [pc, #48]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80009a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009a6:	4a0b      	ldr	r2, [pc, #44]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80009a8:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80009ac:	6453      	str	r3, [r2, #68]	; 0x44
}
 80009ae:	e009      	b.n	80009c4 <SPI_PeriClockControl+0x118>
			}else if(pSPIx == SPI6){
 80009b0:	687b      	ldr	r3, [r7, #4]
 80009b2:	4a0d      	ldr	r2, [pc, #52]	; (80009e8 <SPI_PeriClockControl+0x13c>)
 80009b4:	4293      	cmp	r3, r2
 80009b6:	d105      	bne.n	80009c4 <SPI_PeriClockControl+0x118>
				SPI6_PCLK_DI();
 80009b8:	4b06      	ldr	r3, [pc, #24]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80009ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009bc:	4a05      	ldr	r2, [pc, #20]	; (80009d4 <SPI_PeriClockControl+0x128>)
 80009be:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80009c2:	6453      	str	r3, [r2, #68]	; 0x44
}
 80009c4:	bf00      	nop
 80009c6:	370c      	adds	r7, #12
 80009c8:	46bd      	mov	sp, r7
 80009ca:	bc80      	pop	{r7}
 80009cc:	4770      	bx	lr
 80009ce:	bf00      	nop
 80009d0:	40013000 	.word	0x40013000
 80009d4:	40023800 	.word	0x40023800
 80009d8:	40003800 	.word	0x40003800
 80009dc:	40003c00 	.word	0x40003c00
 80009e0:	40013400 	.word	0x40013400
 80009e4:	40015000 	.word	0x40015000
 80009e8:	40015400 	.word	0x40015400

080009ec <SPI_Init>:
 * @return					- None
 *
 * @note					- None
 *
 */
void SPI_Init(SPI_Handle_t *pSPIHandle){
 80009ec:	b580      	push	{r7, lr}
 80009ee:	b084      	sub	sp, #16
 80009f0:	af00      	add	r7, sp, #0
 80009f2:	6078      	str	r0, [r7, #4]

	// Enable SPI Peripheral clock
	SPI_PeriClockControl(pSPIHandle->pSPIx, ENABLE);
 80009f4:	687b      	ldr	r3, [r7, #4]
 80009f6:	681b      	ldr	r3, [r3, #0]
 80009f8:	2101      	movs	r1, #1
 80009fa:	4618      	mov	r0, r3
 80009fc:	f7ff ff56 	bl	80008ac <SPI_PeriClockControl>

	// Configure CR1 Register

	uint32_t tempreg = 0;
 8000a00:	2300      	movs	r3, #0
 8000a02:	60fb      	str	r3, [r7, #12]

	// 1. Configure the device mode
	tempreg |= pSPIHandle->SPIConfig.SPI_DeviceMode << SPI_CR1_MSTR;
 8000a04:	687b      	ldr	r3, [r7, #4]
 8000a06:	791b      	ldrb	r3, [r3, #4]
 8000a08:	009b      	lsls	r3, r3, #2
 8000a0a:	461a      	mov	r2, r3
 8000a0c:	68fb      	ldr	r3, [r7, #12]
 8000a0e:	4313      	orrs	r3, r2
 8000a10:	60fb      	str	r3, [r7, #12]

	// 2. Configure the bus config
	if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_FD){
 8000a12:	687b      	ldr	r3, [r7, #4]
 8000a14:	795b      	ldrb	r3, [r3, #5]
 8000a16:	2b01      	cmp	r3, #1
 8000a18:	d104      	bne.n	8000a24 <SPI_Init+0x38>
		//bidi mode cleared
		tempreg &= ~(1 << SPI_CR1_BIDIMODE);
 8000a1a:	68fb      	ldr	r3, [r7, #12]
 8000a1c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000a20:	60fb      	str	r3, [r7, #12]
 8000a22:	e014      	b.n	8000a4e <SPI_Init+0x62>

	}else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_HD){
 8000a24:	687b      	ldr	r3, [r7, #4]
 8000a26:	795b      	ldrb	r3, [r3, #5]
 8000a28:	2b02      	cmp	r3, #2
 8000a2a:	d104      	bne.n	8000a36 <SPI_Init+0x4a>
		// bidi mode set
		tempreg |= (1 << SPI_CR1_BIDIMODE);
 8000a2c:	68fb      	ldr	r3, [r7, #12]
 8000a2e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000a32:	60fb      	str	r3, [r7, #12]
 8000a34:	e00b      	b.n	8000a4e <SPI_Init+0x62>

	}else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_SIMPLEX_RXONLY){
 8000a36:	687b      	ldr	r3, [r7, #4]
 8000a38:	795b      	ldrb	r3, [r3, #5]
 8000a3a:	2b03      	cmp	r3, #3
 8000a3c:	d107      	bne.n	8000a4e <SPI_Init+0x62>
		// bidi mode cleared
		tempreg &= ~(1 << SPI_CR1_BIDIMODE);
 8000a3e:	68fb      	ldr	r3, [r7, #12]
 8000a40:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000a44:	60fb      	str	r3, [r7, #12]
		// RXOnly bit set
		tempreg |= (1 << SPI_CR1_RXONLY);
 8000a46:	68fb      	ldr	r3, [r7, #12]
 8000a48:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000a4c:	60fb      	str	r3, [r7, #12]
	}

	// 3. Configure SPI serial clock speed (Baud Rate)
	tempreg |= pSPIHandle->SPIConfig.SPI_SclkSpeed << SPI_CR1_BR;
 8000a4e:	687b      	ldr	r3, [r7, #4]
 8000a50:	799b      	ldrb	r3, [r3, #6]
 8000a52:	00db      	lsls	r3, r3, #3
 8000a54:	461a      	mov	r2, r3
 8000a56:	68fb      	ldr	r3, [r7, #12]
 8000a58:	4313      	orrs	r3, r2
 8000a5a:	60fb      	str	r3, [r7, #12]

	// 4. Configure DFF
	tempreg |= pSPIHandle->SPIConfig.SPI_CRCL << SPI_CR1_CRCL;
 8000a5c:	687b      	ldr	r3, [r7, #4]
 8000a5e:	79db      	ldrb	r3, [r3, #7]
 8000a60:	02db      	lsls	r3, r3, #11
 8000a62:	461a      	mov	r2, r3
 8000a64:	68fb      	ldr	r3, [r7, #12]
 8000a66:	4313      	orrs	r3, r2
 8000a68:	60fb      	str	r3, [r7, #12]

	// 5. Configure CPOL
	tempreg |= pSPIHandle->SPIConfig.SPI_CPOL << SPI_CR1_CPOL;
 8000a6a:	687b      	ldr	r3, [r7, #4]
 8000a6c:	7a1b      	ldrb	r3, [r3, #8]
 8000a6e:	005b      	lsls	r3, r3, #1
 8000a70:	461a      	mov	r2, r3
 8000a72:	68fb      	ldr	r3, [r7, #12]
 8000a74:	4313      	orrs	r3, r2
 8000a76:	60fb      	str	r3, [r7, #12]

	// 6. Configure CPHA
	tempreg |= pSPIHandle->SPIConfig.SPI_CPHA << SPI_CR1_CPHA;
 8000a78:	687b      	ldr	r3, [r7, #4]
 8000a7a:	7a5b      	ldrb	r3, [r3, #9]
 8000a7c:	461a      	mov	r2, r3
 8000a7e:	68fb      	ldr	r3, [r7, #12]
 8000a80:	4313      	orrs	r3, r2
 8000a82:	60fb      	str	r3, [r7, #12]

	tempreg |= pSPIHandle->SPIConfig.SPI_SSM << SPI_CR1_SSM;
 8000a84:	687b      	ldr	r3, [r7, #4]
 8000a86:	7a9b      	ldrb	r3, [r3, #10]
 8000a88:	025b      	lsls	r3, r3, #9
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	68fb      	ldr	r3, [r7, #12]
 8000a8e:	4313      	orrs	r3, r2
 8000a90:	60fb      	str	r3, [r7, #12]

	pSPIHandle->pSPIx->CR1 = tempreg;
 8000a92:	687b      	ldr	r3, [r7, #4]
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	68fa      	ldr	r2, [r7, #12]
 8000a98:	601a      	str	r2, [r3, #0]

}
 8000a9a:	bf00      	nop
 8000a9c:	3710      	adds	r7, #16
 8000a9e:	46bd      	mov	sp, r7
 8000aa0:	bd80      	pop	{r7, pc}

08000aa2 <SPI_GetFlagStatus>:
void SPI_DeInit(SPI_RegDef_t *pSPIx){

}


uint8_t SPI_GetFlagStatus(SPI_RegDef_t *pSPIx, uint32_t FlagName){
 8000aa2:	b480      	push	{r7}
 8000aa4:	b083      	sub	sp, #12
 8000aa6:	af00      	add	r7, sp, #0
 8000aa8:	6078      	str	r0, [r7, #4]
 8000aaa:	6039      	str	r1, [r7, #0]

	if(pSPIx->SR & FlagName)
 8000aac:	687b      	ldr	r3, [r7, #4]
 8000aae:	689a      	ldr	r2, [r3, #8]
 8000ab0:	683b      	ldr	r3, [r7, #0]
 8000ab2:	4013      	ands	r3, r2
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	d001      	beq.n	8000abc <SPI_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 8000ab8:	2301      	movs	r3, #1
 8000aba:	e000      	b.n	8000abe <SPI_GetFlagStatus+0x1c>
	}

	return FLAG_RESET;
 8000abc:	2300      	movs	r3, #0

}
 8000abe:	4618      	mov	r0, r3
 8000ac0:	370c      	adds	r7, #12
 8000ac2:	46bd      	mov	sp, r7
 8000ac4:	bc80      	pop	{r7}
 8000ac6:	4770      	bx	lr

08000ac8 <SPI_SendData>:
 * @return					- None
 *
 * @note					- This is a blocking call
 *
 */
void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer, uint32_t Len){
 8000ac8:	b580      	push	{r7, lr}
 8000aca:	b084      	sub	sp, #16
 8000acc:	af00      	add	r7, sp, #0
 8000ace:	60f8      	str	r0, [r7, #12]
 8000ad0:	60b9      	str	r1, [r7, #8]
 8000ad2:	607a      	str	r2, [r7, #4]

	while(Len > 0){
 8000ad4:	e027      	b.n	8000b26 <SPI_SendData+0x5e>

		// 1. Wait till TXE is set
		while(SPI_GetFlagStatus(pSPIx, SPI_TXE_FLAG) == FLAG_RESET);
 8000ad6:	bf00      	nop
 8000ad8:	2102      	movs	r1, #2
 8000ada:	68f8      	ldr	r0, [r7, #12]
 8000adc:	f7ff ffe1 	bl	8000aa2 <SPI_GetFlagStatus>
 8000ae0:	4603      	mov	r3, r0
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	d0f8      	beq.n	8000ad8 <SPI_SendData+0x10>

		//2. Check DFF
		if(pSPIx->CR1 & (1 << SPI_CR1_CRCL)){
 8000ae6:	68fb      	ldr	r3, [r7, #12]
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	d00e      	beq.n	8000b10 <SPI_SendData+0x48>

			// 16bit DFF
			// 1. Load the data into DR
			pSPIx->DR = *((uint16_t*)pTxBuffer);
 8000af2:	68bb      	ldr	r3, [r7, #8]
 8000af4:	881b      	ldrh	r3, [r3, #0]
 8000af6:	461a      	mov	r2, r3
 8000af8:	68fb      	ldr	r3, [r7, #12]
 8000afa:	60da      	str	r2, [r3, #12]
			Len--;
 8000afc:	687b      	ldr	r3, [r7, #4]
 8000afe:	3b01      	subs	r3, #1
 8000b00:	607b      	str	r3, [r7, #4]
			Len--;
 8000b02:	687b      	ldr	r3, [r7, #4]
 8000b04:	3b01      	subs	r3, #1
 8000b06:	607b      	str	r3, [r7, #4]
			(uint16_t*)pTxBuffer++;
 8000b08:	68bb      	ldr	r3, [r7, #8]
 8000b0a:	3301      	adds	r3, #1
 8000b0c:	60bb      	str	r3, [r7, #8]
 8000b0e:	e00a      	b.n	8000b26 <SPI_SendData+0x5e>

		}else{
			// 8bit DFF
			pSPIx->DR = *pTxBuffer;
 8000b10:	68bb      	ldr	r3, [r7, #8]
 8000b12:	781b      	ldrb	r3, [r3, #0]
 8000b14:	461a      	mov	r2, r3
 8000b16:	68fb      	ldr	r3, [r7, #12]
 8000b18:	60da      	str	r2, [r3, #12]
			Len--;
 8000b1a:	687b      	ldr	r3, [r7, #4]
 8000b1c:	3b01      	subs	r3, #1
 8000b1e:	607b      	str	r3, [r7, #4]
			pTxBuffer++;
 8000b20:	68bb      	ldr	r3, [r7, #8]
 8000b22:	3301      	adds	r3, #1
 8000b24:	60bb      	str	r3, [r7, #8]
	while(Len > 0){
 8000b26:	687b      	ldr	r3, [r7, #4]
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	d1d4      	bne.n	8000ad6 <SPI_SendData+0xe>

		}

	}
}
 8000b2c:	bf00      	nop
 8000b2e:	3710      	adds	r7, #16
 8000b30:	46bd      	mov	sp, r7
 8000b32:	bd80      	pop	{r7, pc}

08000b34 <SPI_RecieveData>:
 * @return					- None
 *
 * @note					- None
 *
 */
void SPI_RecieveData(SPI_RegDef_t *pSPIx, uint8_t *pRxBuffer, uint32_t Len){
 8000b34:	b580      	push	{r7, lr}
 8000b36:	b084      	sub	sp, #16
 8000b38:	af00      	add	r7, sp, #0
 8000b3a:	60f8      	str	r0, [r7, #12]
 8000b3c:	60b9      	str	r1, [r7, #8]
 8000b3e:	607a      	str	r2, [r7, #4]

	while(Len > 0){
 8000b40:	e027      	b.n	8000b92 <SPI_RecieveData+0x5e>

		// 1. Wait till RXE is set
		while(SPI_GetFlagStatus(pSPIx, SPI_RXNE_FLAG) == FLAG_RESET);
 8000b42:	bf00      	nop
 8000b44:	2101      	movs	r1, #1
 8000b46:	68f8      	ldr	r0, [r7, #12]
 8000b48:	f7ff ffab 	bl	8000aa2 <SPI_GetFlagStatus>
 8000b4c:	4603      	mov	r3, r0
 8000b4e:	2b00      	cmp	r3, #0
 8000b50:	d0f8      	beq.n	8000b44 <SPI_RecieveData+0x10>

		//2. Check DFF
		if(pSPIx->CR1 & (1 << SPI_CR1_CRCL)){
 8000b52:	68fb      	ldr	r3, [r7, #12]
 8000b54:	681b      	ldr	r3, [r3, #0]
 8000b56:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	d00e      	beq.n	8000b7c <SPI_RecieveData+0x48>

			// 16bit DFF
			// 1. Load the data from DR to RXBuffer
			*((uint16_t*)pRxBuffer) = pSPIx->DR;
 8000b5e:	68fb      	ldr	r3, [r7, #12]
 8000b60:	68db      	ldr	r3, [r3, #12]
 8000b62:	b29a      	uxth	r2, r3
 8000b64:	68bb      	ldr	r3, [r7, #8]
 8000b66:	801a      	strh	r2, [r3, #0]
			Len--;
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	3b01      	subs	r3, #1
 8000b6c:	607b      	str	r3, [r7, #4]
			Len--;
 8000b6e:	687b      	ldr	r3, [r7, #4]
 8000b70:	3b01      	subs	r3, #1
 8000b72:	607b      	str	r3, [r7, #4]
			(uint16_t*)pRxBuffer++;
 8000b74:	68bb      	ldr	r3, [r7, #8]
 8000b76:	3301      	adds	r3, #1
 8000b78:	60bb      	str	r3, [r7, #8]
 8000b7a:	e00a      	b.n	8000b92 <SPI_RecieveData+0x5e>

		}else{
			// 8bit DFF
			*((uint16_t*)pRxBuffer) = pSPIx->DR;
 8000b7c:	68fb      	ldr	r3, [r7, #12]
 8000b7e:	68db      	ldr	r3, [r3, #12]
 8000b80:	b29a      	uxth	r2, r3
 8000b82:	68bb      	ldr	r3, [r7, #8]
 8000b84:	801a      	strh	r2, [r3, #0]
			Len--;
 8000b86:	687b      	ldr	r3, [r7, #4]
 8000b88:	3b01      	subs	r3, #1
 8000b8a:	607b      	str	r3, [r7, #4]
			pRxBuffer++;
 8000b8c:	68bb      	ldr	r3, [r7, #8]
 8000b8e:	3301      	adds	r3, #1
 8000b90:	60bb      	str	r3, [r7, #8]
	while(Len > 0){
 8000b92:	687b      	ldr	r3, [r7, #4]
 8000b94:	2b00      	cmp	r3, #0
 8000b96:	d1d4      	bne.n	8000b42 <SPI_RecieveData+0xe>

		}
	}
}
 8000b98:	bf00      	nop
 8000b9a:	3710      	adds	r7, #16
 8000b9c:	46bd      	mov	sp, r7
 8000b9e:	bd80      	pop	{r7, pc}

08000ba0 <SPI_PeripheralControl>:
 * @return					- None
 *
 * @note					- None
 *
 */
void SPI_PeripheralControl(SPI_RegDef_t *pSPIx, uint8_t EnOrDi){
 8000ba0:	b480      	push	{r7}
 8000ba2:	b083      	sub	sp, #12
 8000ba4:	af00      	add	r7, sp, #0
 8000ba6:	6078      	str	r0, [r7, #4]
 8000ba8:	460b      	mov	r3, r1
 8000baa:	70fb      	strb	r3, [r7, #3]

	if(EnOrDi == ENABLE){
 8000bac:	78fb      	ldrb	r3, [r7, #3]
 8000bae:	2b01      	cmp	r3, #1
 8000bb0:	d106      	bne.n	8000bc0 <SPI_PeripheralControl+0x20>

		pSPIx->CR1 |= (1 << SPI_CR1_SPE);
 8000bb2:	687b      	ldr	r3, [r7, #4]
 8000bb4:	681b      	ldr	r3, [r3, #0]
 8000bb6:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000bba:	687b      	ldr	r3, [r7, #4]
 8000bbc:	601a      	str	r2, [r3, #0]

		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);

	}

}
 8000bbe:	e005      	b.n	8000bcc <SPI_PeripheralControl+0x2c>
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
 8000bc0:	687b      	ldr	r3, [r7, #4]
 8000bc2:	681b      	ldr	r3, [r3, #0]
 8000bc4:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000bc8:	687b      	ldr	r3, [r7, #4]
 8000bca:	601a      	str	r2, [r3, #0]
}
 8000bcc:	bf00      	nop
 8000bce:	370c      	adds	r7, #12
 8000bd0:	46bd      	mov	sp, r7
 8000bd2:	bc80      	pop	{r7}
 8000bd4:	4770      	bx	lr

08000bd6 <SPI_SSOEConfig>:
 * @return					- None
 *
 * @note					- None
 *
 */
void SPI_SSOEConfig(SPI_RegDef_t *pSPIx, uint8_t EnOrDi){
 8000bd6:	b480      	push	{r7}
 8000bd8:	b083      	sub	sp, #12
 8000bda:	af00      	add	r7, sp, #0
 8000bdc:	6078      	str	r0, [r7, #4]
 8000bde:	460b      	mov	r3, r1
 8000be0:	70fb      	strb	r3, [r7, #3]

	if(EnOrDi == ENABLE){
 8000be2:	78fb      	ldrb	r3, [r7, #3]
 8000be4:	2b01      	cmp	r3, #1
 8000be6:	d106      	bne.n	8000bf6 <SPI_SSOEConfig+0x20>

		pSPIx->CR2 |= (1 << SPI_CR2_SSOE);
 8000be8:	687b      	ldr	r3, [r7, #4]
 8000bea:	685b      	ldr	r3, [r3, #4]
 8000bec:	f043 0204 	orr.w	r2, r3, #4
 8000bf0:	687b      	ldr	r3, [r7, #4]
 8000bf2:	605a      	str	r2, [r3, #4]

		pSPIx->CR2 &= ~(1 << SPI_CR2_SSOE);

	}

}
 8000bf4:	e005      	b.n	8000c02 <SPI_SSOEConfig+0x2c>
		pSPIx->CR2 &= ~(1 << SPI_CR2_SSOE);
 8000bf6:	687b      	ldr	r3, [r7, #4]
 8000bf8:	685b      	ldr	r3, [r3, #4]
 8000bfa:	f023 0204 	bic.w	r2, r3, #4
 8000bfe:	687b      	ldr	r3, [r7, #4]
 8000c00:	605a      	str	r2, [r3, #4]
}
 8000c02:	bf00      	nop
 8000c04:	370c      	adds	r7, #12
 8000c06:	46bd      	mov	sp, r7
 8000c08:	bc80      	pop	{r7}
 8000c0a:	4770      	bx	lr

08000c0c <delay>:

// Ardiuno LED pin
#define LED_PIN					9


void delay(void){
 8000c0c:	b480      	push	{r7}
 8000c0e:	b083      	sub	sp, #12
 8000c10:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++ );
 8000c12:	2300      	movs	r3, #0
 8000c14:	607b      	str	r3, [r7, #4]
 8000c16:	e002      	b.n	8000c1e <delay+0x12>
 8000c18:	687b      	ldr	r3, [r7, #4]
 8000c1a:	3301      	adds	r3, #1
 8000c1c:	607b      	str	r3, [r7, #4]
 8000c1e:	687b      	ldr	r3, [r7, #4]
 8000c20:	4a03      	ldr	r2, [pc, #12]	; (8000c30 <delay+0x24>)
 8000c22:	4293      	cmp	r3, r2
 8000c24:	d9f8      	bls.n	8000c18 <delay+0xc>
}
 8000c26:	bf00      	nop
 8000c28:	370c      	adds	r7, #12
 8000c2a:	46bd      	mov	sp, r7
 8000c2c:	bc80      	pop	{r7}
 8000c2e:	4770      	bx	lr
 8000c30:	0007a11f 	.word	0x0007a11f

08000c34 <SPI2_GPIOInits>:
 *
 * @note					- None
 *
 */

void SPI2_GPIOInits(void){
 8000c34:	b580      	push	{r7, lr}
 8000c36:	b084      	sub	sp, #16
 8000c38:	af00      	add	r7, sp, #0


	GPIO_Handle_t SPIPins;

		SPIPins.pGPIOx = GPIOB;
 8000c3a:	4b14      	ldr	r3, [pc, #80]	; (8000c8c <SPI2_GPIOInits+0x58>)
 8000c3c:	607b      	str	r3, [r7, #4]
		SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000c3e:	2302      	movs	r3, #2
 8000c40:	727b      	strb	r3, [r7, #9]
		SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
 8000c42:	2305      	movs	r3, #5
 8000c44:	737b      	strb	r3, [r7, #13]
		SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000c46:	2300      	movs	r3, #0
 8000c48:	733b      	strb	r3, [r7, #12]
		SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000c4a:	2301      	movs	r3, #1
 8000c4c:	72fb      	strb	r3, [r7, #11]
		SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_MEDIUM;
 8000c4e:	2301      	movs	r3, #1
 8000c50:	72bb      	strb	r3, [r7, #10]

		//SCLK
		SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000c52:	230d      	movs	r3, #13
 8000c54:	723b      	strb	r3, [r7, #8]
		GPIO_Init(&SPIPins);
 8000c56:	1d3b      	adds	r3, r7, #4
 8000c58:	4618      	mov	r0, r3
 8000c5a:	f7ff fc5d 	bl	8000518 <GPIO_Init>

		//MOSI
		SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000c5e:	230f      	movs	r3, #15
 8000c60:	723b      	strb	r3, [r7, #8]
		GPIO_Init(&SPIPins);
 8000c62:	1d3b      	adds	r3, r7, #4
 8000c64:	4618      	mov	r0, r3
 8000c66:	f7ff fc57 	bl	8000518 <GPIO_Init>

		//MISO
		SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 8000c6a:	230e      	movs	r3, #14
 8000c6c:	723b      	strb	r3, [r7, #8]
		GPIO_Init(&SPIPins);
 8000c6e:	1d3b      	adds	r3, r7, #4
 8000c70:	4618      	mov	r0, r3
 8000c72:	f7ff fc51 	bl	8000518 <GPIO_Init>


		//NSS
		SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000c76:	230c      	movs	r3, #12
 8000c78:	723b      	strb	r3, [r7, #8]
		GPIO_Init(&SPIPins);
 8000c7a:	1d3b      	adds	r3, r7, #4
 8000c7c:	4618      	mov	r0, r3
 8000c7e:	f7ff fc4b 	bl	8000518 <GPIO_Init>
}
 8000c82:	bf00      	nop
 8000c84:	3710      	adds	r7, #16
 8000c86:	46bd      	mov	sp, r7
 8000c88:	bd80      	pop	{r7, pc}
 8000c8a:	bf00      	nop
 8000c8c:	40020400 	.word	0x40020400

08000c90 <SPI2_Inits>:



void SPI2_Inits(void){
 8000c90:	b580      	push	{r7, lr}
 8000c92:	b088      	sub	sp, #32
 8000c94:	af00      	add	r7, sp, #0

	SPI_Handle_t SPI2Handle;

	SPI2Handle.pSPIx = SPI2;
 8000c96:	4b0c      	ldr	r3, [pc, #48]	; (8000cc8 <SPI2_Inits+0x38>)
 8000c98:	603b      	str	r3, [r7, #0]
	SPI2Handle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 8000c9a:	2301      	movs	r3, #1
 8000c9c:	717b      	strb	r3, [r7, #5]
	SPI2Handle.SPIConfig.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
 8000c9e:	2301      	movs	r3, #1
 8000ca0:	713b      	strb	r3, [r7, #4]
	SPI2Handle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV16;
 8000ca2:	2303      	movs	r3, #3
 8000ca4:	71bb      	strb	r3, [r7, #6]
	SPI2Handle.SPIConfig.SPI_CRCL = SPI_DFF_8BITS;
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	71fb      	strb	r3, [r7, #7]
	SPI2Handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 8000caa:	2300      	movs	r3, #0
 8000cac:	723b      	strb	r3, [r7, #8]
	SPI2Handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 8000cae:	2300      	movs	r3, #0
 8000cb0:	727b      	strb	r3, [r7, #9]
	SPI2Handle.SPIConfig.SPI_SSM = SPI_SSM_DI; // Hardware slave management
 8000cb2:	2300      	movs	r3, #0
 8000cb4:	72bb      	strb	r3, [r7, #10]

	SPI_Init(&SPI2Handle);
 8000cb6:	463b      	mov	r3, r7
 8000cb8:	4618      	mov	r0, r3
 8000cba:	f7ff fe97 	bl	80009ec <SPI_Init>

}
 8000cbe:	bf00      	nop
 8000cc0:	3720      	adds	r7, #32
 8000cc2:	46bd      	mov	sp, r7
 8000cc4:	bd80      	pop	{r7, pc}
 8000cc6:	bf00      	nop
 8000cc8:	40003800 	.word	0x40003800

08000ccc <GPIO_ButtonInit>:

void GPIO_ButtonInit(void){
 8000ccc:	b580      	push	{r7, lr}
 8000cce:	b084      	sub	sp, #16
 8000cd0:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioBtn;

	// Initialising Button
	GpioBtn.pGPIOx = GPIOC;
 8000cd2:	4b09      	ldr	r3, [pc, #36]	; (8000cf8 <GPIO_ButtonInit+0x2c>)
 8000cd4:	607b      	str	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000cd6:	230d      	movs	r3, #13
 8000cd8:	723b      	strb	r3, [r7, #8]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000cda:	2300      	movs	r3, #0
 8000cdc:	727b      	strb	r3, [r7, #9]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000cde:	2302      	movs	r3, #2
 8000ce0:	72bb      	strb	r3, [r7, #10]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000ce2:	2300      	movs	r3, #0
 8000ce4:	72fb      	strb	r3, [r7, #11]
	GPIO_Init(&GpioBtn);
 8000ce6:	1d3b      	adds	r3, r7, #4
 8000ce8:	4618      	mov	r0, r3
 8000cea:	f7ff fc15 	bl	8000518 <GPIO_Init>

}
 8000cee:	bf00      	nop
 8000cf0:	3710      	adds	r7, #16
 8000cf2:	46bd      	mov	sp, r7
 8000cf4:	bd80      	pop	{r7, pc}
 8000cf6:	bf00      	nop
 8000cf8:	40020800 	.word	0x40020800

08000cfc <SPI_VerifyResponse>:


uint8_t SPI_VerifyResponse(uint8_t ackbyte){
 8000cfc:	b480      	push	{r7}
 8000cfe:	b083      	sub	sp, #12
 8000d00:	af00      	add	r7, sp, #0
 8000d02:	4603      	mov	r3, r0
 8000d04:	71fb      	strb	r3, [r7, #7]

	if(ackbyte == 0xF5){
 8000d06:	79fb      	ldrb	r3, [r7, #7]
 8000d08:	2bf5      	cmp	r3, #245	; 0xf5
 8000d0a:	d101      	bne.n	8000d10 <SPI_VerifyResponse+0x14>
		//ack
		return 1;
 8000d0c:	2301      	movs	r3, #1
 8000d0e:	e000      	b.n	8000d12 <SPI_VerifyResponse+0x16>

	}else{
		return 0;
 8000d10:	2300      	movs	r3, #0
	}

}
 8000d12:	4618      	mov	r0, r3
 8000d14:	370c      	adds	r7, #12
 8000d16:	46bd      	mov	sp, r7
 8000d18:	bc80      	pop	{r7}
 8000d1a:	4770      	bx	lr

08000d1c <main>:


int main(void){
 8000d1c:	b580      	push	{r7, lr}
 8000d1e:	b084      	sub	sp, #16
 8000d20:	af00      	add	r7, sp, #0


	uint8_t dummy_write = 0xff;
 8000d22:	23ff      	movs	r3, #255	; 0xff
 8000d24:	73fb      	strb	r3, [r7, #15]
	uint8_t dummy_read;

	initialise_monitor_handles();
 8000d26:	f001 fab7 	bl	8002298 <initialise_monitor_handles>

	printf("Application started...\n");
 8000d2a:	485c      	ldr	r0, [pc, #368]	; (8000e9c <main+0x180>)
 8000d2c:	f000 f990 	bl	8001050 <puts>

	GPIO_ButtonInit();
 8000d30:	f7ff ffcc 	bl	8000ccc <GPIO_ButtonInit>
	printf("GPIO Initialised...\n");
 8000d34:	485a      	ldr	r0, [pc, #360]	; (8000ea0 <main+0x184>)
 8000d36:	f000 f98b 	bl	8001050 <puts>

	SPI2_GPIOInits();
 8000d3a:	f7ff ff7b 	bl	8000c34 <SPI2_GPIOInits>
	SPI2_Inits();
 8000d3e:	f7ff ffa7 	bl	8000c90 <SPI2_Inits>
	printf("SPI Initialised...\n");
 8000d42:	4858      	ldr	r0, [pc, #352]	; (8000ea4 <main+0x188>)
 8000d44:	f000 f984 	bl	8001050 <puts>

	SPI_SSOEConfig(SPI2, ENABLE);
 8000d48:	2101      	movs	r1, #1
 8000d4a:	4857      	ldr	r0, [pc, #348]	; (8000ea8 <main+0x18c>)
 8000d4c:	f7ff ff43 	bl	8000bd6 <SPI_SSOEConfig>

	while(1){

		while(!GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13));
 8000d50:	bf00      	nop
 8000d52:	210d      	movs	r1, #13
 8000d54:	4855      	ldr	r0, [pc, #340]	; (8000eac <main+0x190>)
 8000d56:	f7ff fd93 	bl	8000880 <GPIO_ReadFromInputPin>
 8000d5a:	4603      	mov	r3, r0
 8000d5c:	2b00      	cmp	r3, #0
 8000d5e:	d0f8      	beq.n	8000d52 <main+0x36>
		delay();
 8000d60:	f7ff ff54 	bl	8000c0c <delay>

		// Enable SPI2 Peripheral
		SPI_PeripheralControl(SPI2, ENABLE);
 8000d64:	2101      	movs	r1, #1
 8000d66:	4850      	ldr	r0, [pc, #320]	; (8000ea8 <main+0x18c>)
 8000d68:	f7ff ff1a 	bl	8000ba0 <SPI_PeripheralControl>

		// 1. CMD_LED_CTRL		<pin no(1)>		<value(1)>

		uint8_t cmdcode = CMD_LED_CTRL;
 8000d6c:	2350      	movs	r3, #80	; 0x50
 8000d6e:	737b      	strb	r3, [r7, #13]
		uint8_t ackbyte;
		uint8_t args[2];

		// send command
		SPI_SendData(SPI2, &cmdcode, 1);
 8000d70:	f107 030d 	add.w	r3, r7, #13
 8000d74:	2201      	movs	r2, #1
 8000d76:	4619      	mov	r1, r3
 8000d78:	484b      	ldr	r0, [pc, #300]	; (8000ea8 <main+0x18c>)
 8000d7a:	f7ff fea5 	bl	8000ac8 <SPI_SendData>

		// dummy read to clear off RXNE
		SPI_RecieveData(SPI2, &dummy_read, 1);
 8000d7e:	f107 030e 	add.w	r3, r7, #14
 8000d82:	2201      	movs	r2, #1
 8000d84:	4619      	mov	r1, r3
 8000d86:	4848      	ldr	r0, [pc, #288]	; (8000ea8 <main+0x18c>)
 8000d88:	f7ff fed4 	bl	8000b34 <SPI_RecieveData>

		// send dummy data to fetch the response from the slave
		SPI_SendData(SPI2, &dummy_write, 1);
 8000d8c:	f107 030f 	add.w	r3, r7, #15
 8000d90:	2201      	movs	r2, #1
 8000d92:	4619      	mov	r1, r3
 8000d94:	4844      	ldr	r0, [pc, #272]	; (8000ea8 <main+0x18c>)
 8000d96:	f7ff fe97 	bl	8000ac8 <SPI_SendData>

		SPI_RecieveData(SPI2, &ackbyte,1);
 8000d9a:	f107 030c 	add.w	r3, r7, #12
 8000d9e:	2201      	movs	r2, #1
 8000da0:	4619      	mov	r1, r3
 8000da2:	4841      	ldr	r0, [pc, #260]	; (8000ea8 <main+0x18c>)
 8000da4:	f7ff fec6 	bl	8000b34 <SPI_RecieveData>

		if(SPI_VerifyResponse(ackbyte)){
 8000da8:	7b3b      	ldrb	r3, [r7, #12]
 8000daa:	4618      	mov	r0, r3
 8000dac:	f7ff ffa6 	bl	8000cfc <SPI_VerifyResponse>
 8000db0:	4603      	mov	r3, r0
 8000db2:	2b00      	cmp	r3, #0
 8000db4:	d00d      	beq.n	8000dd2 <main+0xb6>

			// Send arguments
			args[0]  = LED_PIN;
 8000db6:	2309      	movs	r3, #9
 8000db8:	723b      	strb	r3, [r7, #8]
			args[1] = LED_ON;
 8000dba:	2300      	movs	r3, #0
 8000dbc:	727b      	strb	r3, [r7, #9]

			SPI_SendData(SPI2, args, 1);
 8000dbe:	f107 0308 	add.w	r3, r7, #8
 8000dc2:	2201      	movs	r2, #1
 8000dc4:	4619      	mov	r1, r3
 8000dc6:	4838      	ldr	r0, [pc, #224]	; (8000ea8 <main+0x18c>)
 8000dc8:	f7ff fe7e 	bl	8000ac8 <SPI_SendData>
			printf("CMD_LED_CTRL Executed!\n");
 8000dcc:	4838      	ldr	r0, [pc, #224]	; (8000eb0 <main+0x194>)
 8000dce:	f000 f93f 	bl	8001050 <puts>
		}

		// 2. CMD_SENSOR_READ

		// wait till button is pressed
		while(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13));
 8000dd2:	bf00      	nop
 8000dd4:	210d      	movs	r1, #13
 8000dd6:	4835      	ldr	r0, [pc, #212]	; (8000eac <main+0x190>)
 8000dd8:	f7ff fd52 	bl	8000880 <GPIO_ReadFromInputPin>
 8000ddc:	4603      	mov	r3, r0
 8000dde:	2b00      	cmp	r3, #0
 8000de0:	d1f8      	bne.n	8000dd4 <main+0xb8>
		delay();
 8000de2:	f7ff ff13 	bl	8000c0c <delay>

		cmdcode = CMD_SENSOR_READ;
 8000de6:	2351      	movs	r3, #81	; 0x51
 8000de8:	737b      	strb	r3, [r7, #13]

		// send command
		SPI_SendData(SPI2, &cmdcode, 1);
 8000dea:	f107 030d 	add.w	r3, r7, #13
 8000dee:	2201      	movs	r2, #1
 8000df0:	4619      	mov	r1, r3
 8000df2:	482d      	ldr	r0, [pc, #180]	; (8000ea8 <main+0x18c>)
 8000df4:	f7ff fe68 	bl	8000ac8 <SPI_SendData>

		// dummy read to clear off RXNE
		SPI_RecieveData(SPI2, &dummy_read, 1);
 8000df8:	f107 030e 	add.w	r3, r7, #14
 8000dfc:	2201      	movs	r2, #1
 8000dfe:	4619      	mov	r1, r3
 8000e00:	4829      	ldr	r0, [pc, #164]	; (8000ea8 <main+0x18c>)
 8000e02:	f7ff fe97 	bl	8000b34 <SPI_RecieveData>

		// send dummy data to fetch the response from the slave
		SPI_SendData(SPI2, &dummy_write, 1);
 8000e06:	f107 030f 	add.w	r3, r7, #15
 8000e0a:	2201      	movs	r2, #1
 8000e0c:	4619      	mov	r1, r3
 8000e0e:	4826      	ldr	r0, [pc, #152]	; (8000ea8 <main+0x18c>)
 8000e10:	f7ff fe5a 	bl	8000ac8 <SPI_SendData>

		SPI_RecieveData(SPI2, &ackbyte,1);
 8000e14:	f107 030c 	add.w	r3, r7, #12
 8000e18:	2201      	movs	r2, #1
 8000e1a:	4619      	mov	r1, r3
 8000e1c:	4822      	ldr	r0, [pc, #136]	; (8000ea8 <main+0x18c>)
 8000e1e:	f7ff fe89 	bl	8000b34 <SPI_RecieveData>

		if(SPI_VerifyResponse(ackbyte)){
 8000e22:	7b3b      	ldrb	r3, [r7, #12]
 8000e24:	4618      	mov	r0, r3
 8000e26:	f7ff ff69 	bl	8000cfc <SPI_VerifyResponse>
 8000e2a:	4603      	mov	r3, r0
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	d025      	beq.n	8000e7c <main+0x160>

			// Send arguments
			args[0]  = ANALOG_PIN0;
 8000e30:	2300      	movs	r3, #0
 8000e32:	723b      	strb	r3, [r7, #8]

			SPI_SendData(SPI2, args, 1);
 8000e34:	f107 0308 	add.w	r3, r7, #8
 8000e38:	2201      	movs	r2, #1
 8000e3a:	4619      	mov	r1, r3
 8000e3c:	481a      	ldr	r0, [pc, #104]	; (8000ea8 <main+0x18c>)
 8000e3e:	f7ff fe43 	bl	8000ac8 <SPI_SendData>

			// dummy read to clear off RXNE
			SPI_RecieveData(SPI2, &dummy_read, 1);
 8000e42:	f107 030e 	add.w	r3, r7, #14
 8000e46:	2201      	movs	r2, #1
 8000e48:	4619      	mov	r1, r3
 8000e4a:	4817      	ldr	r0, [pc, #92]	; (8000ea8 <main+0x18c>)
 8000e4c:	f7ff fe72 	bl	8000b34 <SPI_RecieveData>

			delay();
 8000e50:	f7ff fedc 	bl	8000c0c <delay>

			// send dummy data to fetch the response from the slave
			SPI_SendData(SPI2, &dummy_write, 1);
 8000e54:	f107 030f 	add.w	r3, r7, #15
 8000e58:	2201      	movs	r2, #1
 8000e5a:	4619      	mov	r1, r3
 8000e5c:	4812      	ldr	r0, [pc, #72]	; (8000ea8 <main+0x18c>)
 8000e5e:	f7ff fe33 	bl	8000ac8 <SPI_SendData>

			uint8_t analog_read = 0;
 8000e62:	2300      	movs	r3, #0
 8000e64:	71fb      	strb	r3, [r7, #7]

			SPI_RecieveData(SPI2, &analog_read, 1);
 8000e66:	1dfb      	adds	r3, r7, #7
 8000e68:	2201      	movs	r2, #1
 8000e6a:	4619      	mov	r1, r3
 8000e6c:	480e      	ldr	r0, [pc, #56]	; (8000ea8 <main+0x18c>)
 8000e6e:	f7ff fe61 	bl	8000b34 <SPI_RecieveData>

			printf("Analog Read value: %d\n", analog_read);
 8000e72:	79fb      	ldrb	r3, [r7, #7]
 8000e74:	4619      	mov	r1, r3
 8000e76:	480f      	ldr	r0, [pc, #60]	; (8000eb4 <main+0x198>)
 8000e78:	f000 f876 	bl	8000f68 <iprintf>




		// Conforming SPI is not busy
		while( SPI_GetFlagStatus(SPI2,SPI_BUSY_FLAG) );
 8000e7c:	bf00      	nop
 8000e7e:	2180      	movs	r1, #128	; 0x80
 8000e80:	4809      	ldr	r0, [pc, #36]	; (8000ea8 <main+0x18c>)
 8000e82:	f7ff fe0e 	bl	8000aa2 <SPI_GetFlagStatus>
 8000e86:	4603      	mov	r3, r0
 8000e88:	2b00      	cmp	r3, #0
 8000e8a:	d1f8      	bne.n	8000e7e <main+0x162>


		// Closing the communication
		SPI_PeripheralControl(SPI2, DISABLE);
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	4806      	ldr	r0, [pc, #24]	; (8000ea8 <main+0x18c>)
 8000e90:	f7ff fe86 	bl	8000ba0 <SPI_PeripheralControl>

		printf("SPI Connection Closed\n");
 8000e94:	4808      	ldr	r0, [pc, #32]	; (8000eb8 <main+0x19c>)
 8000e96:	f000 f8db 	bl	8001050 <puts>
	while(1){
 8000e9a:	e759      	b.n	8000d50 <main+0x34>
 8000e9c:	080023b0 	.word	0x080023b0
 8000ea0:	080023c8 	.word	0x080023c8
 8000ea4:	080023dc 	.word	0x080023dc
 8000ea8:	40003800 	.word	0x40003800
 8000eac:	40020800 	.word	0x40020800
 8000eb0:	080023f0 	.word	0x080023f0
 8000eb4:	08002408 	.word	0x08002408
 8000eb8:	08002420 	.word	0x08002420

08000ebc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000ebc:	480d      	ldr	r0, [pc, #52]	; (8000ef4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000ebe:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000ec0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000ec4:	480c      	ldr	r0, [pc, #48]	; (8000ef8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000ec6:	490d      	ldr	r1, [pc, #52]	; (8000efc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000ec8:	4a0d      	ldr	r2, [pc, #52]	; (8000f00 <LoopForever+0xe>)
  movs r3, #0
 8000eca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000ecc:	e002      	b.n	8000ed4 <LoopCopyDataInit>

08000ece <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000ece:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000ed0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000ed2:	3304      	adds	r3, #4

08000ed4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000ed4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000ed6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000ed8:	d3f9      	bcc.n	8000ece <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000eda:	4a0a      	ldr	r2, [pc, #40]	; (8000f04 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000edc:	4c0a      	ldr	r4, [pc, #40]	; (8000f08 <LoopForever+0x16>)
  movs r3, #0
 8000ede:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000ee0:	e001      	b.n	8000ee6 <LoopFillZerobss>

08000ee2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000ee2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ee4:	3204      	adds	r2, #4

08000ee6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000ee6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000ee8:	d3fb      	bcc.n	8000ee2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000eea:	f000 f811 	bl	8000f10 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000eee:	f7ff ff15 	bl	8000d1c <main>

08000ef2 <LoopForever>:

LoopForever:
    b LoopForever
 8000ef2:	e7fe      	b.n	8000ef2 <LoopForever>
  ldr   r0, =_estack
 8000ef4:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 8000ef8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000efc:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000f00:	080024f4 	.word	0x080024f4
  ldr r2, =_sbss
 8000f04:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000f08:	20000148 	.word	0x20000148

08000f0c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000f0c:	e7fe      	b.n	8000f0c <ADC_IRQHandler>
	...

08000f10 <__libc_init_array>:
 8000f10:	b570      	push	{r4, r5, r6, lr}
 8000f12:	4e0d      	ldr	r6, [pc, #52]	; (8000f48 <__libc_init_array+0x38>)
 8000f14:	4c0d      	ldr	r4, [pc, #52]	; (8000f4c <__libc_init_array+0x3c>)
 8000f16:	1ba4      	subs	r4, r4, r6
 8000f18:	10a4      	asrs	r4, r4, #2
 8000f1a:	2500      	movs	r5, #0
 8000f1c:	42a5      	cmp	r5, r4
 8000f1e:	d109      	bne.n	8000f34 <__libc_init_array+0x24>
 8000f20:	4e0b      	ldr	r6, [pc, #44]	; (8000f50 <__libc_init_array+0x40>)
 8000f22:	4c0c      	ldr	r4, [pc, #48]	; (8000f54 <__libc_init_array+0x44>)
 8000f24:	f001 fa38 	bl	8002398 <_init>
 8000f28:	1ba4      	subs	r4, r4, r6
 8000f2a:	10a4      	asrs	r4, r4, #2
 8000f2c:	2500      	movs	r5, #0
 8000f2e:	42a5      	cmp	r5, r4
 8000f30:	d105      	bne.n	8000f3e <__libc_init_array+0x2e>
 8000f32:	bd70      	pop	{r4, r5, r6, pc}
 8000f34:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000f38:	4798      	blx	r3
 8000f3a:	3501      	adds	r5, #1
 8000f3c:	e7ee      	b.n	8000f1c <__libc_init_array+0xc>
 8000f3e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000f42:	4798      	blx	r3
 8000f44:	3501      	adds	r5, #1
 8000f46:	e7f2      	b.n	8000f2e <__libc_init_array+0x1e>
 8000f48:	080024ec 	.word	0x080024ec
 8000f4c:	080024ec 	.word	0x080024ec
 8000f50:	080024ec 	.word	0x080024ec
 8000f54:	080024f0 	.word	0x080024f0

08000f58 <memset>:
 8000f58:	4402      	add	r2, r0
 8000f5a:	4603      	mov	r3, r0
 8000f5c:	4293      	cmp	r3, r2
 8000f5e:	d100      	bne.n	8000f62 <memset+0xa>
 8000f60:	4770      	bx	lr
 8000f62:	f803 1b01 	strb.w	r1, [r3], #1
 8000f66:	e7f9      	b.n	8000f5c <memset+0x4>

08000f68 <iprintf>:
 8000f68:	b40f      	push	{r0, r1, r2, r3}
 8000f6a:	4b0a      	ldr	r3, [pc, #40]	; (8000f94 <iprintf+0x2c>)
 8000f6c:	b513      	push	{r0, r1, r4, lr}
 8000f6e:	681c      	ldr	r4, [r3, #0]
 8000f70:	b124      	cbz	r4, 8000f7c <iprintf+0x14>
 8000f72:	69a3      	ldr	r3, [r4, #24]
 8000f74:	b913      	cbnz	r3, 8000f7c <iprintf+0x14>
 8000f76:	4620      	mov	r0, r4
 8000f78:	f000 fa22 	bl	80013c0 <__sinit>
 8000f7c:	ab05      	add	r3, sp, #20
 8000f7e:	9a04      	ldr	r2, [sp, #16]
 8000f80:	68a1      	ldr	r1, [r4, #8]
 8000f82:	9301      	str	r3, [sp, #4]
 8000f84:	4620      	mov	r0, r4
 8000f86:	f000 fbd9 	bl	800173c <_vfiprintf_r>
 8000f8a:	b002      	add	sp, #8
 8000f8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000f90:	b004      	add	sp, #16
 8000f92:	4770      	bx	lr
 8000f94:	20000000 	.word	0x20000000

08000f98 <_puts_r>:
 8000f98:	b570      	push	{r4, r5, r6, lr}
 8000f9a:	460e      	mov	r6, r1
 8000f9c:	4605      	mov	r5, r0
 8000f9e:	b118      	cbz	r0, 8000fa8 <_puts_r+0x10>
 8000fa0:	6983      	ldr	r3, [r0, #24]
 8000fa2:	b90b      	cbnz	r3, 8000fa8 <_puts_r+0x10>
 8000fa4:	f000 fa0c 	bl	80013c0 <__sinit>
 8000fa8:	69ab      	ldr	r3, [r5, #24]
 8000faa:	68ac      	ldr	r4, [r5, #8]
 8000fac:	b913      	cbnz	r3, 8000fb4 <_puts_r+0x1c>
 8000fae:	4628      	mov	r0, r5
 8000fb0:	f000 fa06 	bl	80013c0 <__sinit>
 8000fb4:	4b23      	ldr	r3, [pc, #140]	; (8001044 <_puts_r+0xac>)
 8000fb6:	429c      	cmp	r4, r3
 8000fb8:	d117      	bne.n	8000fea <_puts_r+0x52>
 8000fba:	686c      	ldr	r4, [r5, #4]
 8000fbc:	89a3      	ldrh	r3, [r4, #12]
 8000fbe:	071b      	lsls	r3, r3, #28
 8000fc0:	d51d      	bpl.n	8000ffe <_puts_r+0x66>
 8000fc2:	6923      	ldr	r3, [r4, #16]
 8000fc4:	b1db      	cbz	r3, 8000ffe <_puts_r+0x66>
 8000fc6:	3e01      	subs	r6, #1
 8000fc8:	68a3      	ldr	r3, [r4, #8]
 8000fca:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000fce:	3b01      	subs	r3, #1
 8000fd0:	60a3      	str	r3, [r4, #8]
 8000fd2:	b9e9      	cbnz	r1, 8001010 <_puts_r+0x78>
 8000fd4:	2b00      	cmp	r3, #0
 8000fd6:	da2e      	bge.n	8001036 <_puts_r+0x9e>
 8000fd8:	4622      	mov	r2, r4
 8000fda:	210a      	movs	r1, #10
 8000fdc:	4628      	mov	r0, r5
 8000fde:	f000 f83f 	bl	8001060 <__swbuf_r>
 8000fe2:	3001      	adds	r0, #1
 8000fe4:	d011      	beq.n	800100a <_puts_r+0x72>
 8000fe6:	200a      	movs	r0, #10
 8000fe8:	e011      	b.n	800100e <_puts_r+0x76>
 8000fea:	4b17      	ldr	r3, [pc, #92]	; (8001048 <_puts_r+0xb0>)
 8000fec:	429c      	cmp	r4, r3
 8000fee:	d101      	bne.n	8000ff4 <_puts_r+0x5c>
 8000ff0:	68ac      	ldr	r4, [r5, #8]
 8000ff2:	e7e3      	b.n	8000fbc <_puts_r+0x24>
 8000ff4:	4b15      	ldr	r3, [pc, #84]	; (800104c <_puts_r+0xb4>)
 8000ff6:	429c      	cmp	r4, r3
 8000ff8:	bf08      	it	eq
 8000ffa:	68ec      	ldreq	r4, [r5, #12]
 8000ffc:	e7de      	b.n	8000fbc <_puts_r+0x24>
 8000ffe:	4621      	mov	r1, r4
 8001000:	4628      	mov	r0, r5
 8001002:	f000 f87f 	bl	8001104 <__swsetup_r>
 8001006:	2800      	cmp	r0, #0
 8001008:	d0dd      	beq.n	8000fc6 <_puts_r+0x2e>
 800100a:	f04f 30ff 	mov.w	r0, #4294967295
 800100e:	bd70      	pop	{r4, r5, r6, pc}
 8001010:	2b00      	cmp	r3, #0
 8001012:	da04      	bge.n	800101e <_puts_r+0x86>
 8001014:	69a2      	ldr	r2, [r4, #24]
 8001016:	429a      	cmp	r2, r3
 8001018:	dc06      	bgt.n	8001028 <_puts_r+0x90>
 800101a:	290a      	cmp	r1, #10
 800101c:	d004      	beq.n	8001028 <_puts_r+0x90>
 800101e:	6823      	ldr	r3, [r4, #0]
 8001020:	1c5a      	adds	r2, r3, #1
 8001022:	6022      	str	r2, [r4, #0]
 8001024:	7019      	strb	r1, [r3, #0]
 8001026:	e7cf      	b.n	8000fc8 <_puts_r+0x30>
 8001028:	4622      	mov	r2, r4
 800102a:	4628      	mov	r0, r5
 800102c:	f000 f818 	bl	8001060 <__swbuf_r>
 8001030:	3001      	adds	r0, #1
 8001032:	d1c9      	bne.n	8000fc8 <_puts_r+0x30>
 8001034:	e7e9      	b.n	800100a <_puts_r+0x72>
 8001036:	6823      	ldr	r3, [r4, #0]
 8001038:	200a      	movs	r0, #10
 800103a:	1c5a      	adds	r2, r3, #1
 800103c:	6022      	str	r2, [r4, #0]
 800103e:	7018      	strb	r0, [r3, #0]
 8001040:	e7e5      	b.n	800100e <_puts_r+0x76>
 8001042:	bf00      	nop
 8001044:	0800245c 	.word	0x0800245c
 8001048:	0800247c 	.word	0x0800247c
 800104c:	0800243c 	.word	0x0800243c

08001050 <puts>:
 8001050:	4b02      	ldr	r3, [pc, #8]	; (800105c <puts+0xc>)
 8001052:	4601      	mov	r1, r0
 8001054:	6818      	ldr	r0, [r3, #0]
 8001056:	f7ff bf9f 	b.w	8000f98 <_puts_r>
 800105a:	bf00      	nop
 800105c:	20000000 	.word	0x20000000

08001060 <__swbuf_r>:
 8001060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001062:	460e      	mov	r6, r1
 8001064:	4614      	mov	r4, r2
 8001066:	4605      	mov	r5, r0
 8001068:	b118      	cbz	r0, 8001072 <__swbuf_r+0x12>
 800106a:	6983      	ldr	r3, [r0, #24]
 800106c:	b90b      	cbnz	r3, 8001072 <__swbuf_r+0x12>
 800106e:	f000 f9a7 	bl	80013c0 <__sinit>
 8001072:	4b21      	ldr	r3, [pc, #132]	; (80010f8 <__swbuf_r+0x98>)
 8001074:	429c      	cmp	r4, r3
 8001076:	d12a      	bne.n	80010ce <__swbuf_r+0x6e>
 8001078:	686c      	ldr	r4, [r5, #4]
 800107a:	69a3      	ldr	r3, [r4, #24]
 800107c:	60a3      	str	r3, [r4, #8]
 800107e:	89a3      	ldrh	r3, [r4, #12]
 8001080:	071a      	lsls	r2, r3, #28
 8001082:	d52e      	bpl.n	80010e2 <__swbuf_r+0x82>
 8001084:	6923      	ldr	r3, [r4, #16]
 8001086:	b363      	cbz	r3, 80010e2 <__swbuf_r+0x82>
 8001088:	6923      	ldr	r3, [r4, #16]
 800108a:	6820      	ldr	r0, [r4, #0]
 800108c:	1ac0      	subs	r0, r0, r3
 800108e:	6963      	ldr	r3, [r4, #20]
 8001090:	b2f6      	uxtb	r6, r6
 8001092:	4283      	cmp	r3, r0
 8001094:	4637      	mov	r7, r6
 8001096:	dc04      	bgt.n	80010a2 <__swbuf_r+0x42>
 8001098:	4621      	mov	r1, r4
 800109a:	4628      	mov	r0, r5
 800109c:	f000 f926 	bl	80012ec <_fflush_r>
 80010a0:	bb28      	cbnz	r0, 80010ee <__swbuf_r+0x8e>
 80010a2:	68a3      	ldr	r3, [r4, #8]
 80010a4:	3b01      	subs	r3, #1
 80010a6:	60a3      	str	r3, [r4, #8]
 80010a8:	6823      	ldr	r3, [r4, #0]
 80010aa:	1c5a      	adds	r2, r3, #1
 80010ac:	6022      	str	r2, [r4, #0]
 80010ae:	701e      	strb	r6, [r3, #0]
 80010b0:	6963      	ldr	r3, [r4, #20]
 80010b2:	3001      	adds	r0, #1
 80010b4:	4283      	cmp	r3, r0
 80010b6:	d004      	beq.n	80010c2 <__swbuf_r+0x62>
 80010b8:	89a3      	ldrh	r3, [r4, #12]
 80010ba:	07db      	lsls	r3, r3, #31
 80010bc:	d519      	bpl.n	80010f2 <__swbuf_r+0x92>
 80010be:	2e0a      	cmp	r6, #10
 80010c0:	d117      	bne.n	80010f2 <__swbuf_r+0x92>
 80010c2:	4621      	mov	r1, r4
 80010c4:	4628      	mov	r0, r5
 80010c6:	f000 f911 	bl	80012ec <_fflush_r>
 80010ca:	b190      	cbz	r0, 80010f2 <__swbuf_r+0x92>
 80010cc:	e00f      	b.n	80010ee <__swbuf_r+0x8e>
 80010ce:	4b0b      	ldr	r3, [pc, #44]	; (80010fc <__swbuf_r+0x9c>)
 80010d0:	429c      	cmp	r4, r3
 80010d2:	d101      	bne.n	80010d8 <__swbuf_r+0x78>
 80010d4:	68ac      	ldr	r4, [r5, #8]
 80010d6:	e7d0      	b.n	800107a <__swbuf_r+0x1a>
 80010d8:	4b09      	ldr	r3, [pc, #36]	; (8001100 <__swbuf_r+0xa0>)
 80010da:	429c      	cmp	r4, r3
 80010dc:	bf08      	it	eq
 80010de:	68ec      	ldreq	r4, [r5, #12]
 80010e0:	e7cb      	b.n	800107a <__swbuf_r+0x1a>
 80010e2:	4621      	mov	r1, r4
 80010e4:	4628      	mov	r0, r5
 80010e6:	f000 f80d 	bl	8001104 <__swsetup_r>
 80010ea:	2800      	cmp	r0, #0
 80010ec:	d0cc      	beq.n	8001088 <__swbuf_r+0x28>
 80010ee:	f04f 37ff 	mov.w	r7, #4294967295
 80010f2:	4638      	mov	r0, r7
 80010f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010f6:	bf00      	nop
 80010f8:	0800245c 	.word	0x0800245c
 80010fc:	0800247c 	.word	0x0800247c
 8001100:	0800243c 	.word	0x0800243c

08001104 <__swsetup_r>:
 8001104:	4b32      	ldr	r3, [pc, #200]	; (80011d0 <__swsetup_r+0xcc>)
 8001106:	b570      	push	{r4, r5, r6, lr}
 8001108:	681d      	ldr	r5, [r3, #0]
 800110a:	4606      	mov	r6, r0
 800110c:	460c      	mov	r4, r1
 800110e:	b125      	cbz	r5, 800111a <__swsetup_r+0x16>
 8001110:	69ab      	ldr	r3, [r5, #24]
 8001112:	b913      	cbnz	r3, 800111a <__swsetup_r+0x16>
 8001114:	4628      	mov	r0, r5
 8001116:	f000 f953 	bl	80013c0 <__sinit>
 800111a:	4b2e      	ldr	r3, [pc, #184]	; (80011d4 <__swsetup_r+0xd0>)
 800111c:	429c      	cmp	r4, r3
 800111e:	d10f      	bne.n	8001140 <__swsetup_r+0x3c>
 8001120:	686c      	ldr	r4, [r5, #4]
 8001122:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001126:	b29a      	uxth	r2, r3
 8001128:	0715      	lsls	r5, r2, #28
 800112a:	d42c      	bmi.n	8001186 <__swsetup_r+0x82>
 800112c:	06d0      	lsls	r0, r2, #27
 800112e:	d411      	bmi.n	8001154 <__swsetup_r+0x50>
 8001130:	2209      	movs	r2, #9
 8001132:	6032      	str	r2, [r6, #0]
 8001134:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001138:	81a3      	strh	r3, [r4, #12]
 800113a:	f04f 30ff 	mov.w	r0, #4294967295
 800113e:	e03e      	b.n	80011be <__swsetup_r+0xba>
 8001140:	4b25      	ldr	r3, [pc, #148]	; (80011d8 <__swsetup_r+0xd4>)
 8001142:	429c      	cmp	r4, r3
 8001144:	d101      	bne.n	800114a <__swsetup_r+0x46>
 8001146:	68ac      	ldr	r4, [r5, #8]
 8001148:	e7eb      	b.n	8001122 <__swsetup_r+0x1e>
 800114a:	4b24      	ldr	r3, [pc, #144]	; (80011dc <__swsetup_r+0xd8>)
 800114c:	429c      	cmp	r4, r3
 800114e:	bf08      	it	eq
 8001150:	68ec      	ldreq	r4, [r5, #12]
 8001152:	e7e6      	b.n	8001122 <__swsetup_r+0x1e>
 8001154:	0751      	lsls	r1, r2, #29
 8001156:	d512      	bpl.n	800117e <__swsetup_r+0x7a>
 8001158:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800115a:	b141      	cbz	r1, 800116e <__swsetup_r+0x6a>
 800115c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001160:	4299      	cmp	r1, r3
 8001162:	d002      	beq.n	800116a <__swsetup_r+0x66>
 8001164:	4630      	mov	r0, r6
 8001166:	f000 fa19 	bl	800159c <_free_r>
 800116a:	2300      	movs	r3, #0
 800116c:	6363      	str	r3, [r4, #52]	; 0x34
 800116e:	89a3      	ldrh	r3, [r4, #12]
 8001170:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001174:	81a3      	strh	r3, [r4, #12]
 8001176:	2300      	movs	r3, #0
 8001178:	6063      	str	r3, [r4, #4]
 800117a:	6923      	ldr	r3, [r4, #16]
 800117c:	6023      	str	r3, [r4, #0]
 800117e:	89a3      	ldrh	r3, [r4, #12]
 8001180:	f043 0308 	orr.w	r3, r3, #8
 8001184:	81a3      	strh	r3, [r4, #12]
 8001186:	6923      	ldr	r3, [r4, #16]
 8001188:	b94b      	cbnz	r3, 800119e <__swsetup_r+0x9a>
 800118a:	89a3      	ldrh	r3, [r4, #12]
 800118c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001190:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001194:	d003      	beq.n	800119e <__swsetup_r+0x9a>
 8001196:	4621      	mov	r1, r4
 8001198:	4630      	mov	r0, r6
 800119a:	f000 f9bf 	bl	800151c <__smakebuf_r>
 800119e:	89a2      	ldrh	r2, [r4, #12]
 80011a0:	f012 0301 	ands.w	r3, r2, #1
 80011a4:	d00c      	beq.n	80011c0 <__swsetup_r+0xbc>
 80011a6:	2300      	movs	r3, #0
 80011a8:	60a3      	str	r3, [r4, #8]
 80011aa:	6963      	ldr	r3, [r4, #20]
 80011ac:	425b      	negs	r3, r3
 80011ae:	61a3      	str	r3, [r4, #24]
 80011b0:	6923      	ldr	r3, [r4, #16]
 80011b2:	b953      	cbnz	r3, 80011ca <__swsetup_r+0xc6>
 80011b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011b8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80011bc:	d1ba      	bne.n	8001134 <__swsetup_r+0x30>
 80011be:	bd70      	pop	{r4, r5, r6, pc}
 80011c0:	0792      	lsls	r2, r2, #30
 80011c2:	bf58      	it	pl
 80011c4:	6963      	ldrpl	r3, [r4, #20]
 80011c6:	60a3      	str	r3, [r4, #8]
 80011c8:	e7f2      	b.n	80011b0 <__swsetup_r+0xac>
 80011ca:	2000      	movs	r0, #0
 80011cc:	e7f7      	b.n	80011be <__swsetup_r+0xba>
 80011ce:	bf00      	nop
 80011d0:	20000000 	.word	0x20000000
 80011d4:	0800245c 	.word	0x0800245c
 80011d8:	0800247c 	.word	0x0800247c
 80011dc:	0800243c 	.word	0x0800243c

080011e0 <__sflush_r>:
 80011e0:	898a      	ldrh	r2, [r1, #12]
 80011e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80011e6:	4605      	mov	r5, r0
 80011e8:	0710      	lsls	r0, r2, #28
 80011ea:	460c      	mov	r4, r1
 80011ec:	d458      	bmi.n	80012a0 <__sflush_r+0xc0>
 80011ee:	684b      	ldr	r3, [r1, #4]
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	dc05      	bgt.n	8001200 <__sflush_r+0x20>
 80011f4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80011f6:	2b00      	cmp	r3, #0
 80011f8:	dc02      	bgt.n	8001200 <__sflush_r+0x20>
 80011fa:	2000      	movs	r0, #0
 80011fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001200:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001202:	2e00      	cmp	r6, #0
 8001204:	d0f9      	beq.n	80011fa <__sflush_r+0x1a>
 8001206:	2300      	movs	r3, #0
 8001208:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800120c:	682f      	ldr	r7, [r5, #0]
 800120e:	6a21      	ldr	r1, [r4, #32]
 8001210:	602b      	str	r3, [r5, #0]
 8001212:	d032      	beq.n	800127a <__sflush_r+0x9a>
 8001214:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001216:	89a3      	ldrh	r3, [r4, #12]
 8001218:	075a      	lsls	r2, r3, #29
 800121a:	d505      	bpl.n	8001228 <__sflush_r+0x48>
 800121c:	6863      	ldr	r3, [r4, #4]
 800121e:	1ac0      	subs	r0, r0, r3
 8001220:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001222:	b10b      	cbz	r3, 8001228 <__sflush_r+0x48>
 8001224:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001226:	1ac0      	subs	r0, r0, r3
 8001228:	2300      	movs	r3, #0
 800122a:	4602      	mov	r2, r0
 800122c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800122e:	6a21      	ldr	r1, [r4, #32]
 8001230:	4628      	mov	r0, r5
 8001232:	47b0      	blx	r6
 8001234:	1c43      	adds	r3, r0, #1
 8001236:	89a3      	ldrh	r3, [r4, #12]
 8001238:	d106      	bne.n	8001248 <__sflush_r+0x68>
 800123a:	6829      	ldr	r1, [r5, #0]
 800123c:	291d      	cmp	r1, #29
 800123e:	d848      	bhi.n	80012d2 <__sflush_r+0xf2>
 8001240:	4a29      	ldr	r2, [pc, #164]	; (80012e8 <__sflush_r+0x108>)
 8001242:	40ca      	lsrs	r2, r1
 8001244:	07d6      	lsls	r6, r2, #31
 8001246:	d544      	bpl.n	80012d2 <__sflush_r+0xf2>
 8001248:	2200      	movs	r2, #0
 800124a:	6062      	str	r2, [r4, #4]
 800124c:	04d9      	lsls	r1, r3, #19
 800124e:	6922      	ldr	r2, [r4, #16]
 8001250:	6022      	str	r2, [r4, #0]
 8001252:	d504      	bpl.n	800125e <__sflush_r+0x7e>
 8001254:	1c42      	adds	r2, r0, #1
 8001256:	d101      	bne.n	800125c <__sflush_r+0x7c>
 8001258:	682b      	ldr	r3, [r5, #0]
 800125a:	b903      	cbnz	r3, 800125e <__sflush_r+0x7e>
 800125c:	6560      	str	r0, [r4, #84]	; 0x54
 800125e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001260:	602f      	str	r7, [r5, #0]
 8001262:	2900      	cmp	r1, #0
 8001264:	d0c9      	beq.n	80011fa <__sflush_r+0x1a>
 8001266:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800126a:	4299      	cmp	r1, r3
 800126c:	d002      	beq.n	8001274 <__sflush_r+0x94>
 800126e:	4628      	mov	r0, r5
 8001270:	f000 f994 	bl	800159c <_free_r>
 8001274:	2000      	movs	r0, #0
 8001276:	6360      	str	r0, [r4, #52]	; 0x34
 8001278:	e7c0      	b.n	80011fc <__sflush_r+0x1c>
 800127a:	2301      	movs	r3, #1
 800127c:	4628      	mov	r0, r5
 800127e:	47b0      	blx	r6
 8001280:	1c41      	adds	r1, r0, #1
 8001282:	d1c8      	bne.n	8001216 <__sflush_r+0x36>
 8001284:	682b      	ldr	r3, [r5, #0]
 8001286:	2b00      	cmp	r3, #0
 8001288:	d0c5      	beq.n	8001216 <__sflush_r+0x36>
 800128a:	2b1d      	cmp	r3, #29
 800128c:	d001      	beq.n	8001292 <__sflush_r+0xb2>
 800128e:	2b16      	cmp	r3, #22
 8001290:	d101      	bne.n	8001296 <__sflush_r+0xb6>
 8001292:	602f      	str	r7, [r5, #0]
 8001294:	e7b1      	b.n	80011fa <__sflush_r+0x1a>
 8001296:	89a3      	ldrh	r3, [r4, #12]
 8001298:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800129c:	81a3      	strh	r3, [r4, #12]
 800129e:	e7ad      	b.n	80011fc <__sflush_r+0x1c>
 80012a0:	690f      	ldr	r7, [r1, #16]
 80012a2:	2f00      	cmp	r7, #0
 80012a4:	d0a9      	beq.n	80011fa <__sflush_r+0x1a>
 80012a6:	0793      	lsls	r3, r2, #30
 80012a8:	680e      	ldr	r6, [r1, #0]
 80012aa:	bf08      	it	eq
 80012ac:	694b      	ldreq	r3, [r1, #20]
 80012ae:	600f      	str	r7, [r1, #0]
 80012b0:	bf18      	it	ne
 80012b2:	2300      	movne	r3, #0
 80012b4:	eba6 0807 	sub.w	r8, r6, r7
 80012b8:	608b      	str	r3, [r1, #8]
 80012ba:	f1b8 0f00 	cmp.w	r8, #0
 80012be:	dd9c      	ble.n	80011fa <__sflush_r+0x1a>
 80012c0:	4643      	mov	r3, r8
 80012c2:	463a      	mov	r2, r7
 80012c4:	6a21      	ldr	r1, [r4, #32]
 80012c6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80012c8:	4628      	mov	r0, r5
 80012ca:	47b0      	blx	r6
 80012cc:	2800      	cmp	r0, #0
 80012ce:	dc06      	bgt.n	80012de <__sflush_r+0xfe>
 80012d0:	89a3      	ldrh	r3, [r4, #12]
 80012d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012d6:	81a3      	strh	r3, [r4, #12]
 80012d8:	f04f 30ff 	mov.w	r0, #4294967295
 80012dc:	e78e      	b.n	80011fc <__sflush_r+0x1c>
 80012de:	4407      	add	r7, r0
 80012e0:	eba8 0800 	sub.w	r8, r8, r0
 80012e4:	e7e9      	b.n	80012ba <__sflush_r+0xda>
 80012e6:	bf00      	nop
 80012e8:	20400001 	.word	0x20400001

080012ec <_fflush_r>:
 80012ec:	b538      	push	{r3, r4, r5, lr}
 80012ee:	690b      	ldr	r3, [r1, #16]
 80012f0:	4605      	mov	r5, r0
 80012f2:	460c      	mov	r4, r1
 80012f4:	b1db      	cbz	r3, 800132e <_fflush_r+0x42>
 80012f6:	b118      	cbz	r0, 8001300 <_fflush_r+0x14>
 80012f8:	6983      	ldr	r3, [r0, #24]
 80012fa:	b90b      	cbnz	r3, 8001300 <_fflush_r+0x14>
 80012fc:	f000 f860 	bl	80013c0 <__sinit>
 8001300:	4b0c      	ldr	r3, [pc, #48]	; (8001334 <_fflush_r+0x48>)
 8001302:	429c      	cmp	r4, r3
 8001304:	d109      	bne.n	800131a <_fflush_r+0x2e>
 8001306:	686c      	ldr	r4, [r5, #4]
 8001308:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800130c:	b17b      	cbz	r3, 800132e <_fflush_r+0x42>
 800130e:	4621      	mov	r1, r4
 8001310:	4628      	mov	r0, r5
 8001312:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001316:	f7ff bf63 	b.w	80011e0 <__sflush_r>
 800131a:	4b07      	ldr	r3, [pc, #28]	; (8001338 <_fflush_r+0x4c>)
 800131c:	429c      	cmp	r4, r3
 800131e:	d101      	bne.n	8001324 <_fflush_r+0x38>
 8001320:	68ac      	ldr	r4, [r5, #8]
 8001322:	e7f1      	b.n	8001308 <_fflush_r+0x1c>
 8001324:	4b05      	ldr	r3, [pc, #20]	; (800133c <_fflush_r+0x50>)
 8001326:	429c      	cmp	r4, r3
 8001328:	bf08      	it	eq
 800132a:	68ec      	ldreq	r4, [r5, #12]
 800132c:	e7ec      	b.n	8001308 <_fflush_r+0x1c>
 800132e:	2000      	movs	r0, #0
 8001330:	bd38      	pop	{r3, r4, r5, pc}
 8001332:	bf00      	nop
 8001334:	0800245c 	.word	0x0800245c
 8001338:	0800247c 	.word	0x0800247c
 800133c:	0800243c 	.word	0x0800243c

08001340 <std>:
 8001340:	2300      	movs	r3, #0
 8001342:	b510      	push	{r4, lr}
 8001344:	4604      	mov	r4, r0
 8001346:	e9c0 3300 	strd	r3, r3, [r0]
 800134a:	6083      	str	r3, [r0, #8]
 800134c:	8181      	strh	r1, [r0, #12]
 800134e:	6643      	str	r3, [r0, #100]	; 0x64
 8001350:	81c2      	strh	r2, [r0, #14]
 8001352:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001356:	6183      	str	r3, [r0, #24]
 8001358:	4619      	mov	r1, r3
 800135a:	2208      	movs	r2, #8
 800135c:	305c      	adds	r0, #92	; 0x5c
 800135e:	f7ff fdfb 	bl	8000f58 <memset>
 8001362:	4b05      	ldr	r3, [pc, #20]	; (8001378 <std+0x38>)
 8001364:	6263      	str	r3, [r4, #36]	; 0x24
 8001366:	4b05      	ldr	r3, [pc, #20]	; (800137c <std+0x3c>)
 8001368:	62a3      	str	r3, [r4, #40]	; 0x28
 800136a:	4b05      	ldr	r3, [pc, #20]	; (8001380 <std+0x40>)
 800136c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800136e:	4b05      	ldr	r3, [pc, #20]	; (8001384 <std+0x44>)
 8001370:	6224      	str	r4, [r4, #32]
 8001372:	6323      	str	r3, [r4, #48]	; 0x30
 8001374:	bd10      	pop	{r4, pc}
 8001376:	bf00      	nop
 8001378:	08001c99 	.word	0x08001c99
 800137c:	08001cbb 	.word	0x08001cbb
 8001380:	08001cf3 	.word	0x08001cf3
 8001384:	08001d17 	.word	0x08001d17

08001388 <_cleanup_r>:
 8001388:	4901      	ldr	r1, [pc, #4]	; (8001390 <_cleanup_r+0x8>)
 800138a:	f000 b885 	b.w	8001498 <_fwalk_reent>
 800138e:	bf00      	nop
 8001390:	080012ed 	.word	0x080012ed

08001394 <__sfmoreglue>:
 8001394:	b570      	push	{r4, r5, r6, lr}
 8001396:	1e4a      	subs	r2, r1, #1
 8001398:	2568      	movs	r5, #104	; 0x68
 800139a:	4355      	muls	r5, r2
 800139c:	460e      	mov	r6, r1
 800139e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80013a2:	f000 f949 	bl	8001638 <_malloc_r>
 80013a6:	4604      	mov	r4, r0
 80013a8:	b140      	cbz	r0, 80013bc <__sfmoreglue+0x28>
 80013aa:	2100      	movs	r1, #0
 80013ac:	e9c0 1600 	strd	r1, r6, [r0]
 80013b0:	300c      	adds	r0, #12
 80013b2:	60a0      	str	r0, [r4, #8]
 80013b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80013b8:	f7ff fdce 	bl	8000f58 <memset>
 80013bc:	4620      	mov	r0, r4
 80013be:	bd70      	pop	{r4, r5, r6, pc}

080013c0 <__sinit>:
 80013c0:	6983      	ldr	r3, [r0, #24]
 80013c2:	b510      	push	{r4, lr}
 80013c4:	4604      	mov	r4, r0
 80013c6:	bb33      	cbnz	r3, 8001416 <__sinit+0x56>
 80013c8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80013cc:	6503      	str	r3, [r0, #80]	; 0x50
 80013ce:	4b12      	ldr	r3, [pc, #72]	; (8001418 <__sinit+0x58>)
 80013d0:	4a12      	ldr	r2, [pc, #72]	; (800141c <__sinit+0x5c>)
 80013d2:	681b      	ldr	r3, [r3, #0]
 80013d4:	6282      	str	r2, [r0, #40]	; 0x28
 80013d6:	4298      	cmp	r0, r3
 80013d8:	bf04      	itt	eq
 80013da:	2301      	moveq	r3, #1
 80013dc:	6183      	streq	r3, [r0, #24]
 80013de:	f000 f81f 	bl	8001420 <__sfp>
 80013e2:	6060      	str	r0, [r4, #4]
 80013e4:	4620      	mov	r0, r4
 80013e6:	f000 f81b 	bl	8001420 <__sfp>
 80013ea:	60a0      	str	r0, [r4, #8]
 80013ec:	4620      	mov	r0, r4
 80013ee:	f000 f817 	bl	8001420 <__sfp>
 80013f2:	2200      	movs	r2, #0
 80013f4:	60e0      	str	r0, [r4, #12]
 80013f6:	2104      	movs	r1, #4
 80013f8:	6860      	ldr	r0, [r4, #4]
 80013fa:	f7ff ffa1 	bl	8001340 <std>
 80013fe:	2201      	movs	r2, #1
 8001400:	2109      	movs	r1, #9
 8001402:	68a0      	ldr	r0, [r4, #8]
 8001404:	f7ff ff9c 	bl	8001340 <std>
 8001408:	2202      	movs	r2, #2
 800140a:	2112      	movs	r1, #18
 800140c:	68e0      	ldr	r0, [r4, #12]
 800140e:	f7ff ff97 	bl	8001340 <std>
 8001412:	2301      	movs	r3, #1
 8001414:	61a3      	str	r3, [r4, #24]
 8001416:	bd10      	pop	{r4, pc}
 8001418:	08002438 	.word	0x08002438
 800141c:	08001389 	.word	0x08001389

08001420 <__sfp>:
 8001420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001422:	4b1b      	ldr	r3, [pc, #108]	; (8001490 <__sfp+0x70>)
 8001424:	681e      	ldr	r6, [r3, #0]
 8001426:	69b3      	ldr	r3, [r6, #24]
 8001428:	4607      	mov	r7, r0
 800142a:	b913      	cbnz	r3, 8001432 <__sfp+0x12>
 800142c:	4630      	mov	r0, r6
 800142e:	f7ff ffc7 	bl	80013c0 <__sinit>
 8001432:	3648      	adds	r6, #72	; 0x48
 8001434:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001438:	3b01      	subs	r3, #1
 800143a:	d503      	bpl.n	8001444 <__sfp+0x24>
 800143c:	6833      	ldr	r3, [r6, #0]
 800143e:	b133      	cbz	r3, 800144e <__sfp+0x2e>
 8001440:	6836      	ldr	r6, [r6, #0]
 8001442:	e7f7      	b.n	8001434 <__sfp+0x14>
 8001444:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001448:	b16d      	cbz	r5, 8001466 <__sfp+0x46>
 800144a:	3468      	adds	r4, #104	; 0x68
 800144c:	e7f4      	b.n	8001438 <__sfp+0x18>
 800144e:	2104      	movs	r1, #4
 8001450:	4638      	mov	r0, r7
 8001452:	f7ff ff9f 	bl	8001394 <__sfmoreglue>
 8001456:	6030      	str	r0, [r6, #0]
 8001458:	2800      	cmp	r0, #0
 800145a:	d1f1      	bne.n	8001440 <__sfp+0x20>
 800145c:	230c      	movs	r3, #12
 800145e:	603b      	str	r3, [r7, #0]
 8001460:	4604      	mov	r4, r0
 8001462:	4620      	mov	r0, r4
 8001464:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001466:	4b0b      	ldr	r3, [pc, #44]	; (8001494 <__sfp+0x74>)
 8001468:	6665      	str	r5, [r4, #100]	; 0x64
 800146a:	e9c4 5500 	strd	r5, r5, [r4]
 800146e:	60a5      	str	r5, [r4, #8]
 8001470:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8001474:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8001478:	2208      	movs	r2, #8
 800147a:	4629      	mov	r1, r5
 800147c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001480:	f7ff fd6a 	bl	8000f58 <memset>
 8001484:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001488:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800148c:	e7e9      	b.n	8001462 <__sfp+0x42>
 800148e:	bf00      	nop
 8001490:	08002438 	.word	0x08002438
 8001494:	ffff0001 	.word	0xffff0001

08001498 <_fwalk_reent>:
 8001498:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800149c:	4680      	mov	r8, r0
 800149e:	4689      	mov	r9, r1
 80014a0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80014a4:	2600      	movs	r6, #0
 80014a6:	b914      	cbnz	r4, 80014ae <_fwalk_reent+0x16>
 80014a8:	4630      	mov	r0, r6
 80014aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80014ae:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80014b2:	3f01      	subs	r7, #1
 80014b4:	d501      	bpl.n	80014ba <_fwalk_reent+0x22>
 80014b6:	6824      	ldr	r4, [r4, #0]
 80014b8:	e7f5      	b.n	80014a6 <_fwalk_reent+0xe>
 80014ba:	89ab      	ldrh	r3, [r5, #12]
 80014bc:	2b01      	cmp	r3, #1
 80014be:	d907      	bls.n	80014d0 <_fwalk_reent+0x38>
 80014c0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80014c4:	3301      	adds	r3, #1
 80014c6:	d003      	beq.n	80014d0 <_fwalk_reent+0x38>
 80014c8:	4629      	mov	r1, r5
 80014ca:	4640      	mov	r0, r8
 80014cc:	47c8      	blx	r9
 80014ce:	4306      	orrs	r6, r0
 80014d0:	3568      	adds	r5, #104	; 0x68
 80014d2:	e7ee      	b.n	80014b2 <_fwalk_reent+0x1a>

080014d4 <__swhatbuf_r>:
 80014d4:	b570      	push	{r4, r5, r6, lr}
 80014d6:	460e      	mov	r6, r1
 80014d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014dc:	2900      	cmp	r1, #0
 80014de:	b096      	sub	sp, #88	; 0x58
 80014e0:	4614      	mov	r4, r2
 80014e2:	461d      	mov	r5, r3
 80014e4:	da07      	bge.n	80014f6 <__swhatbuf_r+0x22>
 80014e6:	2300      	movs	r3, #0
 80014e8:	602b      	str	r3, [r5, #0]
 80014ea:	89b3      	ldrh	r3, [r6, #12]
 80014ec:	061a      	lsls	r2, r3, #24
 80014ee:	d410      	bmi.n	8001512 <__swhatbuf_r+0x3e>
 80014f0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014f4:	e00e      	b.n	8001514 <__swhatbuf_r+0x40>
 80014f6:	466a      	mov	r2, sp
 80014f8:	f000 fc34 	bl	8001d64 <_fstat_r>
 80014fc:	2800      	cmp	r0, #0
 80014fe:	dbf2      	blt.n	80014e6 <__swhatbuf_r+0x12>
 8001500:	9a01      	ldr	r2, [sp, #4]
 8001502:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001506:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800150a:	425a      	negs	r2, r3
 800150c:	415a      	adcs	r2, r3
 800150e:	602a      	str	r2, [r5, #0]
 8001510:	e7ee      	b.n	80014f0 <__swhatbuf_r+0x1c>
 8001512:	2340      	movs	r3, #64	; 0x40
 8001514:	2000      	movs	r0, #0
 8001516:	6023      	str	r3, [r4, #0]
 8001518:	b016      	add	sp, #88	; 0x58
 800151a:	bd70      	pop	{r4, r5, r6, pc}

0800151c <__smakebuf_r>:
 800151c:	898b      	ldrh	r3, [r1, #12]
 800151e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001520:	079d      	lsls	r5, r3, #30
 8001522:	4606      	mov	r6, r0
 8001524:	460c      	mov	r4, r1
 8001526:	d507      	bpl.n	8001538 <__smakebuf_r+0x1c>
 8001528:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800152c:	6023      	str	r3, [r4, #0]
 800152e:	6123      	str	r3, [r4, #16]
 8001530:	2301      	movs	r3, #1
 8001532:	6163      	str	r3, [r4, #20]
 8001534:	b002      	add	sp, #8
 8001536:	bd70      	pop	{r4, r5, r6, pc}
 8001538:	ab01      	add	r3, sp, #4
 800153a:	466a      	mov	r2, sp
 800153c:	f7ff ffca 	bl	80014d4 <__swhatbuf_r>
 8001540:	9900      	ldr	r1, [sp, #0]
 8001542:	4605      	mov	r5, r0
 8001544:	4630      	mov	r0, r6
 8001546:	f000 f877 	bl	8001638 <_malloc_r>
 800154a:	b948      	cbnz	r0, 8001560 <__smakebuf_r+0x44>
 800154c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001550:	059a      	lsls	r2, r3, #22
 8001552:	d4ef      	bmi.n	8001534 <__smakebuf_r+0x18>
 8001554:	f023 0303 	bic.w	r3, r3, #3
 8001558:	f043 0302 	orr.w	r3, r3, #2
 800155c:	81a3      	strh	r3, [r4, #12]
 800155e:	e7e3      	b.n	8001528 <__smakebuf_r+0xc>
 8001560:	4b0d      	ldr	r3, [pc, #52]	; (8001598 <__smakebuf_r+0x7c>)
 8001562:	62b3      	str	r3, [r6, #40]	; 0x28
 8001564:	89a3      	ldrh	r3, [r4, #12]
 8001566:	6020      	str	r0, [r4, #0]
 8001568:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800156c:	81a3      	strh	r3, [r4, #12]
 800156e:	9b00      	ldr	r3, [sp, #0]
 8001570:	6163      	str	r3, [r4, #20]
 8001572:	9b01      	ldr	r3, [sp, #4]
 8001574:	6120      	str	r0, [r4, #16]
 8001576:	b15b      	cbz	r3, 8001590 <__smakebuf_r+0x74>
 8001578:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800157c:	4630      	mov	r0, r6
 800157e:	f000 fc03 	bl	8001d88 <_isatty_r>
 8001582:	b128      	cbz	r0, 8001590 <__smakebuf_r+0x74>
 8001584:	89a3      	ldrh	r3, [r4, #12]
 8001586:	f023 0303 	bic.w	r3, r3, #3
 800158a:	f043 0301 	orr.w	r3, r3, #1
 800158e:	81a3      	strh	r3, [r4, #12]
 8001590:	89a3      	ldrh	r3, [r4, #12]
 8001592:	431d      	orrs	r5, r3
 8001594:	81a5      	strh	r5, [r4, #12]
 8001596:	e7cd      	b.n	8001534 <__smakebuf_r+0x18>
 8001598:	08001389 	.word	0x08001389

0800159c <_free_r>:
 800159c:	b538      	push	{r3, r4, r5, lr}
 800159e:	4605      	mov	r5, r0
 80015a0:	2900      	cmp	r1, #0
 80015a2:	d045      	beq.n	8001630 <_free_r+0x94>
 80015a4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80015a8:	1f0c      	subs	r4, r1, #4
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	bfb8      	it	lt
 80015ae:	18e4      	addlt	r4, r4, r3
 80015b0:	f000 fc0c 	bl	8001dcc <__malloc_lock>
 80015b4:	4a1f      	ldr	r2, [pc, #124]	; (8001634 <_free_r+0x98>)
 80015b6:	6813      	ldr	r3, [r2, #0]
 80015b8:	4610      	mov	r0, r2
 80015ba:	b933      	cbnz	r3, 80015ca <_free_r+0x2e>
 80015bc:	6063      	str	r3, [r4, #4]
 80015be:	6014      	str	r4, [r2, #0]
 80015c0:	4628      	mov	r0, r5
 80015c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80015c6:	f000 bc02 	b.w	8001dce <__malloc_unlock>
 80015ca:	42a3      	cmp	r3, r4
 80015cc:	d90c      	bls.n	80015e8 <_free_r+0x4c>
 80015ce:	6821      	ldr	r1, [r4, #0]
 80015d0:	1862      	adds	r2, r4, r1
 80015d2:	4293      	cmp	r3, r2
 80015d4:	bf04      	itt	eq
 80015d6:	681a      	ldreq	r2, [r3, #0]
 80015d8:	685b      	ldreq	r3, [r3, #4]
 80015da:	6063      	str	r3, [r4, #4]
 80015dc:	bf04      	itt	eq
 80015de:	1852      	addeq	r2, r2, r1
 80015e0:	6022      	streq	r2, [r4, #0]
 80015e2:	6004      	str	r4, [r0, #0]
 80015e4:	e7ec      	b.n	80015c0 <_free_r+0x24>
 80015e6:	4613      	mov	r3, r2
 80015e8:	685a      	ldr	r2, [r3, #4]
 80015ea:	b10a      	cbz	r2, 80015f0 <_free_r+0x54>
 80015ec:	42a2      	cmp	r2, r4
 80015ee:	d9fa      	bls.n	80015e6 <_free_r+0x4a>
 80015f0:	6819      	ldr	r1, [r3, #0]
 80015f2:	1858      	adds	r0, r3, r1
 80015f4:	42a0      	cmp	r0, r4
 80015f6:	d10b      	bne.n	8001610 <_free_r+0x74>
 80015f8:	6820      	ldr	r0, [r4, #0]
 80015fa:	4401      	add	r1, r0
 80015fc:	1858      	adds	r0, r3, r1
 80015fe:	4282      	cmp	r2, r0
 8001600:	6019      	str	r1, [r3, #0]
 8001602:	d1dd      	bne.n	80015c0 <_free_r+0x24>
 8001604:	6810      	ldr	r0, [r2, #0]
 8001606:	6852      	ldr	r2, [r2, #4]
 8001608:	605a      	str	r2, [r3, #4]
 800160a:	4401      	add	r1, r0
 800160c:	6019      	str	r1, [r3, #0]
 800160e:	e7d7      	b.n	80015c0 <_free_r+0x24>
 8001610:	d902      	bls.n	8001618 <_free_r+0x7c>
 8001612:	230c      	movs	r3, #12
 8001614:	602b      	str	r3, [r5, #0]
 8001616:	e7d3      	b.n	80015c0 <_free_r+0x24>
 8001618:	6820      	ldr	r0, [r4, #0]
 800161a:	1821      	adds	r1, r4, r0
 800161c:	428a      	cmp	r2, r1
 800161e:	bf04      	itt	eq
 8001620:	6811      	ldreq	r1, [r2, #0]
 8001622:	6852      	ldreq	r2, [r2, #4]
 8001624:	6062      	str	r2, [r4, #4]
 8001626:	bf04      	itt	eq
 8001628:	1809      	addeq	r1, r1, r0
 800162a:	6021      	streq	r1, [r4, #0]
 800162c:	605c      	str	r4, [r3, #4]
 800162e:	e7c7      	b.n	80015c0 <_free_r+0x24>
 8001630:	bd38      	pop	{r3, r4, r5, pc}
 8001632:	bf00      	nop
 8001634:	2000008c 	.word	0x2000008c

08001638 <_malloc_r>:
 8001638:	b570      	push	{r4, r5, r6, lr}
 800163a:	1ccd      	adds	r5, r1, #3
 800163c:	f025 0503 	bic.w	r5, r5, #3
 8001640:	3508      	adds	r5, #8
 8001642:	2d0c      	cmp	r5, #12
 8001644:	bf38      	it	cc
 8001646:	250c      	movcc	r5, #12
 8001648:	2d00      	cmp	r5, #0
 800164a:	4606      	mov	r6, r0
 800164c:	db01      	blt.n	8001652 <_malloc_r+0x1a>
 800164e:	42a9      	cmp	r1, r5
 8001650:	d903      	bls.n	800165a <_malloc_r+0x22>
 8001652:	230c      	movs	r3, #12
 8001654:	6033      	str	r3, [r6, #0]
 8001656:	2000      	movs	r0, #0
 8001658:	bd70      	pop	{r4, r5, r6, pc}
 800165a:	f000 fbb7 	bl	8001dcc <__malloc_lock>
 800165e:	4a21      	ldr	r2, [pc, #132]	; (80016e4 <_malloc_r+0xac>)
 8001660:	6814      	ldr	r4, [r2, #0]
 8001662:	4621      	mov	r1, r4
 8001664:	b991      	cbnz	r1, 800168c <_malloc_r+0x54>
 8001666:	4c20      	ldr	r4, [pc, #128]	; (80016e8 <_malloc_r+0xb0>)
 8001668:	6823      	ldr	r3, [r4, #0]
 800166a:	b91b      	cbnz	r3, 8001674 <_malloc_r+0x3c>
 800166c:	4630      	mov	r0, r6
 800166e:	f000 fb03 	bl	8001c78 <_sbrk_r>
 8001672:	6020      	str	r0, [r4, #0]
 8001674:	4629      	mov	r1, r5
 8001676:	4630      	mov	r0, r6
 8001678:	f000 fafe 	bl	8001c78 <_sbrk_r>
 800167c:	1c43      	adds	r3, r0, #1
 800167e:	d124      	bne.n	80016ca <_malloc_r+0x92>
 8001680:	230c      	movs	r3, #12
 8001682:	6033      	str	r3, [r6, #0]
 8001684:	4630      	mov	r0, r6
 8001686:	f000 fba2 	bl	8001dce <__malloc_unlock>
 800168a:	e7e4      	b.n	8001656 <_malloc_r+0x1e>
 800168c:	680b      	ldr	r3, [r1, #0]
 800168e:	1b5b      	subs	r3, r3, r5
 8001690:	d418      	bmi.n	80016c4 <_malloc_r+0x8c>
 8001692:	2b0b      	cmp	r3, #11
 8001694:	d90f      	bls.n	80016b6 <_malloc_r+0x7e>
 8001696:	600b      	str	r3, [r1, #0]
 8001698:	50cd      	str	r5, [r1, r3]
 800169a:	18cc      	adds	r4, r1, r3
 800169c:	4630      	mov	r0, r6
 800169e:	f000 fb96 	bl	8001dce <__malloc_unlock>
 80016a2:	f104 000b 	add.w	r0, r4, #11
 80016a6:	1d23      	adds	r3, r4, #4
 80016a8:	f020 0007 	bic.w	r0, r0, #7
 80016ac:	1ac3      	subs	r3, r0, r3
 80016ae:	d0d3      	beq.n	8001658 <_malloc_r+0x20>
 80016b0:	425a      	negs	r2, r3
 80016b2:	50e2      	str	r2, [r4, r3]
 80016b4:	e7d0      	b.n	8001658 <_malloc_r+0x20>
 80016b6:	428c      	cmp	r4, r1
 80016b8:	684b      	ldr	r3, [r1, #4]
 80016ba:	bf16      	itet	ne
 80016bc:	6063      	strne	r3, [r4, #4]
 80016be:	6013      	streq	r3, [r2, #0]
 80016c0:	460c      	movne	r4, r1
 80016c2:	e7eb      	b.n	800169c <_malloc_r+0x64>
 80016c4:	460c      	mov	r4, r1
 80016c6:	6849      	ldr	r1, [r1, #4]
 80016c8:	e7cc      	b.n	8001664 <_malloc_r+0x2c>
 80016ca:	1cc4      	adds	r4, r0, #3
 80016cc:	f024 0403 	bic.w	r4, r4, #3
 80016d0:	42a0      	cmp	r0, r4
 80016d2:	d005      	beq.n	80016e0 <_malloc_r+0xa8>
 80016d4:	1a21      	subs	r1, r4, r0
 80016d6:	4630      	mov	r0, r6
 80016d8:	f000 face 	bl	8001c78 <_sbrk_r>
 80016dc:	3001      	adds	r0, #1
 80016de:	d0cf      	beq.n	8001680 <_malloc_r+0x48>
 80016e0:	6025      	str	r5, [r4, #0]
 80016e2:	e7db      	b.n	800169c <_malloc_r+0x64>
 80016e4:	2000008c 	.word	0x2000008c
 80016e8:	20000090 	.word	0x20000090

080016ec <__sfputc_r>:
 80016ec:	6893      	ldr	r3, [r2, #8]
 80016ee:	3b01      	subs	r3, #1
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	b410      	push	{r4}
 80016f4:	6093      	str	r3, [r2, #8]
 80016f6:	da07      	bge.n	8001708 <__sfputc_r+0x1c>
 80016f8:	6994      	ldr	r4, [r2, #24]
 80016fa:	42a3      	cmp	r3, r4
 80016fc:	db01      	blt.n	8001702 <__sfputc_r+0x16>
 80016fe:	290a      	cmp	r1, #10
 8001700:	d102      	bne.n	8001708 <__sfputc_r+0x1c>
 8001702:	bc10      	pop	{r4}
 8001704:	f7ff bcac 	b.w	8001060 <__swbuf_r>
 8001708:	6813      	ldr	r3, [r2, #0]
 800170a:	1c58      	adds	r0, r3, #1
 800170c:	6010      	str	r0, [r2, #0]
 800170e:	7019      	strb	r1, [r3, #0]
 8001710:	4608      	mov	r0, r1
 8001712:	bc10      	pop	{r4}
 8001714:	4770      	bx	lr

08001716 <__sfputs_r>:
 8001716:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001718:	4606      	mov	r6, r0
 800171a:	460f      	mov	r7, r1
 800171c:	4614      	mov	r4, r2
 800171e:	18d5      	adds	r5, r2, r3
 8001720:	42ac      	cmp	r4, r5
 8001722:	d101      	bne.n	8001728 <__sfputs_r+0x12>
 8001724:	2000      	movs	r0, #0
 8001726:	e007      	b.n	8001738 <__sfputs_r+0x22>
 8001728:	463a      	mov	r2, r7
 800172a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800172e:	4630      	mov	r0, r6
 8001730:	f7ff ffdc 	bl	80016ec <__sfputc_r>
 8001734:	1c43      	adds	r3, r0, #1
 8001736:	d1f3      	bne.n	8001720 <__sfputs_r+0xa>
 8001738:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800173c <_vfiprintf_r>:
 800173c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001740:	460c      	mov	r4, r1
 8001742:	b09d      	sub	sp, #116	; 0x74
 8001744:	4617      	mov	r7, r2
 8001746:	461d      	mov	r5, r3
 8001748:	4606      	mov	r6, r0
 800174a:	b118      	cbz	r0, 8001754 <_vfiprintf_r+0x18>
 800174c:	6983      	ldr	r3, [r0, #24]
 800174e:	b90b      	cbnz	r3, 8001754 <_vfiprintf_r+0x18>
 8001750:	f7ff fe36 	bl	80013c0 <__sinit>
 8001754:	4b7c      	ldr	r3, [pc, #496]	; (8001948 <_vfiprintf_r+0x20c>)
 8001756:	429c      	cmp	r4, r3
 8001758:	d158      	bne.n	800180c <_vfiprintf_r+0xd0>
 800175a:	6874      	ldr	r4, [r6, #4]
 800175c:	89a3      	ldrh	r3, [r4, #12]
 800175e:	0718      	lsls	r0, r3, #28
 8001760:	d55e      	bpl.n	8001820 <_vfiprintf_r+0xe4>
 8001762:	6923      	ldr	r3, [r4, #16]
 8001764:	2b00      	cmp	r3, #0
 8001766:	d05b      	beq.n	8001820 <_vfiprintf_r+0xe4>
 8001768:	2300      	movs	r3, #0
 800176a:	9309      	str	r3, [sp, #36]	; 0x24
 800176c:	2320      	movs	r3, #32
 800176e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001772:	2330      	movs	r3, #48	; 0x30
 8001774:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001778:	9503      	str	r5, [sp, #12]
 800177a:	f04f 0b01 	mov.w	fp, #1
 800177e:	46b8      	mov	r8, r7
 8001780:	4645      	mov	r5, r8
 8001782:	f815 3b01 	ldrb.w	r3, [r5], #1
 8001786:	b10b      	cbz	r3, 800178c <_vfiprintf_r+0x50>
 8001788:	2b25      	cmp	r3, #37	; 0x25
 800178a:	d154      	bne.n	8001836 <_vfiprintf_r+0xfa>
 800178c:	ebb8 0a07 	subs.w	sl, r8, r7
 8001790:	d00b      	beq.n	80017aa <_vfiprintf_r+0x6e>
 8001792:	4653      	mov	r3, sl
 8001794:	463a      	mov	r2, r7
 8001796:	4621      	mov	r1, r4
 8001798:	4630      	mov	r0, r6
 800179a:	f7ff ffbc 	bl	8001716 <__sfputs_r>
 800179e:	3001      	adds	r0, #1
 80017a0:	f000 80c2 	beq.w	8001928 <_vfiprintf_r+0x1ec>
 80017a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80017a6:	4453      	add	r3, sl
 80017a8:	9309      	str	r3, [sp, #36]	; 0x24
 80017aa:	f898 3000 	ldrb.w	r3, [r8]
 80017ae:	2b00      	cmp	r3, #0
 80017b0:	f000 80ba 	beq.w	8001928 <_vfiprintf_r+0x1ec>
 80017b4:	2300      	movs	r3, #0
 80017b6:	f04f 32ff 	mov.w	r2, #4294967295
 80017ba:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80017be:	9304      	str	r3, [sp, #16]
 80017c0:	9307      	str	r3, [sp, #28]
 80017c2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80017c6:	931a      	str	r3, [sp, #104]	; 0x68
 80017c8:	46a8      	mov	r8, r5
 80017ca:	2205      	movs	r2, #5
 80017cc:	f818 1b01 	ldrb.w	r1, [r8], #1
 80017d0:	485e      	ldr	r0, [pc, #376]	; (800194c <_vfiprintf_r+0x210>)
 80017d2:	f7fe fd35 	bl	8000240 <memchr>
 80017d6:	9b04      	ldr	r3, [sp, #16]
 80017d8:	bb78      	cbnz	r0, 800183a <_vfiprintf_r+0xfe>
 80017da:	06d9      	lsls	r1, r3, #27
 80017dc:	bf44      	itt	mi
 80017de:	2220      	movmi	r2, #32
 80017e0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80017e4:	071a      	lsls	r2, r3, #28
 80017e6:	bf44      	itt	mi
 80017e8:	222b      	movmi	r2, #43	; 0x2b
 80017ea:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80017ee:	782a      	ldrb	r2, [r5, #0]
 80017f0:	2a2a      	cmp	r2, #42	; 0x2a
 80017f2:	d02a      	beq.n	800184a <_vfiprintf_r+0x10e>
 80017f4:	9a07      	ldr	r2, [sp, #28]
 80017f6:	46a8      	mov	r8, r5
 80017f8:	2000      	movs	r0, #0
 80017fa:	250a      	movs	r5, #10
 80017fc:	4641      	mov	r1, r8
 80017fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001802:	3b30      	subs	r3, #48	; 0x30
 8001804:	2b09      	cmp	r3, #9
 8001806:	d969      	bls.n	80018dc <_vfiprintf_r+0x1a0>
 8001808:	b360      	cbz	r0, 8001864 <_vfiprintf_r+0x128>
 800180a:	e024      	b.n	8001856 <_vfiprintf_r+0x11a>
 800180c:	4b50      	ldr	r3, [pc, #320]	; (8001950 <_vfiprintf_r+0x214>)
 800180e:	429c      	cmp	r4, r3
 8001810:	d101      	bne.n	8001816 <_vfiprintf_r+0xda>
 8001812:	68b4      	ldr	r4, [r6, #8]
 8001814:	e7a2      	b.n	800175c <_vfiprintf_r+0x20>
 8001816:	4b4f      	ldr	r3, [pc, #316]	; (8001954 <_vfiprintf_r+0x218>)
 8001818:	429c      	cmp	r4, r3
 800181a:	bf08      	it	eq
 800181c:	68f4      	ldreq	r4, [r6, #12]
 800181e:	e79d      	b.n	800175c <_vfiprintf_r+0x20>
 8001820:	4621      	mov	r1, r4
 8001822:	4630      	mov	r0, r6
 8001824:	f7ff fc6e 	bl	8001104 <__swsetup_r>
 8001828:	2800      	cmp	r0, #0
 800182a:	d09d      	beq.n	8001768 <_vfiprintf_r+0x2c>
 800182c:	f04f 30ff 	mov.w	r0, #4294967295
 8001830:	b01d      	add	sp, #116	; 0x74
 8001832:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001836:	46a8      	mov	r8, r5
 8001838:	e7a2      	b.n	8001780 <_vfiprintf_r+0x44>
 800183a:	4a44      	ldr	r2, [pc, #272]	; (800194c <_vfiprintf_r+0x210>)
 800183c:	1a80      	subs	r0, r0, r2
 800183e:	fa0b f000 	lsl.w	r0, fp, r0
 8001842:	4318      	orrs	r0, r3
 8001844:	9004      	str	r0, [sp, #16]
 8001846:	4645      	mov	r5, r8
 8001848:	e7be      	b.n	80017c8 <_vfiprintf_r+0x8c>
 800184a:	9a03      	ldr	r2, [sp, #12]
 800184c:	1d11      	adds	r1, r2, #4
 800184e:	6812      	ldr	r2, [r2, #0]
 8001850:	9103      	str	r1, [sp, #12]
 8001852:	2a00      	cmp	r2, #0
 8001854:	db01      	blt.n	800185a <_vfiprintf_r+0x11e>
 8001856:	9207      	str	r2, [sp, #28]
 8001858:	e004      	b.n	8001864 <_vfiprintf_r+0x128>
 800185a:	4252      	negs	r2, r2
 800185c:	f043 0302 	orr.w	r3, r3, #2
 8001860:	9207      	str	r2, [sp, #28]
 8001862:	9304      	str	r3, [sp, #16]
 8001864:	f898 3000 	ldrb.w	r3, [r8]
 8001868:	2b2e      	cmp	r3, #46	; 0x2e
 800186a:	d10e      	bne.n	800188a <_vfiprintf_r+0x14e>
 800186c:	f898 3001 	ldrb.w	r3, [r8, #1]
 8001870:	2b2a      	cmp	r3, #42	; 0x2a
 8001872:	d138      	bne.n	80018e6 <_vfiprintf_r+0x1aa>
 8001874:	9b03      	ldr	r3, [sp, #12]
 8001876:	1d1a      	adds	r2, r3, #4
 8001878:	681b      	ldr	r3, [r3, #0]
 800187a:	9203      	str	r2, [sp, #12]
 800187c:	2b00      	cmp	r3, #0
 800187e:	bfb8      	it	lt
 8001880:	f04f 33ff 	movlt.w	r3, #4294967295
 8001884:	f108 0802 	add.w	r8, r8, #2
 8001888:	9305      	str	r3, [sp, #20]
 800188a:	4d33      	ldr	r5, [pc, #204]	; (8001958 <_vfiprintf_r+0x21c>)
 800188c:	f898 1000 	ldrb.w	r1, [r8]
 8001890:	2203      	movs	r2, #3
 8001892:	4628      	mov	r0, r5
 8001894:	f7fe fcd4 	bl	8000240 <memchr>
 8001898:	b140      	cbz	r0, 80018ac <_vfiprintf_r+0x170>
 800189a:	2340      	movs	r3, #64	; 0x40
 800189c:	1b40      	subs	r0, r0, r5
 800189e:	fa03 f000 	lsl.w	r0, r3, r0
 80018a2:	9b04      	ldr	r3, [sp, #16]
 80018a4:	4303      	orrs	r3, r0
 80018a6:	f108 0801 	add.w	r8, r8, #1
 80018aa:	9304      	str	r3, [sp, #16]
 80018ac:	f898 1000 	ldrb.w	r1, [r8]
 80018b0:	482a      	ldr	r0, [pc, #168]	; (800195c <_vfiprintf_r+0x220>)
 80018b2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80018b6:	2206      	movs	r2, #6
 80018b8:	f108 0701 	add.w	r7, r8, #1
 80018bc:	f7fe fcc0 	bl	8000240 <memchr>
 80018c0:	2800      	cmp	r0, #0
 80018c2:	d037      	beq.n	8001934 <_vfiprintf_r+0x1f8>
 80018c4:	4b26      	ldr	r3, [pc, #152]	; (8001960 <_vfiprintf_r+0x224>)
 80018c6:	bb1b      	cbnz	r3, 8001910 <_vfiprintf_r+0x1d4>
 80018c8:	9b03      	ldr	r3, [sp, #12]
 80018ca:	3307      	adds	r3, #7
 80018cc:	f023 0307 	bic.w	r3, r3, #7
 80018d0:	3308      	adds	r3, #8
 80018d2:	9303      	str	r3, [sp, #12]
 80018d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80018d6:	444b      	add	r3, r9
 80018d8:	9309      	str	r3, [sp, #36]	; 0x24
 80018da:	e750      	b.n	800177e <_vfiprintf_r+0x42>
 80018dc:	fb05 3202 	mla	r2, r5, r2, r3
 80018e0:	2001      	movs	r0, #1
 80018e2:	4688      	mov	r8, r1
 80018e4:	e78a      	b.n	80017fc <_vfiprintf_r+0xc0>
 80018e6:	2300      	movs	r3, #0
 80018e8:	f108 0801 	add.w	r8, r8, #1
 80018ec:	9305      	str	r3, [sp, #20]
 80018ee:	4619      	mov	r1, r3
 80018f0:	250a      	movs	r5, #10
 80018f2:	4640      	mov	r0, r8
 80018f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80018f8:	3a30      	subs	r2, #48	; 0x30
 80018fa:	2a09      	cmp	r2, #9
 80018fc:	d903      	bls.n	8001906 <_vfiprintf_r+0x1ca>
 80018fe:	2b00      	cmp	r3, #0
 8001900:	d0c3      	beq.n	800188a <_vfiprintf_r+0x14e>
 8001902:	9105      	str	r1, [sp, #20]
 8001904:	e7c1      	b.n	800188a <_vfiprintf_r+0x14e>
 8001906:	fb05 2101 	mla	r1, r5, r1, r2
 800190a:	2301      	movs	r3, #1
 800190c:	4680      	mov	r8, r0
 800190e:	e7f0      	b.n	80018f2 <_vfiprintf_r+0x1b6>
 8001910:	ab03      	add	r3, sp, #12
 8001912:	9300      	str	r3, [sp, #0]
 8001914:	4622      	mov	r2, r4
 8001916:	4b13      	ldr	r3, [pc, #76]	; (8001964 <_vfiprintf_r+0x228>)
 8001918:	a904      	add	r1, sp, #16
 800191a:	4630      	mov	r0, r6
 800191c:	f3af 8000 	nop.w
 8001920:	f1b0 3fff 	cmp.w	r0, #4294967295
 8001924:	4681      	mov	r9, r0
 8001926:	d1d5      	bne.n	80018d4 <_vfiprintf_r+0x198>
 8001928:	89a3      	ldrh	r3, [r4, #12]
 800192a:	065b      	lsls	r3, r3, #25
 800192c:	f53f af7e 	bmi.w	800182c <_vfiprintf_r+0xf0>
 8001930:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001932:	e77d      	b.n	8001830 <_vfiprintf_r+0xf4>
 8001934:	ab03      	add	r3, sp, #12
 8001936:	9300      	str	r3, [sp, #0]
 8001938:	4622      	mov	r2, r4
 800193a:	4b0a      	ldr	r3, [pc, #40]	; (8001964 <_vfiprintf_r+0x228>)
 800193c:	a904      	add	r1, sp, #16
 800193e:	4630      	mov	r0, r6
 8001940:	f000 f888 	bl	8001a54 <_printf_i>
 8001944:	e7ec      	b.n	8001920 <_vfiprintf_r+0x1e4>
 8001946:	bf00      	nop
 8001948:	0800245c 	.word	0x0800245c
 800194c:	0800249c 	.word	0x0800249c
 8001950:	0800247c 	.word	0x0800247c
 8001954:	0800243c 	.word	0x0800243c
 8001958:	080024a2 	.word	0x080024a2
 800195c:	080024a6 	.word	0x080024a6
 8001960:	00000000 	.word	0x00000000
 8001964:	08001717 	.word	0x08001717

08001968 <_printf_common>:
 8001968:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800196c:	4691      	mov	r9, r2
 800196e:	461f      	mov	r7, r3
 8001970:	688a      	ldr	r2, [r1, #8]
 8001972:	690b      	ldr	r3, [r1, #16]
 8001974:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001978:	4293      	cmp	r3, r2
 800197a:	bfb8      	it	lt
 800197c:	4613      	movlt	r3, r2
 800197e:	f8c9 3000 	str.w	r3, [r9]
 8001982:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001986:	4606      	mov	r6, r0
 8001988:	460c      	mov	r4, r1
 800198a:	b112      	cbz	r2, 8001992 <_printf_common+0x2a>
 800198c:	3301      	adds	r3, #1
 800198e:	f8c9 3000 	str.w	r3, [r9]
 8001992:	6823      	ldr	r3, [r4, #0]
 8001994:	0699      	lsls	r1, r3, #26
 8001996:	bf42      	ittt	mi
 8001998:	f8d9 3000 	ldrmi.w	r3, [r9]
 800199c:	3302      	addmi	r3, #2
 800199e:	f8c9 3000 	strmi.w	r3, [r9]
 80019a2:	6825      	ldr	r5, [r4, #0]
 80019a4:	f015 0506 	ands.w	r5, r5, #6
 80019a8:	d107      	bne.n	80019ba <_printf_common+0x52>
 80019aa:	f104 0a19 	add.w	sl, r4, #25
 80019ae:	68e3      	ldr	r3, [r4, #12]
 80019b0:	f8d9 2000 	ldr.w	r2, [r9]
 80019b4:	1a9b      	subs	r3, r3, r2
 80019b6:	42ab      	cmp	r3, r5
 80019b8:	dc28      	bgt.n	8001a0c <_printf_common+0xa4>
 80019ba:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80019be:	6822      	ldr	r2, [r4, #0]
 80019c0:	3300      	adds	r3, #0
 80019c2:	bf18      	it	ne
 80019c4:	2301      	movne	r3, #1
 80019c6:	0692      	lsls	r2, r2, #26
 80019c8:	d42d      	bmi.n	8001a26 <_printf_common+0xbe>
 80019ca:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80019ce:	4639      	mov	r1, r7
 80019d0:	4630      	mov	r0, r6
 80019d2:	47c0      	blx	r8
 80019d4:	3001      	adds	r0, #1
 80019d6:	d020      	beq.n	8001a1a <_printf_common+0xb2>
 80019d8:	6823      	ldr	r3, [r4, #0]
 80019da:	68e5      	ldr	r5, [r4, #12]
 80019dc:	f8d9 2000 	ldr.w	r2, [r9]
 80019e0:	f003 0306 	and.w	r3, r3, #6
 80019e4:	2b04      	cmp	r3, #4
 80019e6:	bf08      	it	eq
 80019e8:	1aad      	subeq	r5, r5, r2
 80019ea:	68a3      	ldr	r3, [r4, #8]
 80019ec:	6922      	ldr	r2, [r4, #16]
 80019ee:	bf0c      	ite	eq
 80019f0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80019f4:	2500      	movne	r5, #0
 80019f6:	4293      	cmp	r3, r2
 80019f8:	bfc4      	itt	gt
 80019fa:	1a9b      	subgt	r3, r3, r2
 80019fc:	18ed      	addgt	r5, r5, r3
 80019fe:	f04f 0900 	mov.w	r9, #0
 8001a02:	341a      	adds	r4, #26
 8001a04:	454d      	cmp	r5, r9
 8001a06:	d11a      	bne.n	8001a3e <_printf_common+0xd6>
 8001a08:	2000      	movs	r0, #0
 8001a0a:	e008      	b.n	8001a1e <_printf_common+0xb6>
 8001a0c:	2301      	movs	r3, #1
 8001a0e:	4652      	mov	r2, sl
 8001a10:	4639      	mov	r1, r7
 8001a12:	4630      	mov	r0, r6
 8001a14:	47c0      	blx	r8
 8001a16:	3001      	adds	r0, #1
 8001a18:	d103      	bne.n	8001a22 <_printf_common+0xba>
 8001a1a:	f04f 30ff 	mov.w	r0, #4294967295
 8001a1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001a22:	3501      	adds	r5, #1
 8001a24:	e7c3      	b.n	80019ae <_printf_common+0x46>
 8001a26:	18e1      	adds	r1, r4, r3
 8001a28:	1c5a      	adds	r2, r3, #1
 8001a2a:	2030      	movs	r0, #48	; 0x30
 8001a2c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001a30:	4422      	add	r2, r4
 8001a32:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001a36:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001a3a:	3302      	adds	r3, #2
 8001a3c:	e7c5      	b.n	80019ca <_printf_common+0x62>
 8001a3e:	2301      	movs	r3, #1
 8001a40:	4622      	mov	r2, r4
 8001a42:	4639      	mov	r1, r7
 8001a44:	4630      	mov	r0, r6
 8001a46:	47c0      	blx	r8
 8001a48:	3001      	adds	r0, #1
 8001a4a:	d0e6      	beq.n	8001a1a <_printf_common+0xb2>
 8001a4c:	f109 0901 	add.w	r9, r9, #1
 8001a50:	e7d8      	b.n	8001a04 <_printf_common+0x9c>
	...

08001a54 <_printf_i>:
 8001a54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001a58:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001a5c:	460c      	mov	r4, r1
 8001a5e:	7e09      	ldrb	r1, [r1, #24]
 8001a60:	b085      	sub	sp, #20
 8001a62:	296e      	cmp	r1, #110	; 0x6e
 8001a64:	4617      	mov	r7, r2
 8001a66:	4606      	mov	r6, r0
 8001a68:	4698      	mov	r8, r3
 8001a6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001a6c:	f000 80b3 	beq.w	8001bd6 <_printf_i+0x182>
 8001a70:	d822      	bhi.n	8001ab8 <_printf_i+0x64>
 8001a72:	2963      	cmp	r1, #99	; 0x63
 8001a74:	d036      	beq.n	8001ae4 <_printf_i+0x90>
 8001a76:	d80a      	bhi.n	8001a8e <_printf_i+0x3a>
 8001a78:	2900      	cmp	r1, #0
 8001a7a:	f000 80b9 	beq.w	8001bf0 <_printf_i+0x19c>
 8001a7e:	2958      	cmp	r1, #88	; 0x58
 8001a80:	f000 8083 	beq.w	8001b8a <_printf_i+0x136>
 8001a84:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001a88:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001a8c:	e032      	b.n	8001af4 <_printf_i+0xa0>
 8001a8e:	2964      	cmp	r1, #100	; 0x64
 8001a90:	d001      	beq.n	8001a96 <_printf_i+0x42>
 8001a92:	2969      	cmp	r1, #105	; 0x69
 8001a94:	d1f6      	bne.n	8001a84 <_printf_i+0x30>
 8001a96:	6820      	ldr	r0, [r4, #0]
 8001a98:	6813      	ldr	r3, [r2, #0]
 8001a9a:	0605      	lsls	r5, r0, #24
 8001a9c:	f103 0104 	add.w	r1, r3, #4
 8001aa0:	d52a      	bpl.n	8001af8 <_printf_i+0xa4>
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	6011      	str	r1, [r2, #0]
 8001aa6:	2b00      	cmp	r3, #0
 8001aa8:	da03      	bge.n	8001ab2 <_printf_i+0x5e>
 8001aaa:	222d      	movs	r2, #45	; 0x2d
 8001aac:	425b      	negs	r3, r3
 8001aae:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001ab2:	486f      	ldr	r0, [pc, #444]	; (8001c70 <_printf_i+0x21c>)
 8001ab4:	220a      	movs	r2, #10
 8001ab6:	e039      	b.n	8001b2c <_printf_i+0xd8>
 8001ab8:	2973      	cmp	r1, #115	; 0x73
 8001aba:	f000 809d 	beq.w	8001bf8 <_printf_i+0x1a4>
 8001abe:	d808      	bhi.n	8001ad2 <_printf_i+0x7e>
 8001ac0:	296f      	cmp	r1, #111	; 0x6f
 8001ac2:	d020      	beq.n	8001b06 <_printf_i+0xb2>
 8001ac4:	2970      	cmp	r1, #112	; 0x70
 8001ac6:	d1dd      	bne.n	8001a84 <_printf_i+0x30>
 8001ac8:	6823      	ldr	r3, [r4, #0]
 8001aca:	f043 0320 	orr.w	r3, r3, #32
 8001ace:	6023      	str	r3, [r4, #0]
 8001ad0:	e003      	b.n	8001ada <_printf_i+0x86>
 8001ad2:	2975      	cmp	r1, #117	; 0x75
 8001ad4:	d017      	beq.n	8001b06 <_printf_i+0xb2>
 8001ad6:	2978      	cmp	r1, #120	; 0x78
 8001ad8:	d1d4      	bne.n	8001a84 <_printf_i+0x30>
 8001ada:	2378      	movs	r3, #120	; 0x78
 8001adc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001ae0:	4864      	ldr	r0, [pc, #400]	; (8001c74 <_printf_i+0x220>)
 8001ae2:	e055      	b.n	8001b90 <_printf_i+0x13c>
 8001ae4:	6813      	ldr	r3, [r2, #0]
 8001ae6:	1d19      	adds	r1, r3, #4
 8001ae8:	681b      	ldr	r3, [r3, #0]
 8001aea:	6011      	str	r1, [r2, #0]
 8001aec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001af0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001af4:	2301      	movs	r3, #1
 8001af6:	e08c      	b.n	8001c12 <_printf_i+0x1be>
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	6011      	str	r1, [r2, #0]
 8001afc:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001b00:	bf18      	it	ne
 8001b02:	b21b      	sxthne	r3, r3
 8001b04:	e7cf      	b.n	8001aa6 <_printf_i+0x52>
 8001b06:	6813      	ldr	r3, [r2, #0]
 8001b08:	6825      	ldr	r5, [r4, #0]
 8001b0a:	1d18      	adds	r0, r3, #4
 8001b0c:	6010      	str	r0, [r2, #0]
 8001b0e:	0628      	lsls	r0, r5, #24
 8001b10:	d501      	bpl.n	8001b16 <_printf_i+0xc2>
 8001b12:	681b      	ldr	r3, [r3, #0]
 8001b14:	e002      	b.n	8001b1c <_printf_i+0xc8>
 8001b16:	0668      	lsls	r0, r5, #25
 8001b18:	d5fb      	bpl.n	8001b12 <_printf_i+0xbe>
 8001b1a:	881b      	ldrh	r3, [r3, #0]
 8001b1c:	4854      	ldr	r0, [pc, #336]	; (8001c70 <_printf_i+0x21c>)
 8001b1e:	296f      	cmp	r1, #111	; 0x6f
 8001b20:	bf14      	ite	ne
 8001b22:	220a      	movne	r2, #10
 8001b24:	2208      	moveq	r2, #8
 8001b26:	2100      	movs	r1, #0
 8001b28:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001b2c:	6865      	ldr	r5, [r4, #4]
 8001b2e:	60a5      	str	r5, [r4, #8]
 8001b30:	2d00      	cmp	r5, #0
 8001b32:	f2c0 8095 	blt.w	8001c60 <_printf_i+0x20c>
 8001b36:	6821      	ldr	r1, [r4, #0]
 8001b38:	f021 0104 	bic.w	r1, r1, #4
 8001b3c:	6021      	str	r1, [r4, #0]
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	d13d      	bne.n	8001bbe <_printf_i+0x16a>
 8001b42:	2d00      	cmp	r5, #0
 8001b44:	f040 808e 	bne.w	8001c64 <_printf_i+0x210>
 8001b48:	4665      	mov	r5, ip
 8001b4a:	2a08      	cmp	r2, #8
 8001b4c:	d10b      	bne.n	8001b66 <_printf_i+0x112>
 8001b4e:	6823      	ldr	r3, [r4, #0]
 8001b50:	07db      	lsls	r3, r3, #31
 8001b52:	d508      	bpl.n	8001b66 <_printf_i+0x112>
 8001b54:	6923      	ldr	r3, [r4, #16]
 8001b56:	6862      	ldr	r2, [r4, #4]
 8001b58:	429a      	cmp	r2, r3
 8001b5a:	bfde      	ittt	le
 8001b5c:	2330      	movle	r3, #48	; 0x30
 8001b5e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001b62:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001b66:	ebac 0305 	sub.w	r3, ip, r5
 8001b6a:	6123      	str	r3, [r4, #16]
 8001b6c:	f8cd 8000 	str.w	r8, [sp]
 8001b70:	463b      	mov	r3, r7
 8001b72:	aa03      	add	r2, sp, #12
 8001b74:	4621      	mov	r1, r4
 8001b76:	4630      	mov	r0, r6
 8001b78:	f7ff fef6 	bl	8001968 <_printf_common>
 8001b7c:	3001      	adds	r0, #1
 8001b7e:	d14d      	bne.n	8001c1c <_printf_i+0x1c8>
 8001b80:	f04f 30ff 	mov.w	r0, #4294967295
 8001b84:	b005      	add	sp, #20
 8001b86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b8a:	4839      	ldr	r0, [pc, #228]	; (8001c70 <_printf_i+0x21c>)
 8001b8c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001b90:	6813      	ldr	r3, [r2, #0]
 8001b92:	6821      	ldr	r1, [r4, #0]
 8001b94:	1d1d      	adds	r5, r3, #4
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	6015      	str	r5, [r2, #0]
 8001b9a:	060a      	lsls	r2, r1, #24
 8001b9c:	d50b      	bpl.n	8001bb6 <_printf_i+0x162>
 8001b9e:	07ca      	lsls	r2, r1, #31
 8001ba0:	bf44      	itt	mi
 8001ba2:	f041 0120 	orrmi.w	r1, r1, #32
 8001ba6:	6021      	strmi	r1, [r4, #0]
 8001ba8:	b91b      	cbnz	r3, 8001bb2 <_printf_i+0x15e>
 8001baa:	6822      	ldr	r2, [r4, #0]
 8001bac:	f022 0220 	bic.w	r2, r2, #32
 8001bb0:	6022      	str	r2, [r4, #0]
 8001bb2:	2210      	movs	r2, #16
 8001bb4:	e7b7      	b.n	8001b26 <_printf_i+0xd2>
 8001bb6:	064d      	lsls	r5, r1, #25
 8001bb8:	bf48      	it	mi
 8001bba:	b29b      	uxthmi	r3, r3
 8001bbc:	e7ef      	b.n	8001b9e <_printf_i+0x14a>
 8001bbe:	4665      	mov	r5, ip
 8001bc0:	fbb3 f1f2 	udiv	r1, r3, r2
 8001bc4:	fb02 3311 	mls	r3, r2, r1, r3
 8001bc8:	5cc3      	ldrb	r3, [r0, r3]
 8001bca:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001bce:	460b      	mov	r3, r1
 8001bd0:	2900      	cmp	r1, #0
 8001bd2:	d1f5      	bne.n	8001bc0 <_printf_i+0x16c>
 8001bd4:	e7b9      	b.n	8001b4a <_printf_i+0xf6>
 8001bd6:	6813      	ldr	r3, [r2, #0]
 8001bd8:	6825      	ldr	r5, [r4, #0]
 8001bda:	6961      	ldr	r1, [r4, #20]
 8001bdc:	1d18      	adds	r0, r3, #4
 8001bde:	6010      	str	r0, [r2, #0]
 8001be0:	0628      	lsls	r0, r5, #24
 8001be2:	681b      	ldr	r3, [r3, #0]
 8001be4:	d501      	bpl.n	8001bea <_printf_i+0x196>
 8001be6:	6019      	str	r1, [r3, #0]
 8001be8:	e002      	b.n	8001bf0 <_printf_i+0x19c>
 8001bea:	066a      	lsls	r2, r5, #25
 8001bec:	d5fb      	bpl.n	8001be6 <_printf_i+0x192>
 8001bee:	8019      	strh	r1, [r3, #0]
 8001bf0:	2300      	movs	r3, #0
 8001bf2:	6123      	str	r3, [r4, #16]
 8001bf4:	4665      	mov	r5, ip
 8001bf6:	e7b9      	b.n	8001b6c <_printf_i+0x118>
 8001bf8:	6813      	ldr	r3, [r2, #0]
 8001bfa:	1d19      	adds	r1, r3, #4
 8001bfc:	6011      	str	r1, [r2, #0]
 8001bfe:	681d      	ldr	r5, [r3, #0]
 8001c00:	6862      	ldr	r2, [r4, #4]
 8001c02:	2100      	movs	r1, #0
 8001c04:	4628      	mov	r0, r5
 8001c06:	f7fe fb1b 	bl	8000240 <memchr>
 8001c0a:	b108      	cbz	r0, 8001c10 <_printf_i+0x1bc>
 8001c0c:	1b40      	subs	r0, r0, r5
 8001c0e:	6060      	str	r0, [r4, #4]
 8001c10:	6863      	ldr	r3, [r4, #4]
 8001c12:	6123      	str	r3, [r4, #16]
 8001c14:	2300      	movs	r3, #0
 8001c16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c1a:	e7a7      	b.n	8001b6c <_printf_i+0x118>
 8001c1c:	6923      	ldr	r3, [r4, #16]
 8001c1e:	462a      	mov	r2, r5
 8001c20:	4639      	mov	r1, r7
 8001c22:	4630      	mov	r0, r6
 8001c24:	47c0      	blx	r8
 8001c26:	3001      	adds	r0, #1
 8001c28:	d0aa      	beq.n	8001b80 <_printf_i+0x12c>
 8001c2a:	6823      	ldr	r3, [r4, #0]
 8001c2c:	079b      	lsls	r3, r3, #30
 8001c2e:	d413      	bmi.n	8001c58 <_printf_i+0x204>
 8001c30:	68e0      	ldr	r0, [r4, #12]
 8001c32:	9b03      	ldr	r3, [sp, #12]
 8001c34:	4298      	cmp	r0, r3
 8001c36:	bfb8      	it	lt
 8001c38:	4618      	movlt	r0, r3
 8001c3a:	e7a3      	b.n	8001b84 <_printf_i+0x130>
 8001c3c:	2301      	movs	r3, #1
 8001c3e:	464a      	mov	r2, r9
 8001c40:	4639      	mov	r1, r7
 8001c42:	4630      	mov	r0, r6
 8001c44:	47c0      	blx	r8
 8001c46:	3001      	adds	r0, #1
 8001c48:	d09a      	beq.n	8001b80 <_printf_i+0x12c>
 8001c4a:	3501      	adds	r5, #1
 8001c4c:	68e3      	ldr	r3, [r4, #12]
 8001c4e:	9a03      	ldr	r2, [sp, #12]
 8001c50:	1a9b      	subs	r3, r3, r2
 8001c52:	42ab      	cmp	r3, r5
 8001c54:	dcf2      	bgt.n	8001c3c <_printf_i+0x1e8>
 8001c56:	e7eb      	b.n	8001c30 <_printf_i+0x1dc>
 8001c58:	2500      	movs	r5, #0
 8001c5a:	f104 0919 	add.w	r9, r4, #25
 8001c5e:	e7f5      	b.n	8001c4c <_printf_i+0x1f8>
 8001c60:	2b00      	cmp	r3, #0
 8001c62:	d1ac      	bne.n	8001bbe <_printf_i+0x16a>
 8001c64:	7803      	ldrb	r3, [r0, #0]
 8001c66:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001c6a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001c6e:	e76c      	b.n	8001b4a <_printf_i+0xf6>
 8001c70:	080024ad 	.word	0x080024ad
 8001c74:	080024be 	.word	0x080024be

08001c78 <_sbrk_r>:
 8001c78:	b538      	push	{r3, r4, r5, lr}
 8001c7a:	4c06      	ldr	r4, [pc, #24]	; (8001c94 <_sbrk_r+0x1c>)
 8001c7c:	2300      	movs	r3, #0
 8001c7e:	4605      	mov	r5, r0
 8001c80:	4608      	mov	r0, r1
 8001c82:	6023      	str	r3, [r4, #0]
 8001c84:	f000 f9bc 	bl	8002000 <_sbrk>
 8001c88:	1c43      	adds	r3, r0, #1
 8001c8a:	d102      	bne.n	8001c92 <_sbrk_r+0x1a>
 8001c8c:	6823      	ldr	r3, [r4, #0]
 8001c8e:	b103      	cbz	r3, 8001c92 <_sbrk_r+0x1a>
 8001c90:	602b      	str	r3, [r5, #0]
 8001c92:	bd38      	pop	{r3, r4, r5, pc}
 8001c94:	20000144 	.word	0x20000144

08001c98 <__sread>:
 8001c98:	b510      	push	{r4, lr}
 8001c9a:	460c      	mov	r4, r1
 8001c9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ca0:	f000 f896 	bl	8001dd0 <_read_r>
 8001ca4:	2800      	cmp	r0, #0
 8001ca6:	bfab      	itete	ge
 8001ca8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001caa:	89a3      	ldrhlt	r3, [r4, #12]
 8001cac:	181b      	addge	r3, r3, r0
 8001cae:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001cb2:	bfac      	ite	ge
 8001cb4:	6563      	strge	r3, [r4, #84]	; 0x54
 8001cb6:	81a3      	strhlt	r3, [r4, #12]
 8001cb8:	bd10      	pop	{r4, pc}

08001cba <__swrite>:
 8001cba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cbe:	461f      	mov	r7, r3
 8001cc0:	898b      	ldrh	r3, [r1, #12]
 8001cc2:	05db      	lsls	r3, r3, #23
 8001cc4:	4605      	mov	r5, r0
 8001cc6:	460c      	mov	r4, r1
 8001cc8:	4616      	mov	r6, r2
 8001cca:	d505      	bpl.n	8001cd8 <__swrite+0x1e>
 8001ccc:	2302      	movs	r3, #2
 8001cce:	2200      	movs	r2, #0
 8001cd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001cd4:	f000 f868 	bl	8001da8 <_lseek_r>
 8001cd8:	89a3      	ldrh	r3, [r4, #12]
 8001cda:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001cde:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001ce2:	81a3      	strh	r3, [r4, #12]
 8001ce4:	4632      	mov	r2, r6
 8001ce6:	463b      	mov	r3, r7
 8001ce8:	4628      	mov	r0, r5
 8001cea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001cee:	f000 b817 	b.w	8001d20 <_write_r>

08001cf2 <__sseek>:
 8001cf2:	b510      	push	{r4, lr}
 8001cf4:	460c      	mov	r4, r1
 8001cf6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001cfa:	f000 f855 	bl	8001da8 <_lseek_r>
 8001cfe:	1c43      	adds	r3, r0, #1
 8001d00:	89a3      	ldrh	r3, [r4, #12]
 8001d02:	bf15      	itete	ne
 8001d04:	6560      	strne	r0, [r4, #84]	; 0x54
 8001d06:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001d0a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001d0e:	81a3      	strheq	r3, [r4, #12]
 8001d10:	bf18      	it	ne
 8001d12:	81a3      	strhne	r3, [r4, #12]
 8001d14:	bd10      	pop	{r4, pc}

08001d16 <__sclose>:
 8001d16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001d1a:	f000 b813 	b.w	8001d44 <_close_r>
	...

08001d20 <_write_r>:
 8001d20:	b538      	push	{r3, r4, r5, lr}
 8001d22:	4c07      	ldr	r4, [pc, #28]	; (8001d40 <_write_r+0x20>)
 8001d24:	4605      	mov	r5, r0
 8001d26:	4608      	mov	r0, r1
 8001d28:	4611      	mov	r1, r2
 8001d2a:	2200      	movs	r2, #0
 8001d2c:	6022      	str	r2, [r4, #0]
 8001d2e:	461a      	mov	r2, r3
 8001d30:	f000 f911 	bl	8001f56 <_write>
 8001d34:	1c43      	adds	r3, r0, #1
 8001d36:	d102      	bne.n	8001d3e <_write_r+0x1e>
 8001d38:	6823      	ldr	r3, [r4, #0]
 8001d3a:	b103      	cbz	r3, 8001d3e <_write_r+0x1e>
 8001d3c:	602b      	str	r3, [r5, #0]
 8001d3e:	bd38      	pop	{r3, r4, r5, pc}
 8001d40:	20000144 	.word	0x20000144

08001d44 <_close_r>:
 8001d44:	b538      	push	{r3, r4, r5, lr}
 8001d46:	4c06      	ldr	r4, [pc, #24]	; (8001d60 <_close_r+0x1c>)
 8001d48:	2300      	movs	r3, #0
 8001d4a:	4605      	mov	r5, r0
 8001d4c:	4608      	mov	r0, r1
 8001d4e:	6023      	str	r3, [r4, #0]
 8001d50:	f000 f930 	bl	8001fb4 <_close>
 8001d54:	1c43      	adds	r3, r0, #1
 8001d56:	d102      	bne.n	8001d5e <_close_r+0x1a>
 8001d58:	6823      	ldr	r3, [r4, #0]
 8001d5a:	b103      	cbz	r3, 8001d5e <_close_r+0x1a>
 8001d5c:	602b      	str	r3, [r5, #0]
 8001d5e:	bd38      	pop	{r3, r4, r5, pc}
 8001d60:	20000144 	.word	0x20000144

08001d64 <_fstat_r>:
 8001d64:	b538      	push	{r3, r4, r5, lr}
 8001d66:	4c07      	ldr	r4, [pc, #28]	; (8001d84 <_fstat_r+0x20>)
 8001d68:	2300      	movs	r3, #0
 8001d6a:	4605      	mov	r5, r0
 8001d6c:	4608      	mov	r0, r1
 8001d6e:	4611      	mov	r1, r2
 8001d70:	6023      	str	r3, [r4, #0]
 8001d72:	f000 f98a 	bl	800208a <_fstat>
 8001d76:	1c43      	adds	r3, r0, #1
 8001d78:	d102      	bne.n	8001d80 <_fstat_r+0x1c>
 8001d7a:	6823      	ldr	r3, [r4, #0]
 8001d7c:	b103      	cbz	r3, 8001d80 <_fstat_r+0x1c>
 8001d7e:	602b      	str	r3, [r5, #0]
 8001d80:	bd38      	pop	{r3, r4, r5, pc}
 8001d82:	bf00      	nop
 8001d84:	20000144 	.word	0x20000144

08001d88 <_isatty_r>:
 8001d88:	b538      	push	{r3, r4, r5, lr}
 8001d8a:	4c06      	ldr	r4, [pc, #24]	; (8001da4 <_isatty_r+0x1c>)
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	4605      	mov	r5, r0
 8001d90:	4608      	mov	r0, r1
 8001d92:	6023      	str	r3, [r4, #0]
 8001d94:	f000 fade 	bl	8002354 <_isatty>
 8001d98:	1c43      	adds	r3, r0, #1
 8001d9a:	d102      	bne.n	8001da2 <_isatty_r+0x1a>
 8001d9c:	6823      	ldr	r3, [r4, #0]
 8001d9e:	b103      	cbz	r3, 8001da2 <_isatty_r+0x1a>
 8001da0:	602b      	str	r3, [r5, #0]
 8001da2:	bd38      	pop	{r3, r4, r5, pc}
 8001da4:	20000144 	.word	0x20000144

08001da8 <_lseek_r>:
 8001da8:	b538      	push	{r3, r4, r5, lr}
 8001daa:	4c07      	ldr	r4, [pc, #28]	; (8001dc8 <_lseek_r+0x20>)
 8001dac:	4605      	mov	r5, r0
 8001dae:	4608      	mov	r0, r1
 8001db0:	4611      	mov	r1, r2
 8001db2:	2200      	movs	r2, #0
 8001db4:	6022      	str	r2, [r4, #0]
 8001db6:	461a      	mov	r2, r3
 8001db8:	f000 f8bb 	bl	8001f32 <_lseek>
 8001dbc:	1c43      	adds	r3, r0, #1
 8001dbe:	d102      	bne.n	8001dc6 <_lseek_r+0x1e>
 8001dc0:	6823      	ldr	r3, [r4, #0]
 8001dc2:	b103      	cbz	r3, 8001dc6 <_lseek_r+0x1e>
 8001dc4:	602b      	str	r3, [r5, #0]
 8001dc6:	bd38      	pop	{r3, r4, r5, pc}
 8001dc8:	20000144 	.word	0x20000144

08001dcc <__malloc_lock>:
 8001dcc:	4770      	bx	lr

08001dce <__malloc_unlock>:
 8001dce:	4770      	bx	lr

08001dd0 <_read_r>:
 8001dd0:	b538      	push	{r3, r4, r5, lr}
 8001dd2:	4c07      	ldr	r4, [pc, #28]	; (8001df0 <_read_r+0x20>)
 8001dd4:	4605      	mov	r5, r0
 8001dd6:	4608      	mov	r0, r1
 8001dd8:	4611      	mov	r1, r2
 8001dda:	2200      	movs	r2, #0
 8001ddc:	6022      	str	r2, [r4, #0]
 8001dde:	461a      	mov	r2, r3
 8001de0:	f000 f850 	bl	8001e84 <_read>
 8001de4:	1c43      	adds	r3, r0, #1
 8001de6:	d102      	bne.n	8001dee <_read_r+0x1e>
 8001de8:	6823      	ldr	r3, [r4, #0]
 8001dea:	b103      	cbz	r3, 8001dee <_read_r+0x1e>
 8001dec:	602b      	str	r3, [r5, #0]
 8001dee:	bd38      	pop	{r3, r4, r5, pc}
 8001df0:	20000144 	.word	0x20000144

08001df4 <findslot>:
 8001df4:	4b0a      	ldr	r3, [pc, #40]	; (8001e20 <findslot+0x2c>)
 8001df6:	b510      	push	{r4, lr}
 8001df8:	4604      	mov	r4, r0
 8001dfa:	6818      	ldr	r0, [r3, #0]
 8001dfc:	b118      	cbz	r0, 8001e06 <findslot+0x12>
 8001dfe:	6983      	ldr	r3, [r0, #24]
 8001e00:	b90b      	cbnz	r3, 8001e06 <findslot+0x12>
 8001e02:	f7ff fadd 	bl	80013c0 <__sinit>
 8001e06:	2c13      	cmp	r4, #19
 8001e08:	d807      	bhi.n	8001e1a <findslot+0x26>
 8001e0a:	4806      	ldr	r0, [pc, #24]	; (8001e24 <findslot+0x30>)
 8001e0c:	f850 3034 	ldr.w	r3, [r0, r4, lsl #3]
 8001e10:	3301      	adds	r3, #1
 8001e12:	d002      	beq.n	8001e1a <findslot+0x26>
 8001e14:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001e18:	bd10      	pop	{r4, pc}
 8001e1a:	2000      	movs	r0, #0
 8001e1c:	e7fc      	b.n	8001e18 <findslot+0x24>
 8001e1e:	bf00      	nop
 8001e20:	20000000 	.word	0x20000000
 8001e24:	200000a4 	.word	0x200000a4

08001e28 <checkerror>:
 8001e28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e2a:	1c43      	adds	r3, r0, #1
 8001e2c:	4605      	mov	r5, r0
 8001e2e:	d109      	bne.n	8001e44 <checkerror+0x1c>
 8001e30:	f000 faac 	bl	800238c <__errno>
 8001e34:	2413      	movs	r4, #19
 8001e36:	4606      	mov	r6, r0
 8001e38:	2700      	movs	r7, #0
 8001e3a:	4620      	mov	r0, r4
 8001e3c:	4639      	mov	r1, r7
 8001e3e:	beab      	bkpt	0x00ab
 8001e40:	4604      	mov	r4, r0
 8001e42:	6034      	str	r4, [r6, #0]
 8001e44:	4628      	mov	r0, r5
 8001e46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001e48 <error>:
 8001e48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e4a:	4605      	mov	r5, r0
 8001e4c:	f000 fa9e 	bl	800238c <__errno>
 8001e50:	2413      	movs	r4, #19
 8001e52:	4606      	mov	r6, r0
 8001e54:	2700      	movs	r7, #0
 8001e56:	4620      	mov	r0, r4
 8001e58:	4639      	mov	r1, r7
 8001e5a:	beab      	bkpt	0x00ab
 8001e5c:	4604      	mov	r4, r0
 8001e5e:	6034      	str	r4, [r6, #0]
 8001e60:	4628      	mov	r0, r5
 8001e62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001e64 <_swiread>:
 8001e64:	b530      	push	{r4, r5, lr}
 8001e66:	b085      	sub	sp, #20
 8001e68:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001e6c:	9203      	str	r2, [sp, #12]
 8001e6e:	2406      	movs	r4, #6
 8001e70:	ad01      	add	r5, sp, #4
 8001e72:	4620      	mov	r0, r4
 8001e74:	4629      	mov	r1, r5
 8001e76:	beab      	bkpt	0x00ab
 8001e78:	4604      	mov	r4, r0
 8001e7a:	4620      	mov	r0, r4
 8001e7c:	f7ff ffd4 	bl	8001e28 <checkerror>
 8001e80:	b005      	add	sp, #20
 8001e82:	bd30      	pop	{r4, r5, pc}

08001e84 <_read>:
 8001e84:	b570      	push	{r4, r5, r6, lr}
 8001e86:	460e      	mov	r6, r1
 8001e88:	4615      	mov	r5, r2
 8001e8a:	f7ff ffb3 	bl	8001df4 <findslot>
 8001e8e:	4604      	mov	r4, r0
 8001e90:	b930      	cbnz	r0, 8001ea0 <_read+0x1c>
 8001e92:	f000 fa7b 	bl	800238c <__errno>
 8001e96:	2309      	movs	r3, #9
 8001e98:	6003      	str	r3, [r0, #0]
 8001e9a:	f04f 30ff 	mov.w	r0, #4294967295
 8001e9e:	bd70      	pop	{r4, r5, r6, pc}
 8001ea0:	462a      	mov	r2, r5
 8001ea2:	4631      	mov	r1, r6
 8001ea4:	6800      	ldr	r0, [r0, #0]
 8001ea6:	f7ff ffdd 	bl	8001e64 <_swiread>
 8001eaa:	1c43      	adds	r3, r0, #1
 8001eac:	bf1f      	itttt	ne
 8001eae:	6863      	ldrne	r3, [r4, #4]
 8001eb0:	1a28      	subne	r0, r5, r0
 8001eb2:	181b      	addne	r3, r3, r0
 8001eb4:	6063      	strne	r3, [r4, #4]
 8001eb6:	e7f2      	b.n	8001e9e <_read+0x1a>

08001eb8 <_swilseek>:
 8001eb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001eba:	460c      	mov	r4, r1
 8001ebc:	4616      	mov	r6, r2
 8001ebe:	f7ff ff99 	bl	8001df4 <findslot>
 8001ec2:	4605      	mov	r5, r0
 8001ec4:	b940      	cbnz	r0, 8001ed8 <_swilseek+0x20>
 8001ec6:	f000 fa61 	bl	800238c <__errno>
 8001eca:	2309      	movs	r3, #9
 8001ecc:	6003      	str	r3, [r0, #0]
 8001ece:	f04f 34ff 	mov.w	r4, #4294967295
 8001ed2:	4620      	mov	r0, r4
 8001ed4:	b003      	add	sp, #12
 8001ed6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ed8:	2e02      	cmp	r6, #2
 8001eda:	d903      	bls.n	8001ee4 <_swilseek+0x2c>
 8001edc:	f000 fa56 	bl	800238c <__errno>
 8001ee0:	2316      	movs	r3, #22
 8001ee2:	e7f3      	b.n	8001ecc <_swilseek+0x14>
 8001ee4:	2e01      	cmp	r6, #1
 8001ee6:	d112      	bne.n	8001f0e <_swilseek+0x56>
 8001ee8:	6843      	ldr	r3, [r0, #4]
 8001eea:	18e4      	adds	r4, r4, r3
 8001eec:	d4f6      	bmi.n	8001edc <_swilseek+0x24>
 8001eee:	682b      	ldr	r3, [r5, #0]
 8001ef0:	260a      	movs	r6, #10
 8001ef2:	e9cd 3400 	strd	r3, r4, [sp]
 8001ef6:	466f      	mov	r7, sp
 8001ef8:	4630      	mov	r0, r6
 8001efa:	4639      	mov	r1, r7
 8001efc:	beab      	bkpt	0x00ab
 8001efe:	4606      	mov	r6, r0
 8001f00:	4630      	mov	r0, r6
 8001f02:	f7ff ff91 	bl	8001e28 <checkerror>
 8001f06:	2800      	cmp	r0, #0
 8001f08:	dbe1      	blt.n	8001ece <_swilseek+0x16>
 8001f0a:	606c      	str	r4, [r5, #4]
 8001f0c:	e7e1      	b.n	8001ed2 <_swilseek+0x1a>
 8001f0e:	2e02      	cmp	r6, #2
 8001f10:	d1ed      	bne.n	8001eee <_swilseek+0x36>
 8001f12:	af02      	add	r7, sp, #8
 8001f14:	6803      	ldr	r3, [r0, #0]
 8001f16:	f847 3d08 	str.w	r3, [r7, #-8]!
 8001f1a:	260c      	movs	r6, #12
 8001f1c:	4630      	mov	r0, r6
 8001f1e:	4639      	mov	r1, r7
 8001f20:	beab      	bkpt	0x00ab
 8001f22:	4606      	mov	r6, r0
 8001f24:	4630      	mov	r0, r6
 8001f26:	f7ff ff7f 	bl	8001e28 <checkerror>
 8001f2a:	1c43      	adds	r3, r0, #1
 8001f2c:	d0cf      	beq.n	8001ece <_swilseek+0x16>
 8001f2e:	4404      	add	r4, r0
 8001f30:	e7dd      	b.n	8001eee <_swilseek+0x36>

08001f32 <_lseek>:
 8001f32:	f7ff bfc1 	b.w	8001eb8 <_swilseek>

08001f36 <_swiwrite>:
 8001f36:	b530      	push	{r4, r5, lr}
 8001f38:	b085      	sub	sp, #20
 8001f3a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001f3e:	9203      	str	r2, [sp, #12]
 8001f40:	2405      	movs	r4, #5
 8001f42:	ad01      	add	r5, sp, #4
 8001f44:	4620      	mov	r0, r4
 8001f46:	4629      	mov	r1, r5
 8001f48:	beab      	bkpt	0x00ab
 8001f4a:	4604      	mov	r4, r0
 8001f4c:	4620      	mov	r0, r4
 8001f4e:	f7ff ff6b 	bl	8001e28 <checkerror>
 8001f52:	b005      	add	sp, #20
 8001f54:	bd30      	pop	{r4, r5, pc}

08001f56 <_write>:
 8001f56:	b570      	push	{r4, r5, r6, lr}
 8001f58:	460e      	mov	r6, r1
 8001f5a:	4615      	mov	r5, r2
 8001f5c:	f7ff ff4a 	bl	8001df4 <findslot>
 8001f60:	4604      	mov	r4, r0
 8001f62:	b930      	cbnz	r0, 8001f72 <_write+0x1c>
 8001f64:	f000 fa12 	bl	800238c <__errno>
 8001f68:	2309      	movs	r3, #9
 8001f6a:	6003      	str	r3, [r0, #0]
 8001f6c:	f04f 30ff 	mov.w	r0, #4294967295
 8001f70:	bd70      	pop	{r4, r5, r6, pc}
 8001f72:	462a      	mov	r2, r5
 8001f74:	4631      	mov	r1, r6
 8001f76:	6800      	ldr	r0, [r0, #0]
 8001f78:	f7ff ffdd 	bl	8001f36 <_swiwrite>
 8001f7c:	1e02      	subs	r2, r0, #0
 8001f7e:	dbf5      	blt.n	8001f6c <_write+0x16>
 8001f80:	6863      	ldr	r3, [r4, #4]
 8001f82:	1aa8      	subs	r0, r5, r2
 8001f84:	4403      	add	r3, r0
 8001f86:	42aa      	cmp	r2, r5
 8001f88:	6063      	str	r3, [r4, #4]
 8001f8a:	d1f1      	bne.n	8001f70 <_write+0x1a>
 8001f8c:	2000      	movs	r0, #0
 8001f8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001f92:	f7ff bf59 	b.w	8001e48 <error>

08001f96 <_swiclose>:
 8001f96:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001f98:	ad02      	add	r5, sp, #8
 8001f9a:	2402      	movs	r4, #2
 8001f9c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8001fa0:	4620      	mov	r0, r4
 8001fa2:	4629      	mov	r1, r5
 8001fa4:	beab      	bkpt	0x00ab
 8001fa6:	4604      	mov	r4, r0
 8001fa8:	4620      	mov	r0, r4
 8001faa:	f7ff ff3d 	bl	8001e28 <checkerror>
 8001fae:	b003      	add	sp, #12
 8001fb0:	bd30      	pop	{r4, r5, pc}
	...

08001fb4 <_close>:
 8001fb4:	b538      	push	{r3, r4, r5, lr}
 8001fb6:	4605      	mov	r5, r0
 8001fb8:	f7ff ff1c 	bl	8001df4 <findslot>
 8001fbc:	4604      	mov	r4, r0
 8001fbe:	b930      	cbnz	r0, 8001fce <_close+0x1a>
 8001fc0:	f000 f9e4 	bl	800238c <__errno>
 8001fc4:	2309      	movs	r3, #9
 8001fc6:	6003      	str	r3, [r0, #0]
 8001fc8:	f04f 30ff 	mov.w	r0, #4294967295
 8001fcc:	bd38      	pop	{r3, r4, r5, pc}
 8001fce:	3d01      	subs	r5, #1
 8001fd0:	2d01      	cmp	r5, #1
 8001fd2:	d809      	bhi.n	8001fe8 <_close+0x34>
 8001fd4:	4b09      	ldr	r3, [pc, #36]	; (8001ffc <_close+0x48>)
 8001fd6:	689a      	ldr	r2, [r3, #8]
 8001fd8:	691b      	ldr	r3, [r3, #16]
 8001fda:	429a      	cmp	r2, r3
 8001fdc:	d104      	bne.n	8001fe8 <_close+0x34>
 8001fde:	f04f 33ff 	mov.w	r3, #4294967295
 8001fe2:	6003      	str	r3, [r0, #0]
 8001fe4:	2000      	movs	r0, #0
 8001fe6:	e7f1      	b.n	8001fcc <_close+0x18>
 8001fe8:	6820      	ldr	r0, [r4, #0]
 8001fea:	f7ff ffd4 	bl	8001f96 <_swiclose>
 8001fee:	2800      	cmp	r0, #0
 8001ff0:	d1ec      	bne.n	8001fcc <_close+0x18>
 8001ff2:	f04f 33ff 	mov.w	r3, #4294967295
 8001ff6:	6023      	str	r3, [r4, #0]
 8001ff8:	e7e8      	b.n	8001fcc <_close+0x18>
 8001ffa:	bf00      	nop
 8001ffc:	200000a4 	.word	0x200000a4

08002000 <_sbrk>:
 8002000:	4b0d      	ldr	r3, [pc, #52]	; (8002038 <_sbrk+0x38>)
 8002002:	6819      	ldr	r1, [r3, #0]
 8002004:	b510      	push	{r4, lr}
 8002006:	4602      	mov	r2, r0
 8002008:	b909      	cbnz	r1, 800200e <_sbrk+0xe>
 800200a:	490c      	ldr	r1, [pc, #48]	; (800203c <_sbrk+0x3c>)
 800200c:	6019      	str	r1, [r3, #0]
 800200e:	6818      	ldr	r0, [r3, #0]
 8002010:	4669      	mov	r1, sp
 8002012:	4402      	add	r2, r0
 8002014:	428a      	cmp	r2, r1
 8002016:	d806      	bhi.n	8002026 <_sbrk+0x26>
 8002018:	4909      	ldr	r1, [pc, #36]	; (8002040 <_sbrk+0x40>)
 800201a:	4c0a      	ldr	r4, [pc, #40]	; (8002044 <_sbrk+0x44>)
 800201c:	6809      	ldr	r1, [r1, #0]
 800201e:	42a1      	cmp	r1, r4
 8002020:	d008      	beq.n	8002034 <_sbrk+0x34>
 8002022:	428a      	cmp	r2, r1
 8002024:	d906      	bls.n	8002034 <_sbrk+0x34>
 8002026:	f000 f9b1 	bl	800238c <__errno>
 800202a:	230c      	movs	r3, #12
 800202c:	6003      	str	r3, [r0, #0]
 800202e:	f04f 30ff 	mov.w	r0, #4294967295
 8002032:	bd10      	pop	{r4, pc}
 8002034:	601a      	str	r2, [r3, #0]
 8002036:	e7fc      	b.n	8002032 <_sbrk+0x32>
 8002038:	20000094 	.word	0x20000094
 800203c:	20000148 	.word	0x20000148
 8002040:	20000064 	.word	0x20000064
 8002044:	cafedead 	.word	0xcafedead

08002048 <_swistat>:
 8002048:	b570      	push	{r4, r5, r6, lr}
 800204a:	460c      	mov	r4, r1
 800204c:	f7ff fed2 	bl	8001df4 <findslot>
 8002050:	4606      	mov	r6, r0
 8002052:	b930      	cbnz	r0, 8002062 <_swistat+0x1a>
 8002054:	f000 f99a 	bl	800238c <__errno>
 8002058:	2309      	movs	r3, #9
 800205a:	6003      	str	r3, [r0, #0]
 800205c:	f04f 30ff 	mov.w	r0, #4294967295
 8002060:	bd70      	pop	{r4, r5, r6, pc}
 8002062:	6863      	ldr	r3, [r4, #4]
 8002064:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002068:	6063      	str	r3, [r4, #4]
 800206a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800206e:	6463      	str	r3, [r4, #68]	; 0x44
 8002070:	250c      	movs	r5, #12
 8002072:	4628      	mov	r0, r5
 8002074:	4631      	mov	r1, r6
 8002076:	beab      	bkpt	0x00ab
 8002078:	4605      	mov	r5, r0
 800207a:	4628      	mov	r0, r5
 800207c:	f7ff fed4 	bl	8001e28 <checkerror>
 8002080:	1c43      	adds	r3, r0, #1
 8002082:	bf1c      	itt	ne
 8002084:	6120      	strne	r0, [r4, #16]
 8002086:	2000      	movne	r0, #0
 8002088:	e7ea      	b.n	8002060 <_swistat+0x18>

0800208a <_fstat>:
 800208a:	460b      	mov	r3, r1
 800208c:	b510      	push	{r4, lr}
 800208e:	2100      	movs	r1, #0
 8002090:	4604      	mov	r4, r0
 8002092:	2258      	movs	r2, #88	; 0x58
 8002094:	4618      	mov	r0, r3
 8002096:	f7fe ff5f 	bl	8000f58 <memset>
 800209a:	4601      	mov	r1, r0
 800209c:	4620      	mov	r0, r4
 800209e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80020a2:	f7ff bfd1 	b.w	8002048 <_swistat>

080020a6 <_stat>:
 80020a6:	b538      	push	{r3, r4, r5, lr}
 80020a8:	460d      	mov	r5, r1
 80020aa:	4604      	mov	r4, r0
 80020ac:	2258      	movs	r2, #88	; 0x58
 80020ae:	2100      	movs	r1, #0
 80020b0:	4628      	mov	r0, r5
 80020b2:	f7fe ff51 	bl	8000f58 <memset>
 80020b6:	4620      	mov	r0, r4
 80020b8:	2100      	movs	r1, #0
 80020ba:	f000 f811 	bl	80020e0 <_swiopen>
 80020be:	1c43      	adds	r3, r0, #1
 80020c0:	4604      	mov	r4, r0
 80020c2:	d00b      	beq.n	80020dc <_stat+0x36>
 80020c4:	686b      	ldr	r3, [r5, #4]
 80020c6:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80020ca:	606b      	str	r3, [r5, #4]
 80020cc:	4629      	mov	r1, r5
 80020ce:	f7ff ffbb 	bl	8002048 <_swistat>
 80020d2:	4605      	mov	r5, r0
 80020d4:	4620      	mov	r0, r4
 80020d6:	f7ff ff6d 	bl	8001fb4 <_close>
 80020da:	462c      	mov	r4, r5
 80020dc:	4620      	mov	r0, r4
 80020de:	bd38      	pop	{r3, r4, r5, pc}

080020e0 <_swiopen>:
 80020e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80020e4:	4b2b      	ldr	r3, [pc, #172]	; (8002194 <_swiopen+0xb4>)
 80020e6:	b096      	sub	sp, #88	; 0x58
 80020e8:	4682      	mov	sl, r0
 80020ea:	460e      	mov	r6, r1
 80020ec:	2500      	movs	r5, #0
 80020ee:	4698      	mov	r8, r3
 80020f0:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 80020f4:	1c61      	adds	r1, r4, #1
 80020f6:	ea4f 07c5 	mov.w	r7, r5, lsl #3
 80020fa:	d036      	beq.n	800216a <_swiopen+0x8a>
 80020fc:	3501      	adds	r5, #1
 80020fe:	2d14      	cmp	r5, #20
 8002100:	d1f6      	bne.n	80020f0 <_swiopen+0x10>
 8002102:	f000 f943 	bl	800238c <__errno>
 8002106:	2318      	movs	r3, #24
 8002108:	6003      	str	r3, [r0, #0]
 800210a:	f04f 34ff 	mov.w	r4, #4294967295
 800210e:	e03c      	b.n	800218a <_swiopen+0xaa>
 8002110:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8002114:	f240 6301 	movw	r3, #1537	; 0x601
 8002118:	07b2      	lsls	r2, r6, #30
 800211a:	bf48      	it	mi
 800211c:	f044 0402 	orrmi.w	r4, r4, #2
 8002120:	421e      	tst	r6, r3
 8002122:	bf18      	it	ne
 8002124:	f044 0404 	orrne.w	r4, r4, #4
 8002128:	0733      	lsls	r3, r6, #28
 800212a:	bf48      	it	mi
 800212c:	f024 0404 	bicmi.w	r4, r4, #4
 8002130:	4650      	mov	r0, sl
 8002132:	bf48      	it	mi
 8002134:	f044 0408 	orrmi.w	r4, r4, #8
 8002138:	f8cd a000 	str.w	sl, [sp]
 800213c:	f7fe f8d0 	bl	80002e0 <strlen>
 8002140:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8002144:	2401      	movs	r4, #1
 8002146:	4620      	mov	r0, r4
 8002148:	4649      	mov	r1, r9
 800214a:	beab      	bkpt	0x00ab
 800214c:	4604      	mov	r4, r0
 800214e:	2c00      	cmp	r4, #0
 8002150:	db06      	blt.n	8002160 <_swiopen+0x80>
 8002152:	4447      	add	r7, r8
 8002154:	2300      	movs	r3, #0
 8002156:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 800215a:	607b      	str	r3, [r7, #4]
 800215c:	462c      	mov	r4, r5
 800215e:	e014      	b.n	800218a <_swiopen+0xaa>
 8002160:	4620      	mov	r0, r4
 8002162:	f7ff fe71 	bl	8001e48 <error>
 8002166:	4604      	mov	r4, r0
 8002168:	e00f      	b.n	800218a <_swiopen+0xaa>
 800216a:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 800216e:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8002172:	46e9      	mov	r9, sp
 8002174:	d1cc      	bne.n	8002110 <_swiopen+0x30>
 8002176:	4649      	mov	r1, r9
 8002178:	4650      	mov	r0, sl
 800217a:	f7ff ff94 	bl	80020a6 <_stat>
 800217e:	3001      	adds	r0, #1
 8002180:	d0c6      	beq.n	8002110 <_swiopen+0x30>
 8002182:	f000 f903 	bl	800238c <__errno>
 8002186:	2311      	movs	r3, #17
 8002188:	6003      	str	r3, [r0, #0]
 800218a:	4620      	mov	r0, r4
 800218c:	b016      	add	sp, #88	; 0x58
 800218e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002192:	bf00      	nop
 8002194:	200000a4 	.word	0x200000a4

08002198 <_get_semihosting_exts>:
 8002198:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800219c:	4607      	mov	r7, r0
 800219e:	4688      	mov	r8, r1
 80021a0:	4829      	ldr	r0, [pc, #164]	; (8002248 <_get_semihosting_exts+0xb0>)
 80021a2:	2100      	movs	r1, #0
 80021a4:	4615      	mov	r5, r2
 80021a6:	f7ff ff9b 	bl	80020e0 <_swiopen>
 80021aa:	462a      	mov	r2, r5
 80021ac:	4604      	mov	r4, r0
 80021ae:	2100      	movs	r1, #0
 80021b0:	4638      	mov	r0, r7
 80021b2:	f7fe fed1 	bl	8000f58 <memset>
 80021b6:	1c63      	adds	r3, r4, #1
 80021b8:	d015      	beq.n	80021e6 <_get_semihosting_exts+0x4e>
 80021ba:	4620      	mov	r0, r4
 80021bc:	f7ff fe1a 	bl	8001df4 <findslot>
 80021c0:	260c      	movs	r6, #12
 80021c2:	4681      	mov	r9, r0
 80021c4:	4630      	mov	r0, r6
 80021c6:	4649      	mov	r1, r9
 80021c8:	beab      	bkpt	0x00ab
 80021ca:	4606      	mov	r6, r0
 80021cc:	4630      	mov	r0, r6
 80021ce:	f7ff fe2b 	bl	8001e28 <checkerror>
 80021d2:	2803      	cmp	r0, #3
 80021d4:	dd02      	ble.n	80021dc <_get_semihosting_exts+0x44>
 80021d6:	3803      	subs	r0, #3
 80021d8:	42a8      	cmp	r0, r5
 80021da:	dc08      	bgt.n	80021ee <_get_semihosting_exts+0x56>
 80021dc:	4620      	mov	r0, r4
 80021de:	f7ff fee9 	bl	8001fb4 <_close>
 80021e2:	f04f 34ff 	mov.w	r4, #4294967295
 80021e6:	4620      	mov	r0, r4
 80021e8:	b003      	add	sp, #12
 80021ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80021ee:	2204      	movs	r2, #4
 80021f0:	eb0d 0102 	add.w	r1, sp, r2
 80021f4:	4620      	mov	r0, r4
 80021f6:	f7ff fe45 	bl	8001e84 <_read>
 80021fa:	2803      	cmp	r0, #3
 80021fc:	ddee      	ble.n	80021dc <_get_semihosting_exts+0x44>
 80021fe:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002202:	2b53      	cmp	r3, #83	; 0x53
 8002204:	d1ea      	bne.n	80021dc <_get_semihosting_exts+0x44>
 8002206:	f89d 3005 	ldrb.w	r3, [sp, #5]
 800220a:	2b48      	cmp	r3, #72	; 0x48
 800220c:	d1e6      	bne.n	80021dc <_get_semihosting_exts+0x44>
 800220e:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002212:	2b46      	cmp	r3, #70	; 0x46
 8002214:	d1e2      	bne.n	80021dc <_get_semihosting_exts+0x44>
 8002216:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800221a:	2b42      	cmp	r3, #66	; 0x42
 800221c:	d1de      	bne.n	80021dc <_get_semihosting_exts+0x44>
 800221e:	2201      	movs	r2, #1
 8002220:	4641      	mov	r1, r8
 8002222:	4620      	mov	r0, r4
 8002224:	f7ff fe48 	bl	8001eb8 <_swilseek>
 8002228:	2800      	cmp	r0, #0
 800222a:	dbd7      	blt.n	80021dc <_get_semihosting_exts+0x44>
 800222c:	462a      	mov	r2, r5
 800222e:	4639      	mov	r1, r7
 8002230:	4620      	mov	r0, r4
 8002232:	f7ff fe27 	bl	8001e84 <_read>
 8002236:	4605      	mov	r5, r0
 8002238:	4620      	mov	r0, r4
 800223a:	f7ff febb 	bl	8001fb4 <_close>
 800223e:	4628      	mov	r0, r5
 8002240:	f7ff fdf2 	bl	8001e28 <checkerror>
 8002244:	4604      	mov	r4, r0
 8002246:	e7ce      	b.n	80021e6 <_get_semihosting_exts+0x4e>
 8002248:	080024cf 	.word	0x080024cf

0800224c <initialise_semihosting_exts>:
 800224c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800224e:	4d0a      	ldr	r5, [pc, #40]	; (8002278 <initialise_semihosting_exts+0x2c>)
 8002250:	4c0a      	ldr	r4, [pc, #40]	; (800227c <initialise_semihosting_exts+0x30>)
 8002252:	2100      	movs	r1, #0
 8002254:	2201      	movs	r2, #1
 8002256:	a801      	add	r0, sp, #4
 8002258:	6029      	str	r1, [r5, #0]
 800225a:	6022      	str	r2, [r4, #0]
 800225c:	f7ff ff9c 	bl	8002198 <_get_semihosting_exts>
 8002260:	2800      	cmp	r0, #0
 8002262:	dd07      	ble.n	8002274 <initialise_semihosting_exts+0x28>
 8002264:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002268:	f003 0201 	and.w	r2, r3, #1
 800226c:	f003 0302 	and.w	r3, r3, #2
 8002270:	602a      	str	r2, [r5, #0]
 8002272:	6023      	str	r3, [r4, #0]
 8002274:	b003      	add	sp, #12
 8002276:	bd30      	pop	{r4, r5, pc}
 8002278:	20000068 	.word	0x20000068
 800227c:	2000006c 	.word	0x2000006c

08002280 <_has_ext_stdout_stderr>:
 8002280:	b510      	push	{r4, lr}
 8002282:	4c04      	ldr	r4, [pc, #16]	; (8002294 <_has_ext_stdout_stderr+0x14>)
 8002284:	6822      	ldr	r2, [r4, #0]
 8002286:	2a00      	cmp	r2, #0
 8002288:	da01      	bge.n	800228e <_has_ext_stdout_stderr+0xe>
 800228a:	f7ff ffdf 	bl	800224c <initialise_semihosting_exts>
 800228e:	6820      	ldr	r0, [r4, #0]
 8002290:	bd10      	pop	{r4, pc}
 8002292:	bf00      	nop
 8002294:	2000006c 	.word	0x2000006c

08002298 <initialise_monitor_handles>:
 8002298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800229c:	b085      	sub	sp, #20
 800229e:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8002350 <initialise_monitor_handles+0xb8>
 80022a2:	f8cd 9004 	str.w	r9, [sp, #4]
 80022a6:	2303      	movs	r3, #3
 80022a8:	2400      	movs	r4, #0
 80022aa:	9303      	str	r3, [sp, #12]
 80022ac:	f10d 0804 	add.w	r8, sp, #4
 80022b0:	9402      	str	r4, [sp, #8]
 80022b2:	2501      	movs	r5, #1
 80022b4:	4628      	mov	r0, r5
 80022b6:	4641      	mov	r1, r8
 80022b8:	beab      	bkpt	0x00ab
 80022ba:	4605      	mov	r5, r0
 80022bc:	4e20      	ldr	r6, [pc, #128]	; (8002340 <initialise_monitor_handles+0xa8>)
 80022be:	4a21      	ldr	r2, [pc, #132]	; (8002344 <initialise_monitor_handles+0xac>)
 80022c0:	6035      	str	r5, [r6, #0]
 80022c2:	4623      	mov	r3, r4
 80022c4:	f04f 31ff 	mov.w	r1, #4294967295
 80022c8:	4614      	mov	r4, r2
 80022ca:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 80022ce:	3301      	adds	r3, #1
 80022d0:	2b14      	cmp	r3, #20
 80022d2:	d1fa      	bne.n	80022ca <initialise_monitor_handles+0x32>
 80022d4:	f7ff ffd4 	bl	8002280 <_has_ext_stdout_stderr>
 80022d8:	4d1b      	ldr	r5, [pc, #108]	; (8002348 <initialise_monitor_handles+0xb0>)
 80022da:	b1d0      	cbz	r0, 8002312 <initialise_monitor_handles+0x7a>
 80022dc:	f04f 0a03 	mov.w	sl, #3
 80022e0:	2304      	movs	r3, #4
 80022e2:	f8cd 9004 	str.w	r9, [sp, #4]
 80022e6:	2701      	movs	r7, #1
 80022e8:	f8cd a00c 	str.w	sl, [sp, #12]
 80022ec:	9302      	str	r3, [sp, #8]
 80022ee:	4638      	mov	r0, r7
 80022f0:	4641      	mov	r1, r8
 80022f2:	beab      	bkpt	0x00ab
 80022f4:	4683      	mov	fp, r0
 80022f6:	4b15      	ldr	r3, [pc, #84]	; (800234c <initialise_monitor_handles+0xb4>)
 80022f8:	f8cd 9004 	str.w	r9, [sp, #4]
 80022fc:	f8c3 b000 	str.w	fp, [r3]
 8002300:	2308      	movs	r3, #8
 8002302:	f8cd a00c 	str.w	sl, [sp, #12]
 8002306:	9302      	str	r3, [sp, #8]
 8002308:	4638      	mov	r0, r7
 800230a:	4641      	mov	r1, r8
 800230c:	beab      	bkpt	0x00ab
 800230e:	4607      	mov	r7, r0
 8002310:	602f      	str	r7, [r5, #0]
 8002312:	682b      	ldr	r3, [r5, #0]
 8002314:	3301      	adds	r3, #1
 8002316:	bf02      	ittt	eq
 8002318:	4b0c      	ldreq	r3, [pc, #48]	; (800234c <initialise_monitor_handles+0xb4>)
 800231a:	681b      	ldreq	r3, [r3, #0]
 800231c:	602b      	streq	r3, [r5, #0]
 800231e:	6833      	ldr	r3, [r6, #0]
 8002320:	6023      	str	r3, [r4, #0]
 8002322:	2600      	movs	r6, #0
 8002324:	6066      	str	r6, [r4, #4]
 8002326:	f7ff ffab 	bl	8002280 <_has_ext_stdout_stderr>
 800232a:	b130      	cbz	r0, 800233a <initialise_monitor_handles+0xa2>
 800232c:	4b07      	ldr	r3, [pc, #28]	; (800234c <initialise_monitor_handles+0xb4>)
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8002334:	682b      	ldr	r3, [r5, #0]
 8002336:	e9c4 3604 	strd	r3, r6, [r4, #16]
 800233a:	b005      	add	sp, #20
 800233c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002340:	2000009c 	.word	0x2000009c
 8002344:	200000a4 	.word	0x200000a4
 8002348:	20000098 	.word	0x20000098
 800234c:	200000a0 	.word	0x200000a0
 8002350:	080024e5 	.word	0x080024e5

08002354 <_isatty>:
 8002354:	b570      	push	{r4, r5, r6, lr}
 8002356:	f7ff fd4d 	bl	8001df4 <findslot>
 800235a:	2509      	movs	r5, #9
 800235c:	4604      	mov	r4, r0
 800235e:	b920      	cbnz	r0, 800236a <_isatty+0x16>
 8002360:	f000 f814 	bl	800238c <__errno>
 8002364:	6005      	str	r5, [r0, #0]
 8002366:	4620      	mov	r0, r4
 8002368:	bd70      	pop	{r4, r5, r6, pc}
 800236a:	4628      	mov	r0, r5
 800236c:	4621      	mov	r1, r4
 800236e:	beab      	bkpt	0x00ab
 8002370:	4604      	mov	r4, r0
 8002372:	2c01      	cmp	r4, #1
 8002374:	d0f7      	beq.n	8002366 <_isatty+0x12>
 8002376:	f000 f809 	bl	800238c <__errno>
 800237a:	2400      	movs	r4, #0
 800237c:	4606      	mov	r6, r0
 800237e:	2513      	movs	r5, #19
 8002380:	4628      	mov	r0, r5
 8002382:	4621      	mov	r1, r4
 8002384:	beab      	bkpt	0x00ab
 8002386:	4605      	mov	r5, r0
 8002388:	6035      	str	r5, [r6, #0]
 800238a:	e7ec      	b.n	8002366 <_isatty+0x12>

0800238c <__errno>:
 800238c:	4b01      	ldr	r3, [pc, #4]	; (8002394 <__errno+0x8>)
 800238e:	6818      	ldr	r0, [r3, #0]
 8002390:	4770      	bx	lr
 8002392:	bf00      	nop
 8002394:	20000000 	.word	0x20000000

08002398 <_init>:
 8002398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800239a:	bf00      	nop
 800239c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800239e:	bc08      	pop	{r3}
 80023a0:	469e      	mov	lr, r3
 80023a2:	4770      	bx	lr

080023a4 <_fini>:
 80023a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80023a6:	bf00      	nop
 80023a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80023aa:	bc08      	pop	{r3}
 80023ac:	469e      	mov	lr, r3
 80023ae:	4770      	bx	lr
