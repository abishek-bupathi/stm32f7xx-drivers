
stm32f7xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000093c  080001f8  080001f8  000101f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b34  08000b3c  00010b3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b34  08000b34  00010b3c  2**0
                  CONTENTS
  4 .ARM          00000000  08000b34  08000b34  00010b3c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b34  08000b3c  00010b3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b34  08000b34  00010b34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b38  08000b38  00010b38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b3c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b3c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00010b3c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001187  00000000  00000000  00010b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000332  00000000  00000000  00011cf1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00012028  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  000120f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001e00  00000000  00000000  00012190  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000c78  00000000  00000000  00013f90  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00008f51  00000000  00000000  00014c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001db59  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000028c  00000000  00000000  0001dbd4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	08000b1c 	.word	0x08000b1c

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	; (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	; (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	08000b1c 	.word	0x08000b1c

08000238 <GPIO_PeriClockControl>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 8000238:	b480      	push	{r7}
 800023a:	b083      	sub	sp, #12
 800023c:	af00      	add	r7, sp, #0
 800023e:	6078      	str	r0, [r7, #4]
 8000240:	460b      	mov	r3, r1
 8000242:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE){
 8000244:	78fb      	ldrb	r3, [r7, #3]
 8000246:	2b01      	cmp	r3, #1
 8000248:	d178      	bne.n	800033c <GPIO_PeriClockControl+0x104>

		if(pGPIOx == GPIOA){
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	4a7a      	ldr	r2, [pc, #488]	; (8000438 <GPIO_PeriClockControl+0x200>)
 800024e:	4293      	cmp	r3, r2
 8000250:	d106      	bne.n	8000260 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000252:	4b7a      	ldr	r3, [pc, #488]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000254:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000256:	4a79      	ldr	r2, [pc, #484]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000258:	f043 0301 	orr.w	r3, r3, #1
 800025c:	6313      	str	r3, [r2, #48]	; 0x30
					GPIOK_PCLK_DI();
				}

	}

}
 800025e:	e0e5      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOB){
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	4a77      	ldr	r2, [pc, #476]	; (8000440 <GPIO_PeriClockControl+0x208>)
 8000264:	4293      	cmp	r3, r2
 8000266:	d106      	bne.n	8000276 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000268:	4b74      	ldr	r3, [pc, #464]	; (800043c <GPIO_PeriClockControl+0x204>)
 800026a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800026c:	4a73      	ldr	r2, [pc, #460]	; (800043c <GPIO_PeriClockControl+0x204>)
 800026e:	f043 0302 	orr.w	r3, r3, #2
 8000272:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000274:	e0da      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOC){
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	4a72      	ldr	r2, [pc, #456]	; (8000444 <GPIO_PeriClockControl+0x20c>)
 800027a:	4293      	cmp	r3, r2
 800027c:	d106      	bne.n	800028c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800027e:	4b6f      	ldr	r3, [pc, #444]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000280:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000282:	4a6e      	ldr	r2, [pc, #440]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000284:	f043 0304 	orr.w	r3, r3, #4
 8000288:	6313      	str	r3, [r2, #48]	; 0x30
}
 800028a:	e0cf      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOD){
 800028c:	687b      	ldr	r3, [r7, #4]
 800028e:	4a6e      	ldr	r2, [pc, #440]	; (8000448 <GPIO_PeriClockControl+0x210>)
 8000290:	4293      	cmp	r3, r2
 8000292:	d106      	bne.n	80002a2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000294:	4b69      	ldr	r3, [pc, #420]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000296:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000298:	4a68      	ldr	r2, [pc, #416]	; (800043c <GPIO_PeriClockControl+0x204>)
 800029a:	f043 0308 	orr.w	r3, r3, #8
 800029e:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a0:	e0c4      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOE){
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4a69      	ldr	r2, [pc, #420]	; (800044c <GPIO_PeriClockControl+0x214>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d106      	bne.n	80002b8 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80002aa:	4b64      	ldr	r3, [pc, #400]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ae:	4a63      	ldr	r2, [pc, #396]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002b0:	f043 0310 	orr.w	r3, r3, #16
 80002b4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002b6:	e0b9      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOF){
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	4a61      	ldr	r2, [pc, #388]	; (8000440 <GPIO_PeriClockControl+0x208>)
 80002bc:	4293      	cmp	r3, r2
 80002be:	d106      	bne.n	80002ce <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80002c0:	4b5e      	ldr	r3, [pc, #376]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c4:	4a5d      	ldr	r2, [pc, #372]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002c6:	f043 0320 	orr.w	r3, r3, #32
 80002ca:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002cc:	e0ae      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOG){
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4a5c      	ldr	r2, [pc, #368]	; (8000444 <GPIO_PeriClockControl+0x20c>)
 80002d2:	4293      	cmp	r3, r2
 80002d4:	d106      	bne.n	80002e4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80002d6:	4b59      	ldr	r3, [pc, #356]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002da:	4a58      	ldr	r2, [pc, #352]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002e0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e2:	e0a3      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOH){
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4a5a      	ldr	r2, [pc, #360]	; (8000450 <GPIO_PeriClockControl+0x218>)
 80002e8:	4293      	cmp	r3, r2
 80002ea:	d106      	bne.n	80002fa <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80002ec:	4b53      	ldr	r3, [pc, #332]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f0:	4a52      	ldr	r2, [pc, #328]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002f6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f8:	e098      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOI){
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a55      	ldr	r2, [pc, #340]	; (8000454 <GPIO_PeriClockControl+0x21c>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d106      	bne.n	8000310 <GPIO_PeriClockControl+0xd8>
			GPIOI_PCLK_EN();
 8000302:	4b4e      	ldr	r3, [pc, #312]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000306:	4a4d      	ldr	r2, [pc, #308]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000308:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800030c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030e:	e08d      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOJ){
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a51      	ldr	r2, [pc, #324]	; (8000458 <GPIO_PeriClockControl+0x220>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d106      	bne.n	8000326 <GPIO_PeriClockControl+0xee>
			GPIOJ_PCLK_EN();
 8000318:	4b48      	ldr	r3, [pc, #288]	; (800043c <GPIO_PeriClockControl+0x204>)
 800031a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031c:	4a47      	ldr	r2, [pc, #284]	; (800043c <GPIO_PeriClockControl+0x204>)
 800031e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000322:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000324:	e082      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOK){
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a4c      	ldr	r2, [pc, #304]	; (800045c <GPIO_PeriClockControl+0x224>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d17e      	bne.n	800042c <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_EN();
 800032e:	4b43      	ldr	r3, [pc, #268]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000330:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000332:	4a42      	ldr	r2, [pc, #264]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000334:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000338:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033a:	e077      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		if(pGPIOx == GPIOA){
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a3e      	ldr	r2, [pc, #248]	; (8000438 <GPIO_PeriClockControl+0x200>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PeriClockControl+0x11a>
					GPIOA_PCLK_DI();
 8000344:	4b3d      	ldr	r3, [pc, #244]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000346:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000348:	4a3c      	ldr	r2, [pc, #240]	; (800043c <GPIO_PeriClockControl+0x204>)
 800034a:	f023 0301 	bic.w	r3, r3, #1
 800034e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000350:	e06c      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOB){
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a3a      	ldr	r2, [pc, #232]	; (8000440 <GPIO_PeriClockControl+0x208>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d106      	bne.n	8000368 <GPIO_PeriClockControl+0x130>
					GPIOB_PCLK_DI();
 800035a:	4b38      	ldr	r3, [pc, #224]	; (800043c <GPIO_PeriClockControl+0x204>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035e:	4a37      	ldr	r2, [pc, #220]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000360:	f023 0302 	bic.w	r3, r3, #2
 8000364:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000366:	e061      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOC){
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a36      	ldr	r2, [pc, #216]	; (8000444 <GPIO_PeriClockControl+0x20c>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d106      	bne.n	800037e <GPIO_PeriClockControl+0x146>
					GPIOC_PCLK_DI();
 8000370:	4b32      	ldr	r3, [pc, #200]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000374:	4a31      	ldr	r2, [pc, #196]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000376:	f023 0304 	bic.w	r3, r3, #4
 800037a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037c:	e056      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOD){
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a31      	ldr	r2, [pc, #196]	; (8000448 <GPIO_PeriClockControl+0x210>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d106      	bne.n	8000394 <GPIO_PeriClockControl+0x15c>
					GPIOD_PCLK_DI();
 8000386:	4b2d      	ldr	r3, [pc, #180]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038a:	4a2c      	ldr	r2, [pc, #176]	; (800043c <GPIO_PeriClockControl+0x204>)
 800038c:	f023 0308 	bic.w	r3, r3, #8
 8000390:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000392:	e04b      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOE){
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a2d      	ldr	r2, [pc, #180]	; (800044c <GPIO_PeriClockControl+0x214>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d106      	bne.n	80003aa <GPIO_PeriClockControl+0x172>
					GPIOE_PCLK_DI();
 800039c:	4b27      	ldr	r3, [pc, #156]	; (800043c <GPIO_PeriClockControl+0x204>)
 800039e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a0:	4a26      	ldr	r2, [pc, #152]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003a2:	f023 0310 	bic.w	r3, r3, #16
 80003a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a8:	e040      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOF){
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	4a24      	ldr	r2, [pc, #144]	; (8000440 <GPIO_PeriClockControl+0x208>)
 80003ae:	4293      	cmp	r3, r2
 80003b0:	d106      	bne.n	80003c0 <GPIO_PeriClockControl+0x188>
					GPIOF_PCLK_DI();
 80003b2:	4b22      	ldr	r3, [pc, #136]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b6:	4a21      	ldr	r2, [pc, #132]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003b8:	f023 0320 	bic.w	r3, r3, #32
 80003bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003be:	e035      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOG){
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	4a20      	ldr	r2, [pc, #128]	; (8000444 <GPIO_PeriClockControl+0x20c>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d106      	bne.n	80003d6 <GPIO_PeriClockControl+0x19e>
					GPIOG_PCLK_DI();
 80003c8:	4b1c      	ldr	r3, [pc, #112]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003cc:	4a1b      	ldr	r2, [pc, #108]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003ce:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d4:	e02a      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOH){
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4a1d      	ldr	r2, [pc, #116]	; (8000450 <GPIO_PeriClockControl+0x218>)
 80003da:	4293      	cmp	r3, r2
 80003dc:	d106      	bne.n	80003ec <GPIO_PeriClockControl+0x1b4>
					GPIOH_PCLK_DI();
 80003de:	4b17      	ldr	r3, [pc, #92]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e2:	4a16      	ldr	r2, [pc, #88]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003e4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ea:	e01f      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOI){
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	4a19      	ldr	r2, [pc, #100]	; (8000454 <GPIO_PeriClockControl+0x21c>)
 80003f0:	4293      	cmp	r3, r2
 80003f2:	d106      	bne.n	8000402 <GPIO_PeriClockControl+0x1ca>
					GPIOI_PCLK_DI();
 80003f4:	4b11      	ldr	r3, [pc, #68]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f8:	4a10      	ldr	r2, [pc, #64]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003fa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80003fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000400:	e014      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOJ){
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4a14      	ldr	r2, [pc, #80]	; (8000458 <GPIO_PeriClockControl+0x220>)
 8000406:	4293      	cmp	r3, r2
 8000408:	d106      	bne.n	8000418 <GPIO_PeriClockControl+0x1e0>
					GPIOJ_PCLK_DI();
 800040a:	4b0c      	ldr	r3, [pc, #48]	; (800043c <GPIO_PeriClockControl+0x204>)
 800040c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040e:	4a0b      	ldr	r2, [pc, #44]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000410:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000414:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000416:	e009      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOK){
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	4a10      	ldr	r2, [pc, #64]	; (800045c <GPIO_PeriClockControl+0x224>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d105      	bne.n	800042c <GPIO_PeriClockControl+0x1f4>
					GPIOK_PCLK_DI();
 8000420:	4b06      	ldr	r3, [pc, #24]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000424:	4a05      	ldr	r2, [pc, #20]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000426:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800042a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042c:	bf00      	nop
 800042e:	370c      	adds	r7, #12
 8000430:	46bd      	mov	sp, r7
 8000432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000436:	4770      	bx	lr
 8000438:	40020000 	.word	0x40020000
 800043c:	40023800 	.word	0x40023800
 8000440:	40020400 	.word	0x40020400
 8000444:	40020800 	.word	0x40020800
 8000448:	40020c00 	.word	0x40020c00
 800044c:	40021000 	.word	0x40021000
 8000450:	40021c00 	.word	0x40021c00
 8000454:	40022000 	.word	0x40022000
 8000458:	40022400 	.word	0x40022400
 800045c:	40022800 	.word	0x40022800

08000460 <GPIO_Init>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000460:	b480      	push	{r7}
 8000462:	b087      	sub	sp, #28
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 8000468:	2300      	movs	r3, #0
 800046a:	617b      	str	r3, [r7, #20]

	// 1. Configure the Mode of the GPIO pin
	if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	795b      	ldrb	r3, [r3, #5]
 8000470:	2b03      	cmp	r3, #3
 8000472:	d81f      	bhi.n	80004b4 <GPIO_Init+0x54>
		// Non-Interrupt Mode

		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	795b      	ldrb	r3, [r3, #5]
 8000478:	461a      	mov	r2, r3
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	791b      	ldrb	r3, [r3, #4]
 800047e:	005b      	lsls	r3, r3, #1
 8000480:	fa02 f303 	lsl.w	r3, r2, r3
 8000484:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx -> MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // setting
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	681a      	ldr	r2, [r3, #0]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	791b      	ldrb	r3, [r3, #4]
 8000490:	4619      	mov	r1, r3
 8000492:	2303      	movs	r3, #3
 8000494:	408b      	lsls	r3, r1
 8000496:	43db      	mvns	r3, r3
 8000498:	4619      	mov	r1, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	400a      	ands	r2, r1
 80004a0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx -> MODER |= temp;
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	6819      	ldr	r1, [r3, #0]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	697a      	ldr	r2, [r7, #20]
 80004ae:	430a      	orrs	r2, r1
 80004b0:	601a      	str	r2, [r3, #0]
 80004b2:	e0df      	b.n	8000674 <GPIO_Init+0x214>

	}else{
		// Interrupt Mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	795b      	ldrb	r3, [r3, #5]
 80004b8:	2b04      	cmp	r3, #4
 80004ba:	d117      	bne.n	80004ec <GPIO_Init+0x8c>

			// 1. Configure FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004bc:	4b51      	ldr	r3, [pc, #324]	; (8000604 <GPIO_Init+0x1a4>)
 80004be:	68db      	ldr	r3, [r3, #12]
 80004c0:	687a      	ldr	r2, [r7, #4]
 80004c2:	7912      	ldrb	r2, [r2, #4]
 80004c4:	4611      	mov	r1, r2
 80004c6:	2201      	movs	r2, #1
 80004c8:	408a      	lsls	r2, r1
 80004ca:	4611      	mov	r1, r2
 80004cc:	4a4d      	ldr	r2, [pc, #308]	; (8000604 <GPIO_Init+0x1a4>)
 80004ce:	430b      	orrs	r3, r1
 80004d0:	60d3      	str	r3, [r2, #12]

			// Clear corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d2:	4b4c      	ldr	r3, [pc, #304]	; (8000604 <GPIO_Init+0x1a4>)
 80004d4:	689b      	ldr	r3, [r3, #8]
 80004d6:	687a      	ldr	r2, [r7, #4]
 80004d8:	7912      	ldrb	r2, [r2, #4]
 80004da:	4611      	mov	r1, r2
 80004dc:	2201      	movs	r2, #1
 80004de:	408a      	lsls	r2, r1
 80004e0:	43d2      	mvns	r2, r2
 80004e2:	4611      	mov	r1, r2
 80004e4:	4a47      	ldr	r2, [pc, #284]	; (8000604 <GPIO_Init+0x1a4>)
 80004e6:	400b      	ands	r3, r1
 80004e8:	6093      	str	r3, [r2, #8]
 80004ea:	e035      	b.n	8000558 <GPIO_Init+0xf8>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	795b      	ldrb	r3, [r3, #5]
 80004f0:	2b05      	cmp	r3, #5
 80004f2:	d117      	bne.n	8000524 <GPIO_Init+0xc4>

			// 1. Configure RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f4:	4b43      	ldr	r3, [pc, #268]	; (8000604 <GPIO_Init+0x1a4>)
 80004f6:	689b      	ldr	r3, [r3, #8]
 80004f8:	687a      	ldr	r2, [r7, #4]
 80004fa:	7912      	ldrb	r2, [r2, #4]
 80004fc:	4611      	mov	r1, r2
 80004fe:	2201      	movs	r2, #1
 8000500:	408a      	lsls	r2, r1
 8000502:	4611      	mov	r1, r2
 8000504:	4a3f      	ldr	r2, [pc, #252]	; (8000604 <GPIO_Init+0x1a4>)
 8000506:	430b      	orrs	r3, r1
 8000508:	6093      	str	r3, [r2, #8]

			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050a:	4b3e      	ldr	r3, [pc, #248]	; (8000604 <GPIO_Init+0x1a4>)
 800050c:	68db      	ldr	r3, [r3, #12]
 800050e:	687a      	ldr	r2, [r7, #4]
 8000510:	7912      	ldrb	r2, [r2, #4]
 8000512:	4611      	mov	r1, r2
 8000514:	2201      	movs	r2, #1
 8000516:	408a      	lsls	r2, r1
 8000518:	43d2      	mvns	r2, r2
 800051a:	4611      	mov	r1, r2
 800051c:	4a39      	ldr	r2, [pc, #228]	; (8000604 <GPIO_Init+0x1a4>)
 800051e:	400b      	ands	r3, r1
 8000520:	60d3      	str	r3, [r2, #12]
 8000522:	e019      	b.n	8000558 <GPIO_Init+0xf8>


		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	795b      	ldrb	r3, [r3, #5]
 8000528:	2b06      	cmp	r3, #6
 800052a:	d115      	bne.n	8000558 <GPIO_Init+0xf8>

			// 1. Configure FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052c:	4b35      	ldr	r3, [pc, #212]	; (8000604 <GPIO_Init+0x1a4>)
 800052e:	68db      	ldr	r3, [r3, #12]
 8000530:	687a      	ldr	r2, [r7, #4]
 8000532:	7912      	ldrb	r2, [r2, #4]
 8000534:	4611      	mov	r1, r2
 8000536:	2201      	movs	r2, #1
 8000538:	408a      	lsls	r2, r1
 800053a:	4611      	mov	r1, r2
 800053c:	4a31      	ldr	r2, [pc, #196]	; (8000604 <GPIO_Init+0x1a4>)
 800053e:	430b      	orrs	r3, r1
 8000540:	60d3      	str	r3, [r2, #12]

			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000542:	4b30      	ldr	r3, [pc, #192]	; (8000604 <GPIO_Init+0x1a4>)
 8000544:	68db      	ldr	r3, [r3, #12]
 8000546:	687a      	ldr	r2, [r7, #4]
 8000548:	7912      	ldrb	r2, [r2, #4]
 800054a:	4611      	mov	r1, r2
 800054c:	2201      	movs	r2, #1
 800054e:	408a      	lsls	r2, r1
 8000550:	4611      	mov	r1, r2
 8000552:	4a2c      	ldr	r2, [pc, #176]	; (8000604 <GPIO_Init+0x1a4>)
 8000554:	430b      	orrs	r3, r1
 8000556:	60d3      	str	r3, [r2, #12]


		}

		// 2. Configure GPIO port selection in SYSCFG_EXTIR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	791b      	ldrb	r3, [r3, #4]
 800055c:	089b      	lsrs	r3, r3, #2
 800055e:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	791b      	ldrb	r3, [r3, #4]
 8000564:	f003 0303 	and.w	r3, r3, #3
 8000568:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	4a26      	ldr	r2, [pc, #152]	; (8000608 <GPIO_Init+0x1a8>)
 8000570:	4293      	cmp	r3, r2
 8000572:	d05b      	beq.n	800062c <GPIO_Init+0x1cc>
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	4a24      	ldr	r2, [pc, #144]	; (800060c <GPIO_Init+0x1ac>)
 800057a:	4293      	cmp	r3, r2
 800057c:	d040      	beq.n	8000600 <GPIO_Init+0x1a0>
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	4a23      	ldr	r2, [pc, #140]	; (8000610 <GPIO_Init+0x1b0>)
 8000584:	4293      	cmp	r3, r2
 8000586:	d039      	beq.n	80005fc <GPIO_Init+0x19c>
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	4a21      	ldr	r2, [pc, #132]	; (8000614 <GPIO_Init+0x1b4>)
 800058e:	4293      	cmp	r3, r2
 8000590:	d032      	beq.n	80005f8 <GPIO_Init+0x198>
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	4a20      	ldr	r2, [pc, #128]	; (8000618 <GPIO_Init+0x1b8>)
 8000598:	4293      	cmp	r3, r2
 800059a:	d02b      	beq.n	80005f4 <GPIO_Init+0x194>
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	4a1a      	ldr	r2, [pc, #104]	; (800060c <GPIO_Init+0x1ac>)
 80005a2:	4293      	cmp	r3, r2
 80005a4:	d024      	beq.n	80005f0 <GPIO_Init+0x190>
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	4a19      	ldr	r2, [pc, #100]	; (8000610 <GPIO_Init+0x1b0>)
 80005ac:	4293      	cmp	r3, r2
 80005ae:	d01d      	beq.n	80005ec <GPIO_Init+0x18c>
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	4a19      	ldr	r2, [pc, #100]	; (800061c <GPIO_Init+0x1bc>)
 80005b6:	4293      	cmp	r3, r2
 80005b8:	d016      	beq.n	80005e8 <GPIO_Init+0x188>
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	4a18      	ldr	r2, [pc, #96]	; (8000620 <GPIO_Init+0x1c0>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d00f      	beq.n	80005e4 <GPIO_Init+0x184>
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a16      	ldr	r2, [pc, #88]	; (8000624 <GPIO_Init+0x1c4>)
 80005ca:	4293      	cmp	r3, r2
 80005cc:	d008      	beq.n	80005e0 <GPIO_Init+0x180>
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	4a15      	ldr	r2, [pc, #84]	; (8000628 <GPIO_Init+0x1c8>)
 80005d4:	4293      	cmp	r3, r2
 80005d6:	d101      	bne.n	80005dc <GPIO_Init+0x17c>
 80005d8:	230a      	movs	r3, #10
 80005da:	e028      	b.n	800062e <GPIO_Init+0x1ce>
 80005dc:	2300      	movs	r3, #0
 80005de:	e026      	b.n	800062e <GPIO_Init+0x1ce>
 80005e0:	2309      	movs	r3, #9
 80005e2:	e024      	b.n	800062e <GPIO_Init+0x1ce>
 80005e4:	2308      	movs	r3, #8
 80005e6:	e022      	b.n	800062e <GPIO_Init+0x1ce>
 80005e8:	2307      	movs	r3, #7
 80005ea:	e020      	b.n	800062e <GPIO_Init+0x1ce>
 80005ec:	2306      	movs	r3, #6
 80005ee:	e01e      	b.n	800062e <GPIO_Init+0x1ce>
 80005f0:	2305      	movs	r3, #5
 80005f2:	e01c      	b.n	800062e <GPIO_Init+0x1ce>
 80005f4:	2304      	movs	r3, #4
 80005f6:	e01a      	b.n	800062e <GPIO_Init+0x1ce>
 80005f8:	2303      	movs	r3, #3
 80005fa:	e018      	b.n	800062e <GPIO_Init+0x1ce>
 80005fc:	2302      	movs	r3, #2
 80005fe:	e016      	b.n	800062e <GPIO_Init+0x1ce>
 8000600:	2301      	movs	r3, #1
 8000602:	e014      	b.n	800062e <GPIO_Init+0x1ce>
 8000604:	40013c00 	.word	0x40013c00
 8000608:	40020000 	.word	0x40020000
 800060c:	40020400 	.word	0x40020400
 8000610:	40020800 	.word	0x40020800
 8000614:	40020c00 	.word	0x40020c00
 8000618:	40021000 	.word	0x40021000
 800061c:	40021c00 	.word	0x40021c00
 8000620:	40022000 	.word	0x40022000
 8000624:	40022400 	.word	0x40022400
 8000628:	40022800 	.word	0x40022800
 800062c:	2300      	movs	r3, #0
 800062e:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();
 8000630:	4b60      	ldr	r3, [pc, #384]	; (80007b4 <GPIO_Init+0x354>)
 8000632:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000634:	4a5f      	ldr	r2, [pc, #380]	; (80007b4 <GPIO_Init+0x354>)
 8000636:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800063a:	6453      	str	r3, [r2, #68]	; 0x44

		SYSCFG->EXTICR[temp1] |= portcode << (temp2*4);
 800063c:	4a5e      	ldr	r2, [pc, #376]	; (80007b8 <GPIO_Init+0x358>)
 800063e:	7cfb      	ldrb	r3, [r7, #19]
 8000640:	3302      	adds	r3, #2
 8000642:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000646:	7c79      	ldrb	r1, [r7, #17]
 8000648:	7cbb      	ldrb	r3, [r7, #18]
 800064a:	009b      	lsls	r3, r3, #2
 800064c:	fa01 f303 	lsl.w	r3, r1, r3
 8000650:	4618      	mov	r0, r3
 8000652:	4959      	ldr	r1, [pc, #356]	; (80007b8 <GPIO_Init+0x358>)
 8000654:	7cfb      	ldrb	r3, [r7, #19]
 8000656:	4302      	orrs	r2, r0
 8000658:	3302      	adds	r3, #2
 800065a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// 3. Enable EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800065e:	4b57      	ldr	r3, [pc, #348]	; (80007bc <GPIO_Init+0x35c>)
 8000660:	681b      	ldr	r3, [r3, #0]
 8000662:	687a      	ldr	r2, [r7, #4]
 8000664:	7912      	ldrb	r2, [r2, #4]
 8000666:	4611      	mov	r1, r2
 8000668:	2201      	movs	r2, #1
 800066a:	408a      	lsls	r2, r1
 800066c:	4611      	mov	r1, r2
 800066e:	4a53      	ldr	r2, [pc, #332]	; (80007bc <GPIO_Init+0x35c>)
 8000670:	430b      	orrs	r3, r1
 8000672:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 8000674:	2300      	movs	r3, #0
 8000676:	617b      	str	r3, [r7, #20]

	// 2. Configure the Speed
	temp = pGPIOHandle-> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	799b      	ldrb	r3, [r3, #6]
 800067c:	461a      	mov	r2, r3
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	791b      	ldrb	r3, [r3, #4]
 8000682:	005b      	lsls	r3, r3, #1
 8000684:	fa02 f303 	lsl.w	r3, r2, r3
 8000688:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	689a      	ldr	r2, [r3, #8]
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	791b      	ldrb	r3, [r3, #4]
 8000694:	4619      	mov	r1, r3
 8000696:	2303      	movs	r3, #3
 8000698:	408b      	lsls	r3, r1
 800069a:	43db      	mvns	r3, r3
 800069c:	4619      	mov	r1, r3
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	681b      	ldr	r3, [r3, #0]
 80006a2:	400a      	ands	r2, r1
 80006a4:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx -> OSPEEDR |= temp;
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	6899      	ldr	r1, [r3, #8]
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	697a      	ldr	r2, [r7, #20]
 80006b2:	430a      	orrs	r2, r1
 80006b4:	609a      	str	r2, [r3, #8]

	temp = 0;
 80006b6:	2300      	movs	r3, #0
 80006b8:	617b      	str	r3, [r7, #20]

	// 3. Configure the PuPd settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	79db      	ldrb	r3, [r3, #7]
 80006be:	461a      	mov	r2, r3
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	791b      	ldrb	r3, [r3, #4]
 80006c4:	005b      	lsls	r3, r3, #1
 80006c6:	fa02 f303 	lsl.w	r3, r2, r3
 80006ca:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	68da      	ldr	r2, [r3, #12]
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	791b      	ldrb	r3, [r3, #4]
 80006d6:	4619      	mov	r1, r3
 80006d8:	2303      	movs	r3, #3
 80006da:	408b      	lsls	r3, r1
 80006dc:	43db      	mvns	r3, r3
 80006de:	4619      	mov	r1, r3
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	400a      	ands	r2, r1
 80006e6:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx -> PUPDR |= temp;
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	68d9      	ldr	r1, [r3, #12]
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	681b      	ldr	r3, [r3, #0]
 80006f2:	697a      	ldr	r2, [r7, #20]
 80006f4:	430a      	orrs	r2, r1
 80006f6:	60da      	str	r2, [r3, #12]

	temp = 0;
 80006f8:	2300      	movs	r3, #0
 80006fa:	617b      	str	r3, [r7, #20]

	// 4. Configure the OPType
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	7a1b      	ldrb	r3, [r3, #8]
 8000700:	461a      	mov	r2, r3
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	791b      	ldrb	r3, [r3, #4]
 8000706:	fa02 f303 	lsl.w	r3, r2, r3
 800070a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	685a      	ldr	r2, [r3, #4]
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	791b      	ldrb	r3, [r3, #4]
 8000716:	4619      	mov	r1, r3
 8000718:	2301      	movs	r3, #1
 800071a:	408b      	lsls	r3, r1
 800071c:	43db      	mvns	r3, r3
 800071e:	4619      	mov	r1, r3
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	400a      	ands	r2, r1
 8000726:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx -> OTYPER |= temp;
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	6859      	ldr	r1, [r3, #4]
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	697a      	ldr	r2, [r7, #20]
 8000734:	430a      	orrs	r2, r1
 8000736:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000738:	2300      	movs	r3, #0
 800073a:	617b      	str	r3, [r7, #20]

	// 5. Configure the ALT Functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	795b      	ldrb	r3, [r3, #5]
 8000740:	2b02      	cmp	r3, #2
 8000742:	d130      	bne.n	80007a6 <GPIO_Init+0x346>

		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	791b      	ldrb	r3, [r3, #4]
 8000748:	08db      	lsrs	r3, r3, #3
 800074a:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	791b      	ldrb	r3, [r3, #4]
 8000750:	08db      	lsrs	r3, r3, #3
 8000752:	73fb      	strb	r3, [r7, #15]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << 4 * temp2);
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	7c3a      	ldrb	r2, [r7, #16]
 800075a:	3208      	adds	r2, #8
 800075c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000760:	7bfb      	ldrb	r3, [r7, #15]
 8000762:	009b      	lsls	r3, r3, #2
 8000764:	220f      	movs	r2, #15
 8000766:	fa02 f303 	lsl.w	r3, r2, r3
 800076a:	43db      	mvns	r3, r3
 800076c:	4618      	mov	r0, r3
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	7c3a      	ldrb	r2, [r7, #16]
 8000774:	4001      	ands	r1, r0
 8000776:	3208      	adds	r2, #8
 8000778:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << 4 * temp2;
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	7c3a      	ldrb	r2, [r7, #16]
 8000782:	3208      	adds	r2, #8
 8000784:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	7a5b      	ldrb	r3, [r3, #9]
 800078c:	461a      	mov	r2, r3
 800078e:	7bfb      	ldrb	r3, [r7, #15]
 8000790:	009b      	lsls	r3, r3, #2
 8000792:	fa02 f303 	lsl.w	r3, r2, r3
 8000796:	4618      	mov	r0, r3
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	7c3a      	ldrb	r2, [r7, #16]
 800079e:	4301      	orrs	r1, r0
 80007a0:	3208      	adds	r2, #8
 80007a2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80007a6:	bf00      	nop
 80007a8:	371c      	adds	r7, #28
 80007aa:	46bd      	mov	sp, r7
 80007ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b0:	4770      	bx	lr
 80007b2:	bf00      	nop
 80007b4:	40023800 	.word	0x40023800
 80007b8:	40013800 	.word	0x40013800
 80007bc:	40013c00 	.word	0x40013c00

080007c0 <GPIO_TogglePin>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80007c0:	b480      	push	{r7}
 80007c2:	b083      	sub	sp, #12
 80007c4:	af00      	add	r7, sp, #0
 80007c6:	6078      	str	r0, [r7, #4]
 80007c8:	460b      	mov	r3, r1
 80007ca:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR ^= (1 << PinNumber);
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	695b      	ldr	r3, [r3, #20]
 80007d0:	78fa      	ldrb	r2, [r7, #3]
 80007d2:	2101      	movs	r1, #1
 80007d4:	fa01 f202 	lsl.w	r2, r1, r2
 80007d8:	405a      	eors	r2, r3
 80007da:	687b      	ldr	r3, [r7, #4]
 80007dc:	615a      	str	r2, [r3, #20]

}
 80007de:	bf00      	nop
 80007e0:	370c      	adds	r7, #12
 80007e2:	46bd      	mov	sp, r7
 80007e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e8:	4770      	bx	lr
	...

080007ec <GPIO_IRQInterruptConfig>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t IRQEnorDi){
 80007ec:	b480      	push	{r7}
 80007ee:	b083      	sub	sp, #12
 80007f0:	af00      	add	r7, sp, #0
 80007f2:	4603      	mov	r3, r0
 80007f4:	460a      	mov	r2, r1
 80007f6:	71fb      	strb	r3, [r7, #7]
 80007f8:	4613      	mov	r3, r2
 80007fa:	71bb      	strb	r3, [r7, #6]

	if(IRQEnorDi == ENABLE){
 80007fc:	79bb      	ldrb	r3, [r7, #6]
 80007fe:	2b01      	cmp	r3, #1
 8000800:	d133      	bne.n	800086a <GPIO_IRQInterruptConfig+0x7e>

		if(IRQNumber <= 31){
 8000802:	79fb      	ldrb	r3, [r7, #7]
 8000804:	2b1f      	cmp	r3, #31
 8000806:	d80a      	bhi.n	800081e <GPIO_IRQInterruptConfig+0x32>
			// Program ISER0 Regsiter

			*NVIC_ISER0 |= (1 << IRQNumber);
 8000808:	4b35      	ldr	r3, [pc, #212]	; (80008e0 <GPIO_IRQInterruptConfig+0xf4>)
 800080a:	681b      	ldr	r3, [r3, #0]
 800080c:	79fa      	ldrb	r2, [r7, #7]
 800080e:	2101      	movs	r1, #1
 8000810:	fa01 f202 	lsl.w	r2, r1, r2
 8000814:	4611      	mov	r1, r2
 8000816:	4a32      	ldr	r2, [pc, #200]	; (80008e0 <GPIO_IRQInterruptConfig+0xf4>)
 8000818:	430b      	orrs	r3, r1
 800081a:	6013      	str	r3, [r2, #0]

		}

	}

}
 800081c:	e059      	b.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64){
 800081e:	79fb      	ldrb	r3, [r7, #7]
 8000820:	2b1f      	cmp	r3, #31
 8000822:	d90f      	bls.n	8000844 <GPIO_IRQInterruptConfig+0x58>
 8000824:	79fb      	ldrb	r3, [r7, #7]
 8000826:	2b3f      	cmp	r3, #63	; 0x3f
 8000828:	d80c      	bhi.n	8000844 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 800082a:	4b2e      	ldr	r3, [pc, #184]	; (80008e4 <GPIO_IRQInterruptConfig+0xf8>)
 800082c:	681b      	ldr	r3, [r3, #0]
 800082e:	79fa      	ldrb	r2, [r7, #7]
 8000830:	f002 021f 	and.w	r2, r2, #31
 8000834:	2101      	movs	r1, #1
 8000836:	fa01 f202 	lsl.w	r2, r1, r2
 800083a:	4611      	mov	r1, r2
 800083c:	4a29      	ldr	r2, [pc, #164]	; (80008e4 <GPIO_IRQInterruptConfig+0xf8>)
 800083e:	430b      	orrs	r3, r1
 8000840:	6013      	str	r3, [r2, #0]
 8000842:	e046      	b.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >= 64 && IRQNumber < 96){
 8000844:	79fb      	ldrb	r3, [r7, #7]
 8000846:	2b3f      	cmp	r3, #63	; 0x3f
 8000848:	d943      	bls.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
 800084a:	79fb      	ldrb	r3, [r7, #7]
 800084c:	2b5f      	cmp	r3, #95	; 0x5f
 800084e:	d840      	bhi.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000850:	4b25      	ldr	r3, [pc, #148]	; (80008e8 <GPIO_IRQInterruptConfig+0xfc>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	79fa      	ldrb	r2, [r7, #7]
 8000856:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800085a:	2101      	movs	r1, #1
 800085c:	fa01 f202 	lsl.w	r2, r1, r2
 8000860:	4611      	mov	r1, r2
 8000862:	4a21      	ldr	r2, [pc, #132]	; (80008e8 <GPIO_IRQInterruptConfig+0xfc>)
 8000864:	430b      	orrs	r3, r1
 8000866:	6013      	str	r3, [r2, #0]
}
 8000868:	e033      	b.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31){
 800086a:	79fb      	ldrb	r3, [r7, #7]
 800086c:	2b1f      	cmp	r3, #31
 800086e:	d80a      	bhi.n	8000886 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 8000870:	4b1e      	ldr	r3, [pc, #120]	; (80008ec <GPIO_IRQInterruptConfig+0x100>)
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	79fa      	ldrb	r2, [r7, #7]
 8000876:	2101      	movs	r1, #1
 8000878:	fa01 f202 	lsl.w	r2, r1, r2
 800087c:	4611      	mov	r1, r2
 800087e:	4a1b      	ldr	r2, [pc, #108]	; (80008ec <GPIO_IRQInterruptConfig+0x100>)
 8000880:	430b      	orrs	r3, r1
 8000882:	6013      	str	r3, [r2, #0]
}
 8000884:	e025      	b.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64){
 8000886:	79fb      	ldrb	r3, [r7, #7]
 8000888:	2b1f      	cmp	r3, #31
 800088a:	d90f      	bls.n	80008ac <GPIO_IRQInterruptConfig+0xc0>
 800088c:	79fb      	ldrb	r3, [r7, #7]
 800088e:	2b3f      	cmp	r3, #63	; 0x3f
 8000890:	d80c      	bhi.n	80008ac <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 8000892:	4b17      	ldr	r3, [pc, #92]	; (80008f0 <GPIO_IRQInterruptConfig+0x104>)
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	79fa      	ldrb	r2, [r7, #7]
 8000898:	f002 021f 	and.w	r2, r2, #31
 800089c:	2101      	movs	r1, #1
 800089e:	fa01 f202 	lsl.w	r2, r1, r2
 80008a2:	4611      	mov	r1, r2
 80008a4:	4a12      	ldr	r2, [pc, #72]	; (80008f0 <GPIO_IRQInterruptConfig+0x104>)
 80008a6:	430b      	orrs	r3, r1
 80008a8:	6013      	str	r3, [r2, #0]
 80008aa:	e012      	b.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber >= 64 && IRQNumber < 96){
 80008ac:	79fb      	ldrb	r3, [r7, #7]
 80008ae:	2b3f      	cmp	r3, #63	; 0x3f
 80008b0:	d90f      	bls.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
 80008b2:	79fb      	ldrb	r3, [r7, #7]
 80008b4:	2b5f      	cmp	r3, #95	; 0x5f
 80008b6:	d80c      	bhi.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 80008b8:	4b0e      	ldr	r3, [pc, #56]	; (80008f4 <GPIO_IRQInterruptConfig+0x108>)
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	79fa      	ldrb	r2, [r7, #7]
 80008be:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008c2:	2101      	movs	r1, #1
 80008c4:	fa01 f202 	lsl.w	r2, r1, r2
 80008c8:	4611      	mov	r1, r2
 80008ca:	4a0a      	ldr	r2, [pc, #40]	; (80008f4 <GPIO_IRQInterruptConfig+0x108>)
 80008cc:	430b      	orrs	r3, r1
 80008ce:	6013      	str	r3, [r2, #0]
}
 80008d0:	e7ff      	b.n	80008d2 <GPIO_IRQInterruptConfig+0xe6>
 80008d2:	bf00      	nop
 80008d4:	370c      	adds	r7, #12
 80008d6:	46bd      	mov	sp, r7
 80008d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008dc:	4770      	bx	lr
 80008de:	bf00      	nop
 80008e0:	e000e100 	.word	0xe000e100
 80008e4:	e000e104 	.word	0xe000e104
 80008e8:	e000e108 	.word	0xe000e108
 80008ec:	e000e180 	.word	0xe000e180
 80008f0:	e000e184 	.word	0xe000e184
 80008f4:	e000e188 	.word	0xe000e188

080008f8 <GPIO_IRQPriorityConfig>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriotity){
 80008f8:	b480      	push	{r7}
 80008fa:	b085      	sub	sp, #20
 80008fc:	af00      	add	r7, sp, #0
 80008fe:	4603      	mov	r3, r0
 8000900:	460a      	mov	r2, r1
 8000902:	71fb      	strb	r3, [r7, #7]
 8000904:	4613      	mov	r3, r2
 8000906:	71bb      	strb	r3, [r7, #6]

	// 1. Finding the IPR Register
	uint8_t iprx = IRQNumber / 4;
 8000908:	79fb      	ldrb	r3, [r7, #7]
 800090a:	089b      	lsrs	r3, r3, #2
 800090c:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 800090e:	79fb      	ldrb	r3, [r7, #7]
 8000910:	f003 0303 	and.w	r3, r3, #3
 8000914:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amt = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000916:	7bbb      	ldrb	r3, [r7, #14]
 8000918:	00db      	lsls	r3, r3, #3
 800091a:	b2db      	uxtb	r3, r3
 800091c:	3304      	adds	r3, #4
 800091e:	737b      	strb	r3, [r7, #13]

	*(NVIC_PR_BASE_ADDR + (iprx*4)) |= (IRQPriotity << shift_amt);
 8000920:	7bfb      	ldrb	r3, [r7, #15]
 8000922:	011b      	lsls	r3, r3, #4
 8000924:	461a      	mov	r2, r3
 8000926:	4b0a      	ldr	r3, [pc, #40]	; (8000950 <GPIO_IRQPriorityConfig+0x58>)
 8000928:	4413      	add	r3, r2
 800092a:	681a      	ldr	r2, [r3, #0]
 800092c:	79b9      	ldrb	r1, [r7, #6]
 800092e:	7b7b      	ldrb	r3, [r7, #13]
 8000930:	fa01 f303 	lsl.w	r3, r1, r3
 8000934:	4619      	mov	r1, r3
 8000936:	7bfb      	ldrb	r3, [r7, #15]
 8000938:	011b      	lsls	r3, r3, #4
 800093a:	4618      	mov	r0, r3
 800093c:	4b04      	ldr	r3, [pc, #16]	; (8000950 <GPIO_IRQPriorityConfig+0x58>)
 800093e:	4403      	add	r3, r0
 8000940:	430a      	orrs	r2, r1
 8000942:	601a      	str	r2, [r3, #0]

}
 8000944:	bf00      	nop
 8000946:	3714      	adds	r7, #20
 8000948:	46bd      	mov	sp, r7
 800094a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800094e:	4770      	bx	lr
 8000950:	e000e400 	.word	0xe000e400

08000954 <GPIO_IRQHandle>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_IRQHandle(uint8_t PinNumber){
 8000954:	b480      	push	{r7}
 8000956:	b083      	sub	sp, #12
 8000958:	af00      	add	r7, sp, #0
 800095a:	4603      	mov	r3, r0
 800095c:	71fb      	strb	r3, [r7, #7]

	// Clear the EXTI PR Register corresponding to the Pin Number
	if(EXTI->PR & (1 << PinNumber)){
 800095e:	4b0c      	ldr	r3, [pc, #48]	; (8000990 <GPIO_IRQHandle+0x3c>)
 8000960:	695b      	ldr	r3, [r3, #20]
 8000962:	79fa      	ldrb	r2, [r7, #7]
 8000964:	2101      	movs	r1, #1
 8000966:	fa01 f202 	lsl.w	r2, r1, r2
 800096a:	4013      	ands	r3, r2
 800096c:	2b00      	cmp	r3, #0
 800096e:	d009      	beq.n	8000984 <GPIO_IRQHandle+0x30>

		EXTI->PR |= (1 << PinNumber);
 8000970:	4b07      	ldr	r3, [pc, #28]	; (8000990 <GPIO_IRQHandle+0x3c>)
 8000972:	695b      	ldr	r3, [r3, #20]
 8000974:	79fa      	ldrb	r2, [r7, #7]
 8000976:	2101      	movs	r1, #1
 8000978:	fa01 f202 	lsl.w	r2, r1, r2
 800097c:	4611      	mov	r1, r2
 800097e:	4a04      	ldr	r2, [pc, #16]	; (8000990 <GPIO_IRQHandle+0x3c>)
 8000980:	430b      	orrs	r3, r1
 8000982:	6153      	str	r3, [r2, #20]

	}


}
 8000984:	bf00      	nop
 8000986:	370c      	adds	r7, #12
 8000988:	46bd      	mov	sp, r7
 800098a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800098e:	4770      	bx	lr
 8000990:	40013c00 	.word	0x40013c00

08000994 <delay>:
#define LOW 0

#define BUTTON_PRESSED LOW


void delay(void){
 8000994:	b480      	push	{r7}
 8000996:	b083      	sub	sp, #12
 8000998:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000/2; i++ );
 800099a:	2300      	movs	r3, #0
 800099c:	607b      	str	r3, [r7, #4]
 800099e:	e002      	b.n	80009a6 <delay+0x12>
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	3301      	adds	r3, #1
 80009a4:	607b      	str	r3, [r7, #4]
 80009a6:	687b      	ldr	r3, [r7, #4]
 80009a8:	4a04      	ldr	r2, [pc, #16]	; (80009bc <delay+0x28>)
 80009aa:	4293      	cmp	r3, r2
 80009ac:	d9f8      	bls.n	80009a0 <delay+0xc>
}
 80009ae:	bf00      	nop
 80009b0:	370c      	adds	r7, #12
 80009b2:	46bd      	mov	sp, r7
 80009b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop
 80009bc:	0003d08f 	.word	0x0003d08f

080009c0 <main>:

int main(void){
 80009c0:	b580      	push	{r7, lr}
 80009c2:	b086      	sub	sp, #24
 80009c4:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GpioBtn;
	memset(&GpioLed, 0, sizeof(GpioLed));
 80009c6:	f107 030c 	add.w	r3, r7, #12
 80009ca:	220c      	movs	r2, #12
 80009cc:	2100      	movs	r1, #0
 80009ce:	4618      	mov	r0, r3
 80009d0:	f000 f89c 	bl	8000b0c <memset>
	memset(&GpioBtn, 0, sizeof(GpioBtn));
 80009d4:	463b      	mov	r3, r7
 80009d6:	220c      	movs	r2, #12
 80009d8:	2100      	movs	r1, #0
 80009da:	4618      	mov	r0, r3
 80009dc:	f000 f896 	bl	8000b0c <memset>

	// Initialising Led
	GpioLed.pGPIOx = GPIOB;
 80009e0:	4b19      	ldr	r3, [pc, #100]	; (8000a48 <main+0x88>)
 80009e2:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 80009e4:	2307      	movs	r3, #7
 80009e6:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80009e8:	2301      	movs	r3, #1
 80009ea:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80009ec:	2302      	movs	r3, #2
 80009ee:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80009f0:	2300      	movs	r3, #0
 80009f2:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80009f4:	2300      	movs	r3, #0
 80009f6:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOB, ENABLE);
 80009f8:	2101      	movs	r1, #1
 80009fa:	4813      	ldr	r0, [pc, #76]	; (8000a48 <main+0x88>)
 80009fc:	f7ff fc1c 	bl	8000238 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000a00:	f107 030c 	add.w	r3, r7, #12
 8000a04:	4618      	mov	r0, r3
 8000a06:	f7ff fd2b 	bl	8000460 <GPIO_Init>

	// Initialising interrupt Button
	GpioBtn.pGPIOx = GPIOC;
 8000a0a:	4b10      	ldr	r3, [pc, #64]	; (8000a4c <main+0x8c>)
 8000a0c:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000a0e:	230d      	movs	r3, #13
 8000a10:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000a12:	2304      	movs	r3, #4
 8000a14:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000a16:	2302      	movs	r3, #2
 8000a18:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOC, ENABLE);
 8000a1e:	2101      	movs	r1, #1
 8000a20:	480a      	ldr	r0, [pc, #40]	; (8000a4c <main+0x8c>)
 8000a22:	f7ff fc09 	bl	8000238 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 8000a26:	463b      	mov	r3, r7
 8000a28:	4618      	mov	r0, r3
 8000a2a:	f7ff fd19 	bl	8000460 <GPIO_Init>

	// IRQ Configurations
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_PRIORITY_15);
 8000a2e:	210f      	movs	r1, #15
 8000a30:	2028      	movs	r0, #40	; 0x28
 8000a32:	f7ff ff61 	bl	80008f8 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE);
 8000a36:	2101      	movs	r1, #1
 8000a38:	2028      	movs	r0, #40	; 0x28
 8000a3a:	f7ff fed7 	bl	80007ec <GPIO_IRQInterruptConfig>

	return 0;
 8000a3e:	2300      	movs	r3, #0

}
 8000a40:	4618      	mov	r0, r3
 8000a42:	3718      	adds	r7, #24
 8000a44:	46bd      	mov	sp, r7
 8000a46:	bd80      	pop	{r7, pc}
 8000a48:	40020400 	.word	0x40020400
 8000a4c:	40020800 	.word	0x40020800

08000a50 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void){
 8000a50:	b580      	push	{r7, lr}
 8000a52:	af00      	add	r7, sp, #0
	delay();
 8000a54:	f7ff ff9e 	bl	8000994 <delay>
	GPIO_IRQHandle(GPIO_PIN_NO_13);
 8000a58:	200d      	movs	r0, #13
 8000a5a:	f7ff ff7b 	bl	8000954 <GPIO_IRQHandle>
	GPIO_TogglePin(GPIOB, GPIO_PIN_NO_7);
 8000a5e:	2107      	movs	r1, #7
 8000a60:	4802      	ldr	r0, [pc, #8]	; (8000a6c <EXTI15_10_IRQHandler+0x1c>)
 8000a62:	f7ff fead 	bl	80007c0 <GPIO_TogglePin>

}
 8000a66:	bf00      	nop
 8000a68:	bd80      	pop	{r7, pc}
 8000a6a:	bf00      	nop
 8000a6c:	40020400 	.word	0x40020400

08000a70 <Reset_Handler>:
 8000a70:	480d      	ldr	r0, [pc, #52]	; (8000aa8 <LoopForever+0x2>)
 8000a72:	4685      	mov	sp, r0
 8000a74:	f3af 8000 	nop.w
 8000a78:	480c      	ldr	r0, [pc, #48]	; (8000aac <LoopForever+0x6>)
 8000a7a:	490d      	ldr	r1, [pc, #52]	; (8000ab0 <LoopForever+0xa>)
 8000a7c:	4a0d      	ldr	r2, [pc, #52]	; (8000ab4 <LoopForever+0xe>)
 8000a7e:	2300      	movs	r3, #0
 8000a80:	e002      	b.n	8000a88 <LoopCopyDataInit>

08000a82 <CopyDataInit>:
 8000a82:	58d4      	ldr	r4, [r2, r3]
 8000a84:	50c4      	str	r4, [r0, r3]
 8000a86:	3304      	adds	r3, #4

08000a88 <LoopCopyDataInit>:
 8000a88:	18c4      	adds	r4, r0, r3
 8000a8a:	428c      	cmp	r4, r1
 8000a8c:	d3f9      	bcc.n	8000a82 <CopyDataInit>
 8000a8e:	4a0a      	ldr	r2, [pc, #40]	; (8000ab8 <LoopForever+0x12>)
 8000a90:	4c0a      	ldr	r4, [pc, #40]	; (8000abc <LoopForever+0x16>)
 8000a92:	2300      	movs	r3, #0
 8000a94:	e001      	b.n	8000a9a <LoopFillZerobss>

08000a96 <FillZerobss>:
 8000a96:	6013      	str	r3, [r2, #0]
 8000a98:	3204      	adds	r2, #4

08000a9a <LoopFillZerobss>:
 8000a9a:	42a2      	cmp	r2, r4
 8000a9c:	d3fb      	bcc.n	8000a96 <FillZerobss>
 8000a9e:	f000 f811 	bl	8000ac4 <__libc_init_array>
 8000aa2:	f7ff ff8d 	bl	80009c0 <main>

08000aa6 <LoopForever>:
 8000aa6:	e7fe      	b.n	8000aa6 <LoopForever>
 8000aa8:	20080000 	.word	0x20080000
 8000aac:	20000000 	.word	0x20000000
 8000ab0:	20000000 	.word	0x20000000
 8000ab4:	08000b3c 	.word	0x08000b3c
 8000ab8:	20000000 	.word	0x20000000
 8000abc:	2000001c 	.word	0x2000001c

08000ac0 <ADC_IRQHandler>:
 8000ac0:	e7fe      	b.n	8000ac0 <ADC_IRQHandler>
	...

08000ac4 <__libc_init_array>:
 8000ac4:	b570      	push	{r4, r5, r6, lr}
 8000ac6:	4e0d      	ldr	r6, [pc, #52]	; (8000afc <__libc_init_array+0x38>)
 8000ac8:	4c0d      	ldr	r4, [pc, #52]	; (8000b00 <__libc_init_array+0x3c>)
 8000aca:	1ba4      	subs	r4, r4, r6
 8000acc:	10a4      	asrs	r4, r4, #2
 8000ace:	2500      	movs	r5, #0
 8000ad0:	42a5      	cmp	r5, r4
 8000ad2:	d109      	bne.n	8000ae8 <__libc_init_array+0x24>
 8000ad4:	4e0b      	ldr	r6, [pc, #44]	; (8000b04 <__libc_init_array+0x40>)
 8000ad6:	4c0c      	ldr	r4, [pc, #48]	; (8000b08 <__libc_init_array+0x44>)
 8000ad8:	f000 f820 	bl	8000b1c <_init>
 8000adc:	1ba4      	subs	r4, r4, r6
 8000ade:	10a4      	asrs	r4, r4, #2
 8000ae0:	2500      	movs	r5, #0
 8000ae2:	42a5      	cmp	r5, r4
 8000ae4:	d105      	bne.n	8000af2 <__libc_init_array+0x2e>
 8000ae6:	bd70      	pop	{r4, r5, r6, pc}
 8000ae8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000aec:	4798      	blx	r3
 8000aee:	3501      	adds	r5, #1
 8000af0:	e7ee      	b.n	8000ad0 <__libc_init_array+0xc>
 8000af2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000af6:	4798      	blx	r3
 8000af8:	3501      	adds	r5, #1
 8000afa:	e7f2      	b.n	8000ae2 <__libc_init_array+0x1e>
 8000afc:	08000b34 	.word	0x08000b34
 8000b00:	08000b34 	.word	0x08000b34
 8000b04:	08000b34 	.word	0x08000b34
 8000b08:	08000b38 	.word	0x08000b38

08000b0c <memset>:
 8000b0c:	4402      	add	r2, r0
 8000b0e:	4603      	mov	r3, r0
 8000b10:	4293      	cmp	r3, r2
 8000b12:	d100      	bne.n	8000b16 <memset+0xa>
 8000b14:	4770      	bx	lr
 8000b16:	f803 1b01 	strb.w	r1, [r3], #1
 8000b1a:	e7f9      	b.n	8000b10 <memset+0x4>

08000b1c <_init>:
 8000b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b1e:	bf00      	nop
 8000b20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b22:	bc08      	pop	{r3}
 8000b24:	469e      	mov	lr, r3
 8000b26:	4770      	bx	lr

08000b28 <_fini>:
 8000b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b2a:	bf00      	nop
 8000b2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b2e:	bc08      	pop	{r3}
 8000b30:	469e      	mov	lr, r3
 8000b32:	4770      	bx	lr
