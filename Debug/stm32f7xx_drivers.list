
stm32f7xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000778  080001f8  080001f8  000101f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000970  08000978  00010978  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000970  08000970  00010978  2**0
                  CONTENTS
  4 .ARM          00000000  08000970  08000970  00010978  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000970  08000978  00010978  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000970  08000970  00010970  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000974  08000974  00010974  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010978  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000978  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000978  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00010978  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008fe  00000000  00000000  000109a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000024f  00000000  00000000  000112a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  000114f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  000115b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001478  00000000  00000000  00011640  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000aeb  00000000  00000000  00012ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00005b67  00000000  00000000  000135a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001910a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00019188  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	08000958 	.word	0x08000958

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	; (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	; (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	08000958 	.word	0x08000958

08000238 <GPIO_PeriClockControl>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 8000238:	b480      	push	{r7}
 800023a:	b083      	sub	sp, #12
 800023c:	af00      	add	r7, sp, #0
 800023e:	6078      	str	r0, [r7, #4]
 8000240:	460b      	mov	r3, r1
 8000242:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE){
 8000244:	78fb      	ldrb	r3, [r7, #3]
 8000246:	2b01      	cmp	r3, #1
 8000248:	d178      	bne.n	800033c <GPIO_PeriClockControl+0x104>

		if(pGPIOx == GPIOA){
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	4a7a      	ldr	r2, [pc, #488]	; (8000438 <GPIO_PeriClockControl+0x200>)
 800024e:	4293      	cmp	r3, r2
 8000250:	d106      	bne.n	8000260 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000252:	4b7a      	ldr	r3, [pc, #488]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000254:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000256:	4a79      	ldr	r2, [pc, #484]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000258:	f043 0301 	orr.w	r3, r3, #1
 800025c:	6313      	str	r3, [r2, #48]	; 0x30
					GPIOK_PCLK_DI();
				}

	}

}
 800025e:	e0e5      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOB){
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	4a77      	ldr	r2, [pc, #476]	; (8000440 <GPIO_PeriClockControl+0x208>)
 8000264:	4293      	cmp	r3, r2
 8000266:	d106      	bne.n	8000276 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000268:	4b74      	ldr	r3, [pc, #464]	; (800043c <GPIO_PeriClockControl+0x204>)
 800026a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800026c:	4a73      	ldr	r2, [pc, #460]	; (800043c <GPIO_PeriClockControl+0x204>)
 800026e:	f043 0302 	orr.w	r3, r3, #2
 8000272:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000274:	e0da      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOC){
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	4a72      	ldr	r2, [pc, #456]	; (8000444 <GPIO_PeriClockControl+0x20c>)
 800027a:	4293      	cmp	r3, r2
 800027c:	d106      	bne.n	800028c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800027e:	4b6f      	ldr	r3, [pc, #444]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000280:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000282:	4a6e      	ldr	r2, [pc, #440]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000284:	f043 0304 	orr.w	r3, r3, #4
 8000288:	6313      	str	r3, [r2, #48]	; 0x30
}
 800028a:	e0cf      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOD){
 800028c:	687b      	ldr	r3, [r7, #4]
 800028e:	4a6e      	ldr	r2, [pc, #440]	; (8000448 <GPIO_PeriClockControl+0x210>)
 8000290:	4293      	cmp	r3, r2
 8000292:	d106      	bne.n	80002a2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000294:	4b69      	ldr	r3, [pc, #420]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000296:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000298:	4a68      	ldr	r2, [pc, #416]	; (800043c <GPIO_PeriClockControl+0x204>)
 800029a:	f043 0308 	orr.w	r3, r3, #8
 800029e:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a0:	e0c4      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOE){
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4a69      	ldr	r2, [pc, #420]	; (800044c <GPIO_PeriClockControl+0x214>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d106      	bne.n	80002b8 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80002aa:	4b64      	ldr	r3, [pc, #400]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ae:	4a63      	ldr	r2, [pc, #396]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002b0:	f043 0310 	orr.w	r3, r3, #16
 80002b4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002b6:	e0b9      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOF){
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	4a61      	ldr	r2, [pc, #388]	; (8000440 <GPIO_PeriClockControl+0x208>)
 80002bc:	4293      	cmp	r3, r2
 80002be:	d106      	bne.n	80002ce <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80002c0:	4b5e      	ldr	r3, [pc, #376]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c4:	4a5d      	ldr	r2, [pc, #372]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002c6:	f043 0320 	orr.w	r3, r3, #32
 80002ca:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002cc:	e0ae      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOG){
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4a5c      	ldr	r2, [pc, #368]	; (8000444 <GPIO_PeriClockControl+0x20c>)
 80002d2:	4293      	cmp	r3, r2
 80002d4:	d106      	bne.n	80002e4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80002d6:	4b59      	ldr	r3, [pc, #356]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002da:	4a58      	ldr	r2, [pc, #352]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002e0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e2:	e0a3      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOH){
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4a5a      	ldr	r2, [pc, #360]	; (8000450 <GPIO_PeriClockControl+0x218>)
 80002e8:	4293      	cmp	r3, r2
 80002ea:	d106      	bne.n	80002fa <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80002ec:	4b53      	ldr	r3, [pc, #332]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f0:	4a52      	ldr	r2, [pc, #328]	; (800043c <GPIO_PeriClockControl+0x204>)
 80002f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002f6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f8:	e098      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOI){
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a55      	ldr	r2, [pc, #340]	; (8000454 <GPIO_PeriClockControl+0x21c>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d106      	bne.n	8000310 <GPIO_PeriClockControl+0xd8>
			GPIOI_PCLK_EN();
 8000302:	4b4e      	ldr	r3, [pc, #312]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000306:	4a4d      	ldr	r2, [pc, #308]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000308:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800030c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030e:	e08d      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOJ){
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a51      	ldr	r2, [pc, #324]	; (8000458 <GPIO_PeriClockControl+0x220>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d106      	bne.n	8000326 <GPIO_PeriClockControl+0xee>
			GPIOJ_PCLK_EN();
 8000318:	4b48      	ldr	r3, [pc, #288]	; (800043c <GPIO_PeriClockControl+0x204>)
 800031a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031c:	4a47      	ldr	r2, [pc, #284]	; (800043c <GPIO_PeriClockControl+0x204>)
 800031e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000322:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000324:	e082      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		}else if(pGPIOx == GPIOK){
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a4c      	ldr	r2, [pc, #304]	; (800045c <GPIO_PeriClockControl+0x224>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d17e      	bne.n	800042c <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_EN();
 800032e:	4b43      	ldr	r3, [pc, #268]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000330:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000332:	4a42      	ldr	r2, [pc, #264]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000334:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000338:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033a:	e077      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
		if(pGPIOx == GPIOA){
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a3e      	ldr	r2, [pc, #248]	; (8000438 <GPIO_PeriClockControl+0x200>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PeriClockControl+0x11a>
					GPIOA_PCLK_DI();
 8000344:	4b3d      	ldr	r3, [pc, #244]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000346:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000348:	4a3c      	ldr	r2, [pc, #240]	; (800043c <GPIO_PeriClockControl+0x204>)
 800034a:	f023 0301 	bic.w	r3, r3, #1
 800034e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000350:	e06c      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOB){
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a3a      	ldr	r2, [pc, #232]	; (8000440 <GPIO_PeriClockControl+0x208>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d106      	bne.n	8000368 <GPIO_PeriClockControl+0x130>
					GPIOB_PCLK_DI();
 800035a:	4b38      	ldr	r3, [pc, #224]	; (800043c <GPIO_PeriClockControl+0x204>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035e:	4a37      	ldr	r2, [pc, #220]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000360:	f023 0302 	bic.w	r3, r3, #2
 8000364:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000366:	e061      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOC){
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a36      	ldr	r2, [pc, #216]	; (8000444 <GPIO_PeriClockControl+0x20c>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d106      	bne.n	800037e <GPIO_PeriClockControl+0x146>
					GPIOC_PCLK_DI();
 8000370:	4b32      	ldr	r3, [pc, #200]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000374:	4a31      	ldr	r2, [pc, #196]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000376:	f023 0304 	bic.w	r3, r3, #4
 800037a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037c:	e056      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOD){
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a31      	ldr	r2, [pc, #196]	; (8000448 <GPIO_PeriClockControl+0x210>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d106      	bne.n	8000394 <GPIO_PeriClockControl+0x15c>
					GPIOD_PCLK_DI();
 8000386:	4b2d      	ldr	r3, [pc, #180]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038a:	4a2c      	ldr	r2, [pc, #176]	; (800043c <GPIO_PeriClockControl+0x204>)
 800038c:	f023 0308 	bic.w	r3, r3, #8
 8000390:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000392:	e04b      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOE){
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a2d      	ldr	r2, [pc, #180]	; (800044c <GPIO_PeriClockControl+0x214>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d106      	bne.n	80003aa <GPIO_PeriClockControl+0x172>
					GPIOE_PCLK_DI();
 800039c:	4b27      	ldr	r3, [pc, #156]	; (800043c <GPIO_PeriClockControl+0x204>)
 800039e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a0:	4a26      	ldr	r2, [pc, #152]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003a2:	f023 0310 	bic.w	r3, r3, #16
 80003a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a8:	e040      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOF){
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	4a24      	ldr	r2, [pc, #144]	; (8000440 <GPIO_PeriClockControl+0x208>)
 80003ae:	4293      	cmp	r3, r2
 80003b0:	d106      	bne.n	80003c0 <GPIO_PeriClockControl+0x188>
					GPIOF_PCLK_DI();
 80003b2:	4b22      	ldr	r3, [pc, #136]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b6:	4a21      	ldr	r2, [pc, #132]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003b8:	f023 0320 	bic.w	r3, r3, #32
 80003bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003be:	e035      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOG){
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	4a20      	ldr	r2, [pc, #128]	; (8000444 <GPIO_PeriClockControl+0x20c>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d106      	bne.n	80003d6 <GPIO_PeriClockControl+0x19e>
					GPIOG_PCLK_DI();
 80003c8:	4b1c      	ldr	r3, [pc, #112]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003cc:	4a1b      	ldr	r2, [pc, #108]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003ce:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d4:	e02a      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOH){
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4a1d      	ldr	r2, [pc, #116]	; (8000450 <GPIO_PeriClockControl+0x218>)
 80003da:	4293      	cmp	r3, r2
 80003dc:	d106      	bne.n	80003ec <GPIO_PeriClockControl+0x1b4>
					GPIOH_PCLK_DI();
 80003de:	4b17      	ldr	r3, [pc, #92]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e2:	4a16      	ldr	r2, [pc, #88]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003e4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ea:	e01f      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOI){
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	4a19      	ldr	r2, [pc, #100]	; (8000454 <GPIO_PeriClockControl+0x21c>)
 80003f0:	4293      	cmp	r3, r2
 80003f2:	d106      	bne.n	8000402 <GPIO_PeriClockControl+0x1ca>
					GPIOI_PCLK_DI();
 80003f4:	4b11      	ldr	r3, [pc, #68]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f8:	4a10      	ldr	r2, [pc, #64]	; (800043c <GPIO_PeriClockControl+0x204>)
 80003fa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80003fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000400:	e014      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOJ){
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4a14      	ldr	r2, [pc, #80]	; (8000458 <GPIO_PeriClockControl+0x220>)
 8000406:	4293      	cmp	r3, r2
 8000408:	d106      	bne.n	8000418 <GPIO_PeriClockControl+0x1e0>
					GPIOJ_PCLK_DI();
 800040a:	4b0c      	ldr	r3, [pc, #48]	; (800043c <GPIO_PeriClockControl+0x204>)
 800040c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040e:	4a0b      	ldr	r2, [pc, #44]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000410:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000414:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000416:	e009      	b.n	800042c <GPIO_PeriClockControl+0x1f4>
				}else if(pGPIOx == GPIOK){
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	4a10      	ldr	r2, [pc, #64]	; (800045c <GPIO_PeriClockControl+0x224>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d105      	bne.n	800042c <GPIO_PeriClockControl+0x1f4>
					GPIOK_PCLK_DI();
 8000420:	4b06      	ldr	r3, [pc, #24]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000424:	4a05      	ldr	r2, [pc, #20]	; (800043c <GPIO_PeriClockControl+0x204>)
 8000426:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800042a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042c:	bf00      	nop
 800042e:	370c      	adds	r7, #12
 8000430:	46bd      	mov	sp, r7
 8000432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000436:	4770      	bx	lr
 8000438:	40020000 	.word	0x40020000
 800043c:	40023800 	.word	0x40023800
 8000440:	40020400 	.word	0x40020400
 8000444:	40020800 	.word	0x40020800
 8000448:	40020c00 	.word	0x40020c00
 800044c:	40021000 	.word	0x40021000
 8000450:	40021c00 	.word	0x40021c00
 8000454:	40022000 	.word	0x40022000
 8000458:	40022400 	.word	0x40022400
 800045c:	40022800 	.word	0x40022800

08000460 <GPIO_Init>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000460:	b480      	push	{r7}
 8000462:	b087      	sub	sp, #28
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 8000468:	2300      	movs	r3, #0
 800046a:	617b      	str	r3, [r7, #20]

	// 1. Configure the Mode of the GPIO pin
	if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	795b      	ldrb	r3, [r3, #5]
 8000470:	2b03      	cmp	r3, #3
 8000472:	d81f      	bhi.n	80004b4 <GPIO_Init+0x54>
		// Non-Interrupt Mode

		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	795b      	ldrb	r3, [r3, #5]
 8000478:	461a      	mov	r2, r3
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	791b      	ldrb	r3, [r3, #4]
 800047e:	005b      	lsls	r3, r3, #1
 8000480:	fa02 f303 	lsl.w	r3, r2, r3
 8000484:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx -> MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // setting
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	681a      	ldr	r2, [r3, #0]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	791b      	ldrb	r3, [r3, #4]
 8000490:	4619      	mov	r1, r3
 8000492:	2303      	movs	r3, #3
 8000494:	408b      	lsls	r3, r1
 8000496:	43db      	mvns	r3, r3
 8000498:	4619      	mov	r1, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	400a      	ands	r2, r1
 80004a0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx -> MODER |= temp;
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	6819      	ldr	r1, [r3, #0]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	697a      	ldr	r2, [r7, #20]
 80004ae:	430a      	orrs	r2, r1
 80004b0:	601a      	str	r2, [r3, #0]
 80004b2:	e0e1      	b.n	8000678 <GPIO_Init+0x218>

	}else{
		// Interrupt Mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	795b      	ldrb	r3, [r3, #5]
 80004b8:	2b04      	cmp	r3, #4
 80004ba:	d117      	bne.n	80004ec <GPIO_Init+0x8c>

			// 1. Configure FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004bc:	4b54      	ldr	r3, [pc, #336]	; (8000610 <GPIO_Init+0x1b0>)
 80004be:	68db      	ldr	r3, [r3, #12]
 80004c0:	687a      	ldr	r2, [r7, #4]
 80004c2:	7912      	ldrb	r2, [r2, #4]
 80004c4:	4611      	mov	r1, r2
 80004c6:	2201      	movs	r2, #1
 80004c8:	408a      	lsls	r2, r1
 80004ca:	4611      	mov	r1, r2
 80004cc:	4a50      	ldr	r2, [pc, #320]	; (8000610 <GPIO_Init+0x1b0>)
 80004ce:	430b      	orrs	r3, r1
 80004d0:	60d3      	str	r3, [r2, #12]

			// Clear corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d2:	4b4f      	ldr	r3, [pc, #316]	; (8000610 <GPIO_Init+0x1b0>)
 80004d4:	689b      	ldr	r3, [r3, #8]
 80004d6:	687a      	ldr	r2, [r7, #4]
 80004d8:	7912      	ldrb	r2, [r2, #4]
 80004da:	4611      	mov	r1, r2
 80004dc:	2201      	movs	r2, #1
 80004de:	408a      	lsls	r2, r1
 80004e0:	43d2      	mvns	r2, r2
 80004e2:	4611      	mov	r1, r2
 80004e4:	4a4a      	ldr	r2, [pc, #296]	; (8000610 <GPIO_Init+0x1b0>)
 80004e6:	400b      	ands	r3, r1
 80004e8:	6093      	str	r3, [r2, #8]
 80004ea:	e035      	b.n	8000558 <GPIO_Init+0xf8>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	795b      	ldrb	r3, [r3, #5]
 80004f0:	2b05      	cmp	r3, #5
 80004f2:	d117      	bne.n	8000524 <GPIO_Init+0xc4>

			// 1. Configure RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f4:	4b46      	ldr	r3, [pc, #280]	; (8000610 <GPIO_Init+0x1b0>)
 80004f6:	689b      	ldr	r3, [r3, #8]
 80004f8:	687a      	ldr	r2, [r7, #4]
 80004fa:	7912      	ldrb	r2, [r2, #4]
 80004fc:	4611      	mov	r1, r2
 80004fe:	2201      	movs	r2, #1
 8000500:	408a      	lsls	r2, r1
 8000502:	4611      	mov	r1, r2
 8000504:	4a42      	ldr	r2, [pc, #264]	; (8000610 <GPIO_Init+0x1b0>)
 8000506:	430b      	orrs	r3, r1
 8000508:	6093      	str	r3, [r2, #8]

			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050a:	4b41      	ldr	r3, [pc, #260]	; (8000610 <GPIO_Init+0x1b0>)
 800050c:	68db      	ldr	r3, [r3, #12]
 800050e:	687a      	ldr	r2, [r7, #4]
 8000510:	7912      	ldrb	r2, [r2, #4]
 8000512:	4611      	mov	r1, r2
 8000514:	2201      	movs	r2, #1
 8000516:	408a      	lsls	r2, r1
 8000518:	43d2      	mvns	r2, r2
 800051a:	4611      	mov	r1, r2
 800051c:	4a3c      	ldr	r2, [pc, #240]	; (8000610 <GPIO_Init+0x1b0>)
 800051e:	400b      	ands	r3, r1
 8000520:	60d3      	str	r3, [r2, #12]
 8000522:	e019      	b.n	8000558 <GPIO_Init+0xf8>


		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	795b      	ldrb	r3, [r3, #5]
 8000528:	2b06      	cmp	r3, #6
 800052a:	d115      	bne.n	8000558 <GPIO_Init+0xf8>

			// 1. Configure FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052c:	4b38      	ldr	r3, [pc, #224]	; (8000610 <GPIO_Init+0x1b0>)
 800052e:	68db      	ldr	r3, [r3, #12]
 8000530:	687a      	ldr	r2, [r7, #4]
 8000532:	7912      	ldrb	r2, [r2, #4]
 8000534:	4611      	mov	r1, r2
 8000536:	2201      	movs	r2, #1
 8000538:	408a      	lsls	r2, r1
 800053a:	4611      	mov	r1, r2
 800053c:	4a34      	ldr	r2, [pc, #208]	; (8000610 <GPIO_Init+0x1b0>)
 800053e:	430b      	orrs	r3, r1
 8000540:	60d3      	str	r3, [r2, #12]

			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000542:	4b33      	ldr	r3, [pc, #204]	; (8000610 <GPIO_Init+0x1b0>)
 8000544:	68db      	ldr	r3, [r3, #12]
 8000546:	687a      	ldr	r2, [r7, #4]
 8000548:	7912      	ldrb	r2, [r2, #4]
 800054a:	4611      	mov	r1, r2
 800054c:	2201      	movs	r2, #1
 800054e:	408a      	lsls	r2, r1
 8000550:	4611      	mov	r1, r2
 8000552:	4a2f      	ldr	r2, [pc, #188]	; (8000610 <GPIO_Init+0x1b0>)
 8000554:	430b      	orrs	r3, r1
 8000556:	60d3      	str	r3, [r2, #12]


		}

		// 2. Configure GPIO port selection in SYSCFG_EXTIR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	791b      	ldrb	r3, [r3, #4]
 800055c:	089b      	lsrs	r3, r3, #2
 800055e:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	791b      	ldrb	r3, [r3, #4]
 8000564:	f003 0303 	and.w	r3, r3, #3
 8000568:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx)
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	4a29      	ldr	r2, [pc, #164]	; (8000614 <GPIO_Init+0x1b4>)
 8000570:	4293      	cmp	r3, r2
 8000572:	d063      	beq.n	800063c <GPIO_Init+0x1dc>
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	4a27      	ldr	r2, [pc, #156]	; (8000618 <GPIO_Init+0x1b8>)
 800057a:	4293      	cmp	r3, r2
 800057c:	d046      	beq.n	800060c <GPIO_Init+0x1ac>
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	4a26      	ldr	r2, [pc, #152]	; (800061c <GPIO_Init+0x1bc>)
 8000584:	4293      	cmp	r3, r2
 8000586:	d03f      	beq.n	8000608 <GPIO_Init+0x1a8>
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	4a24      	ldr	r2, [pc, #144]	; (8000620 <GPIO_Init+0x1c0>)
 800058e:	4293      	cmp	r3, r2
 8000590:	d038      	beq.n	8000604 <GPIO_Init+0x1a4>
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	4a23      	ldr	r2, [pc, #140]	; (8000624 <GPIO_Init+0x1c4>)
 8000598:	4293      	cmp	r3, r2
 800059a:	d031      	beq.n	8000600 <GPIO_Init+0x1a0>
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	4a1d      	ldr	r2, [pc, #116]	; (8000618 <GPIO_Init+0x1b8>)
 80005a2:	4293      	cmp	r3, r2
 80005a4:	d02a      	beq.n	80005fc <GPIO_Init+0x19c>
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	4a1c      	ldr	r2, [pc, #112]	; (800061c <GPIO_Init+0x1bc>)
 80005ac:	4293      	cmp	r3, r2
 80005ae:	d023      	beq.n	80005f8 <GPIO_Init+0x198>
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	4a1c      	ldr	r2, [pc, #112]	; (8000628 <GPIO_Init+0x1c8>)
 80005b6:	4293      	cmp	r3, r2
 80005b8:	d01c      	beq.n	80005f4 <GPIO_Init+0x194>
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	4a1b      	ldr	r2, [pc, #108]	; (800062c <GPIO_Init+0x1cc>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d015      	beq.n	80005f0 <GPIO_Init+0x190>
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a19      	ldr	r2, [pc, #100]	; (8000630 <GPIO_Init+0x1d0>)
 80005ca:	4293      	cmp	r3, r2
 80005cc:	d00e      	beq.n	80005ec <GPIO_Init+0x18c>
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	4a18      	ldr	r2, [pc, #96]	; (8000634 <GPIO_Init+0x1d4>)
 80005d4:	4293      	cmp	r3, r2
 80005d6:	d007      	beq.n	80005e8 <GPIO_Init+0x188>

		SYSCFG_PCLK_EN();
 80005d8:	4b17      	ldr	r3, [pc, #92]	; (8000638 <GPIO_Init+0x1d8>)
 80005da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005dc:	4a16      	ldr	r2, [pc, #88]	; (8000638 <GPIO_Init+0x1d8>)
 80005de:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005e2:	6453      	str	r3, [r2, #68]	; 0x44
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx)
 80005e4:	b2db      	uxtb	r3, r3
 80005e6:	e02a      	b.n	800063e <GPIO_Init+0x1de>
 80005e8:	230a      	movs	r3, #10
 80005ea:	e028      	b.n	800063e <GPIO_Init+0x1de>
 80005ec:	2309      	movs	r3, #9
 80005ee:	e026      	b.n	800063e <GPIO_Init+0x1de>
 80005f0:	2308      	movs	r3, #8
 80005f2:	e024      	b.n	800063e <GPIO_Init+0x1de>
 80005f4:	2307      	movs	r3, #7
 80005f6:	e022      	b.n	800063e <GPIO_Init+0x1de>
 80005f8:	2306      	movs	r3, #6
 80005fa:	e020      	b.n	800063e <GPIO_Init+0x1de>
 80005fc:	2305      	movs	r3, #5
 80005fe:	e01e      	b.n	800063e <GPIO_Init+0x1de>
 8000600:	2304      	movs	r3, #4
 8000602:	e01c      	b.n	800063e <GPIO_Init+0x1de>
 8000604:	2303      	movs	r3, #3
 8000606:	e01a      	b.n	800063e <GPIO_Init+0x1de>
 8000608:	2302      	movs	r3, #2
 800060a:	e018      	b.n	800063e <GPIO_Init+0x1de>
 800060c:	2301      	movs	r3, #1
 800060e:	e016      	b.n	800063e <GPIO_Init+0x1de>
 8000610:	40013c00 	.word	0x40013c00
 8000614:	40020000 	.word	0x40020000
 8000618:	40020400 	.word	0x40020400
 800061c:	40020800 	.word	0x40020800
 8000620:	40020c00 	.word	0x40020c00
 8000624:	40021000 	.word	0x40021000
 8000628:	40021c00 	.word	0x40021c00
 800062c:	40022000 	.word	0x40022000
 8000630:	40022400 	.word	0x40022400
 8000634:	40022800 	.word	0x40022800
 8000638:	40023800 	.word	0x40023800
 800063c:	2300      	movs	r3, #0
 800063e:	747b      	strb	r3, [r7, #17]

		SYSCFG->EXTICR[temp1] |= portcode << (temp2*4);
 8000640:	4a5d      	ldr	r2, [pc, #372]	; (80007b8 <GPIO_Init+0x358>)
 8000642:	7cfb      	ldrb	r3, [r7, #19]
 8000644:	3302      	adds	r3, #2
 8000646:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800064a:	7c79      	ldrb	r1, [r7, #17]
 800064c:	7cbb      	ldrb	r3, [r7, #18]
 800064e:	009b      	lsls	r3, r3, #2
 8000650:	fa01 f303 	lsl.w	r3, r1, r3
 8000654:	4618      	mov	r0, r3
 8000656:	4958      	ldr	r1, [pc, #352]	; (80007b8 <GPIO_Init+0x358>)
 8000658:	7cfb      	ldrb	r3, [r7, #19]
 800065a:	4302      	orrs	r2, r0
 800065c:	3302      	adds	r3, #2
 800065e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// 3. Enable EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000662:	4b56      	ldr	r3, [pc, #344]	; (80007bc <GPIO_Init+0x35c>)
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	687a      	ldr	r2, [r7, #4]
 8000668:	7912      	ldrb	r2, [r2, #4]
 800066a:	4611      	mov	r1, r2
 800066c:	2201      	movs	r2, #1
 800066e:	408a      	lsls	r2, r1
 8000670:	4611      	mov	r1, r2
 8000672:	4a52      	ldr	r2, [pc, #328]	; (80007bc <GPIO_Init+0x35c>)
 8000674:	430b      	orrs	r3, r1
 8000676:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 8000678:	2300      	movs	r3, #0
 800067a:	617b      	str	r3, [r7, #20]

	// 2. Configure the Speed
	temp = pGPIOHandle-> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	799b      	ldrb	r3, [r3, #6]
 8000680:	461a      	mov	r2, r3
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	791b      	ldrb	r3, [r3, #4]
 8000686:	005b      	lsls	r3, r3, #1
 8000688:	fa02 f303 	lsl.w	r3, r2, r3
 800068c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	689a      	ldr	r2, [r3, #8]
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	791b      	ldrb	r3, [r3, #4]
 8000698:	4619      	mov	r1, r3
 800069a:	2303      	movs	r3, #3
 800069c:	408b      	lsls	r3, r1
 800069e:	43db      	mvns	r3, r3
 80006a0:	4619      	mov	r1, r3
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	400a      	ands	r2, r1
 80006a8:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx -> OSPEEDR |= temp;
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	6899      	ldr	r1, [r3, #8]
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	697a      	ldr	r2, [r7, #20]
 80006b6:	430a      	orrs	r2, r1
 80006b8:	609a      	str	r2, [r3, #8]

	temp = 0;
 80006ba:	2300      	movs	r3, #0
 80006bc:	617b      	str	r3, [r7, #20]

	// 3. Configure the PuPd settings
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	79db      	ldrb	r3, [r3, #7]
 80006c2:	461a      	mov	r2, r3
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	791b      	ldrb	r3, [r3, #4]
 80006c8:	005b      	lsls	r3, r3, #1
 80006ca:	fa02 f303 	lsl.w	r3, r2, r3
 80006ce:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	68da      	ldr	r2, [r3, #12]
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	791b      	ldrb	r3, [r3, #4]
 80006da:	4619      	mov	r1, r3
 80006dc:	2303      	movs	r3, #3
 80006de:	408b      	lsls	r3, r1
 80006e0:	43db      	mvns	r3, r3
 80006e2:	4619      	mov	r1, r3
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	400a      	ands	r2, r1
 80006ea:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx -> PUPDR |= temp;
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	68d9      	ldr	r1, [r3, #12]
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	697a      	ldr	r2, [r7, #20]
 80006f8:	430a      	orrs	r2, r1
 80006fa:	60da      	str	r2, [r3, #12]

	temp = 0;
 80006fc:	2300      	movs	r3, #0
 80006fe:	617b      	str	r3, [r7, #20]

	// 4. Configure the OPType
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	7a1b      	ldrb	r3, [r3, #8]
 8000704:	461a      	mov	r2, r3
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	791b      	ldrb	r3, [r3, #4]
 800070a:	fa02 f303 	lsl.w	r3, r2, r3
 800070e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx -> OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	685a      	ldr	r2, [r3, #4]
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	791b      	ldrb	r3, [r3, #4]
 800071a:	4619      	mov	r1, r3
 800071c:	2301      	movs	r3, #1
 800071e:	408b      	lsls	r3, r1
 8000720:	43db      	mvns	r3, r3
 8000722:	4619      	mov	r1, r3
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	400a      	ands	r2, r1
 800072a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx -> OTYPER |= temp;
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	6859      	ldr	r1, [r3, #4]
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	697a      	ldr	r2, [r7, #20]
 8000738:	430a      	orrs	r2, r1
 800073a:	605a      	str	r2, [r3, #4]

	temp = 0;
 800073c:	2300      	movs	r3, #0
 800073e:	617b      	str	r3, [r7, #20]

	// 5. Configure the ALT Functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	795b      	ldrb	r3, [r3, #5]
 8000744:	2b02      	cmp	r3, #2
 8000746:	d130      	bne.n	80007aa <GPIO_Init+0x34a>

		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	791b      	ldrb	r3, [r3, #4]
 800074c:	08db      	lsrs	r3, r3, #3
 800074e:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	791b      	ldrb	r3, [r3, #4]
 8000754:	08db      	lsrs	r3, r3, #3
 8000756:	73fb      	strb	r3, [r7, #15]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << 4 * temp2);
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	7c3a      	ldrb	r2, [r7, #16]
 800075e:	3208      	adds	r2, #8
 8000760:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000764:	7bfb      	ldrb	r3, [r7, #15]
 8000766:	009b      	lsls	r3, r3, #2
 8000768:	220f      	movs	r2, #15
 800076a:	fa02 f303 	lsl.w	r3, r2, r3
 800076e:	43db      	mvns	r3, r3
 8000770:	4618      	mov	r0, r3
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	681b      	ldr	r3, [r3, #0]
 8000776:	7c3a      	ldrb	r2, [r7, #16]
 8000778:	4001      	ands	r1, r0
 800077a:	3208      	adds	r2, #8
 800077c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << 4 * temp2;
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	7c3a      	ldrb	r2, [r7, #16]
 8000786:	3208      	adds	r2, #8
 8000788:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	7a5b      	ldrb	r3, [r3, #9]
 8000790:	461a      	mov	r2, r3
 8000792:	7bfb      	ldrb	r3, [r7, #15]
 8000794:	009b      	lsls	r3, r3, #2
 8000796:	fa02 f303 	lsl.w	r3, r2, r3
 800079a:	4618      	mov	r0, r3
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	681b      	ldr	r3, [r3, #0]
 80007a0:	7c3a      	ldrb	r2, [r7, #16]
 80007a2:	4301      	orrs	r1, r0
 80007a4:	3208      	adds	r2, #8
 80007a6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80007aa:	bf00      	nop
 80007ac:	371c      	adds	r7, #28
 80007ae:	46bd      	mov	sp, r7
 80007b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b4:	4770      	bx	lr
 80007b6:	bf00      	nop
 80007b8:	40013800 	.word	0x40013800
 80007bc:	40013c00 	.word	0x40013c00

080007c0 <GPIO_ReadFromInputPin>:
 * @return					- value of the input data (0 or 1)
 *
 * @note					- None
 *
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80007c0:	b480      	push	{r7}
 80007c2:	b085      	sub	sp, #20
 80007c4:	af00      	add	r7, sp, #0
 80007c6:	6078      	str	r0, [r7, #4]
 80007c8:	460b      	mov	r3, r1
 80007ca:	70fb      	strb	r3, [r7, #3]

	uint8_t value;

	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	691a      	ldr	r2, [r3, #16]
 80007d0:	78fb      	ldrb	r3, [r7, #3]
 80007d2:	fa22 f303 	lsr.w	r3, r2, r3
 80007d6:	b2db      	uxtb	r3, r3
 80007d8:	f003 0301 	and.w	r3, r3, #1
 80007dc:	73fb      	strb	r3, [r7, #15]

	return value;
 80007de:	7bfb      	ldrb	r3, [r7, #15]

}
 80007e0:	4618      	mov	r0, r3
 80007e2:	3714      	adds	r7, #20
 80007e4:	46bd      	mov	sp, r7
 80007e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ea:	4770      	bx	lr

080007ec <GPIO_WriteToOutputPin>:
 * @return					- None
 *
 * @note					- None
 *
 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t value){
 80007ec:	b480      	push	{r7}
 80007ee:	b083      	sub	sp, #12
 80007f0:	af00      	add	r7, sp, #0
 80007f2:	6078      	str	r0, [r7, #4]
 80007f4:	460b      	mov	r3, r1
 80007f6:	70fb      	strb	r3, [r7, #3]
 80007f8:	4613      	mov	r3, r2
 80007fa:	70bb      	strb	r3, [r7, #2]

	if(value == GPIO_PIN_SET){
 80007fc:	78bb      	ldrb	r3, [r7, #2]
 80007fe:	2b01      	cmp	r3, #1
 8000800:	d109      	bne.n	8000816 <GPIO_WriteToOutputPin+0x2a>
		// write 1 to the Output Data Register (ODT) at the bit field corresponding to the pin number
		pGPIOx->ODR |= (1 << PinNumber);
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	695b      	ldr	r3, [r3, #20]
 8000806:	78fa      	ldrb	r2, [r7, #3]
 8000808:	2101      	movs	r1, #1
 800080a:	fa01 f202 	lsl.w	r2, r1, r2
 800080e:	431a      	orrs	r2, r3
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	615a      	str	r2, [r3, #20]
	}else{
		// write 0
		pGPIOx->ODR &= ~(1 << PinNumber);
	}

}
 8000814:	e009      	b.n	800082a <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	695b      	ldr	r3, [r3, #20]
 800081a:	78fa      	ldrb	r2, [r7, #3]
 800081c:	2101      	movs	r1, #1
 800081e:	fa01 f202 	lsl.w	r2, r1, r2
 8000822:	43d2      	mvns	r2, r2
 8000824:	401a      	ands	r2, r3
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	615a      	str	r2, [r3, #20]
}
 800082a:	bf00      	nop
 800082c:	370c      	adds	r7, #12
 800082e:	46bd      	mov	sp, r7
 8000830:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000834:	4770      	bx	lr
	...

08000838 <main>:

void delay(void){
	for(uint32_t i = 0; i < 500000/2; i++ );
}

int main(void){
 8000838:	b580      	push	{r7, lr}
 800083a:	b086      	sub	sp, #24
 800083c:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GpioBtn;

	// Initialising Led
	GpioLed.pGPIOx = GPIOA;
 800083e:	4b1d      	ldr	r3, [pc, #116]	; (80008b4 <main+0x7c>)
 8000840:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000842:	2305      	movs	r3, #5
 8000844:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000846:	2301      	movs	r3, #1
 8000848:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800084a:	2302      	movs	r3, #2
 800084c:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800084e:	2300      	movs	r3, #0
 8000850:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000852:	2300      	movs	r3, #0
 8000854:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000856:	2101      	movs	r1, #1
 8000858:	4816      	ldr	r0, [pc, #88]	; (80008b4 <main+0x7c>)
 800085a:	f7ff fced 	bl	8000238 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800085e:	f107 030c 	add.w	r3, r7, #12
 8000862:	4618      	mov	r0, r3
 8000864:	f7ff fdfc 	bl	8000460 <GPIO_Init>

	// Initialising Button
	GpioBtn.pGPIOx = GPIOB;
 8000868:	4b13      	ldr	r3, [pc, #76]	; (80008b8 <main+0x80>)
 800086a:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800086c:	230c      	movs	r3, #12
 800086e:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000870:	2300      	movs	r3, #0
 8000872:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000874:	2302      	movs	r3, #2
 8000876:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000878:	2300      	movs	r3, #0
 800087a:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOB, ENABLE);
 800087c:	2101      	movs	r1, #1
 800087e:	480e      	ldr	r0, [pc, #56]	; (80008b8 <main+0x80>)
 8000880:	f7ff fcda 	bl	8000238 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 8000884:	463b      	mov	r3, r7
 8000886:	4618      	mov	r0, r3
 8000888:	f7ff fdea 	bl	8000460 <GPIO_Init>


	while(1){

		if(GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == BUTTON_PRESSED){
 800088c:	210c      	movs	r1, #12
 800088e:	480a      	ldr	r0, [pc, #40]	; (80008b8 <main+0x80>)
 8000890:	f7ff ff96 	bl	80007c0 <GPIO_ReadFromInputPin>
 8000894:	4603      	mov	r3, r0
 8000896:	2b00      	cmp	r3, #0
 8000898:	d105      	bne.n	80008a6 <main+0x6e>
			GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, HIGH);
 800089a:	2201      	movs	r2, #1
 800089c:	2105      	movs	r1, #5
 800089e:	4805      	ldr	r0, [pc, #20]	; (80008b4 <main+0x7c>)
 80008a0:	f7ff ffa4 	bl	80007ec <GPIO_WriteToOutputPin>
 80008a4:	e7f2      	b.n	800088c <main+0x54>
		}else{
			GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, LOW);
 80008a6:	2200      	movs	r2, #0
 80008a8:	2105      	movs	r1, #5
 80008aa:	4802      	ldr	r0, [pc, #8]	; (80008b4 <main+0x7c>)
 80008ac:	f7ff ff9e 	bl	80007ec <GPIO_WriteToOutputPin>
		if(GPIO_ReadFromInputPin(GPIOB, GPIO_PIN_NO_12) == BUTTON_PRESSED){
 80008b0:	e7ec      	b.n	800088c <main+0x54>
 80008b2:	bf00      	nop
 80008b4:	40020000 	.word	0x40020000
 80008b8:	40020400 	.word	0x40020400

080008bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008bc:	480d      	ldr	r0, [pc, #52]	; (80008f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008be:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80008c0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008c4:	480c      	ldr	r0, [pc, #48]	; (80008f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80008c6:	490d      	ldr	r1, [pc, #52]	; (80008fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80008c8:	4a0d      	ldr	r2, [pc, #52]	; (8000900 <LoopForever+0xe>)
  movs r3, #0
 80008ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80008cc:	e002      	b.n	80008d4 <LoopCopyDataInit>

080008ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80008ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80008d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80008d2:	3304      	adds	r3, #4

080008d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008d8:	d3f9      	bcc.n	80008ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008da:	4a0a      	ldr	r2, [pc, #40]	; (8000904 <LoopForever+0x12>)
  ldr r4, =_ebss
 80008dc:	4c0a      	ldr	r4, [pc, #40]	; (8000908 <LoopForever+0x16>)
  movs r3, #0
 80008de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008e0:	e001      	b.n	80008e6 <LoopFillZerobss>

080008e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008e4:	3204      	adds	r2, #4

080008e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008e8:	d3fb      	bcc.n	80008e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80008ea:	f000 f811 	bl	8000910 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008ee:	f7ff ffa3 	bl	8000838 <main>

080008f2 <LoopForever>:

LoopForever:
    b LoopForever
 80008f2:	e7fe      	b.n	80008f2 <LoopForever>
  ldr   r0, =_estack
 80008f4:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 80008f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008fc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000900:	08000978 	.word	0x08000978
  ldr r2, =_sbss
 8000904:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000908:	2000001c 	.word	0x2000001c

0800090c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800090c:	e7fe      	b.n	800090c <ADC_IRQHandler>
	...

08000910 <__libc_init_array>:
 8000910:	b570      	push	{r4, r5, r6, lr}
 8000912:	4e0d      	ldr	r6, [pc, #52]	; (8000948 <__libc_init_array+0x38>)
 8000914:	4c0d      	ldr	r4, [pc, #52]	; (800094c <__libc_init_array+0x3c>)
 8000916:	1ba4      	subs	r4, r4, r6
 8000918:	10a4      	asrs	r4, r4, #2
 800091a:	2500      	movs	r5, #0
 800091c:	42a5      	cmp	r5, r4
 800091e:	d109      	bne.n	8000934 <__libc_init_array+0x24>
 8000920:	4e0b      	ldr	r6, [pc, #44]	; (8000950 <__libc_init_array+0x40>)
 8000922:	4c0c      	ldr	r4, [pc, #48]	; (8000954 <__libc_init_array+0x44>)
 8000924:	f000 f818 	bl	8000958 <_init>
 8000928:	1ba4      	subs	r4, r4, r6
 800092a:	10a4      	asrs	r4, r4, #2
 800092c:	2500      	movs	r5, #0
 800092e:	42a5      	cmp	r5, r4
 8000930:	d105      	bne.n	800093e <__libc_init_array+0x2e>
 8000932:	bd70      	pop	{r4, r5, r6, pc}
 8000934:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000938:	4798      	blx	r3
 800093a:	3501      	adds	r5, #1
 800093c:	e7ee      	b.n	800091c <__libc_init_array+0xc>
 800093e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000942:	4798      	blx	r3
 8000944:	3501      	adds	r5, #1
 8000946:	e7f2      	b.n	800092e <__libc_init_array+0x1e>
 8000948:	08000970 	.word	0x08000970
 800094c:	08000970 	.word	0x08000970
 8000950:	08000970 	.word	0x08000970
 8000954:	08000974 	.word	0x08000974

08000958 <_init>:
 8000958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095a:	bf00      	nop
 800095c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800095e:	bc08      	pop	{r3}
 8000960:	469e      	mov	lr, r3
 8000962:	4770      	bx	lr

08000964 <_fini>:
 8000964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000966:	bf00      	nop
 8000968:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800096a:	bc08      	pop	{r3}
 800096c:	469e      	mov	lr, r3
 800096e:	4770      	bx	lr
